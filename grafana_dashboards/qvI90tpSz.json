{
    "meta": {
        "type": "db",
        "canSave": true,
        "canEdit": true,
        "canAdmin": true,
        "canStar": true,
        "canDelete": true,
        "slug": "piano-app-desktop-with-last-hour-2b-fever-dev",
        "url": "/d/qvI90tpSz/piano-app-desktop-with-last-hour-2b-fever-dev",
        "expires": "0001-01-01T00:00:00Z",
        "created": "2024-07-29T12:45:05Z",
        "updated": "2024-07-30T05:43:18Z",
        "updatedBy": "Anonymous",
        "createdBy": "Anonymous",
        "version": 2,
        "hasAcl": false,
        "isFolder": false,
        "folderId": 660,
        "folderUid": "folder-F9a5Uxn4k",
        "folderTitle": "Prototypes",
        "folderUrl": "/dashboards/f/folder-F9a5Uxn4k/prototypes",
        "provisioned": false,
        "provisionedExternalId": "",
        "annotationsPermissions": {
            "dashboard": {
                "canAdd": true,
                "canEdit": true,
                "canDelete": true
            },
            "organization": {
                "canAdd": true,
                "canEdit": true,
                "canDelete": true
            }
        }
    },
    "dashboard": {
        "annotations": {
            "list": [
                {
                    "builtIn": 1,
                    "datasource": {
                        "type": "grafana",
                        "uid": "-- Grafana --"
                    },
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "target": {
                        "limit": 100,
                        "matchAny": false,
                        "tags": [],
                        "type": "dashboard"
                    },
                    "type": "dashboard"
                }
            ]
        },
        "description": "V3 Verlaufsiagramm",
        "editable": true,
        "fiscalYearStartMonth": 0,
        "graphTooltip": 0,
        "id": 1403,
        "links": [],
        "liveNow": false,
        "panels": [
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 8,
                    "w": 24,
                    "x": 0,
                    "y": 0
                },
                "id": 150,
                "options": {
                    "baidu": {
                        "callback": "bmapReady",
                        "key": ""
                    },
                    "editor": {
                        "format": "auto",
                        "height": 600
                    },
                    "gaode": {
                        "key": "",
                        "plugin": "AMap.Scale,AMap.ToolBar"
                    },
                    "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.name === 'visits_past_5_minutes').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  let sTime = s.fields.find((f) => f.name === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values.buffer;\n  const type = s.fields.find((f) => f.name === 'type').values.buffer[0]\n  if (type === \"bar\") {\n    sTime = sTime.map(timestamp => {\n      const date = new Date(timestamp);\n      const day = date.getDate().toString().padStart(2, '0'); // Ensure two digits\n      const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based\n      return `${day}.${month}`; // Format as DD.MM\n    });\n  }\n  const refId = s.fields.find((f) => f.name === \"refId\").values.buffer[0]\n  const glaettung = s.fields.find((f) => f.name === 'glaettung').values.buffer[0]\n  const zeitraum = s.fields.find((f) => f.name === 'zeitraum').values.buffer[0]\n  let color;\n  console.log(glaettung, \"Glaettung\")\n  console.log(zeitraum, \"Zeitraum\")\n  if (glaettung === \"Gl\u00e4tten\" && zeitraum === \"Zeitraum\" && type === \"line\") {\n    color = \"#6aaa96\"; // heute // Light Petrol\n  } else if (glaettung === \"Gl\u00e4tten\" && zeitraum != \"Zeitraum\" && type === \"line\") {\n    color = \"#004c6d\"; // gestern / dark Petrol\n  } else if (glaettung != \"Gl\u00e4tten\" && zeitraum === \"Zeitraum\" && type === \"line\") {\n    color = \"#6aaa96\"; // heute // Light Petrol\n  } else if (glaettung != \"Gl\u00e4tten\" && zeitraum != \"Zeitraum\" && type === \"line\") {\n    color = \"#004c6d\"; // gestern / dark Petrol\n  }\n  else if (type === \"bar\" && zeitraum === \"Zeitraum\") {\n    color = \"#6aaa96\"; // heute // Light Petrol\n  }\n  else if (type === \"bar\" && zeitraum != \"Zeitraum\") {\n    color = \"#004c6d\"; // gestern / dark Petrol\n  }\n  console.log(\"COLOR\", color)\n  return {\n    name: refId,\n    type: type,\n    showSymbol: false,\n    smooth: true,\n    areaStyle: {\n      opacity: 0.9,\n    },\n    itemStyle: {\n      color: color,\n    },\n    lineStyle: {\n      width: 1,\n      color\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\nconst xAxisType = data.series.map((s) => {\n  const type = s.fields.find((f) => f.name === 'type').values.buffer[0]\n  let xAxisType;\n  if (type == \"bar\") {\n    xAxisType = \"category\"\n  }\n  else {\n    xAxisType = \"time\"\n  }\n  return xAxisType\n})[0]\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    formatter: function (params) {\n      let tooltipContent = '';\n      params.forEach(function (item) {\n        const date = new Date(item.data[0]);\n        const tenMinutesInMilliseconds = 10 * 60 * 1000; // 10 minutes in milliseconds\n        const date_start = new Date(date.getTime() - tenMinutesInMilliseconds);\n        console.log(\"Date start\", date_start)\n        // const date_start = new Date(item.data[0]);\n        //date_start.setMinutes(date.getMinutes() - 10)\n\n        let hours = date.getHours().toString().padStart(2, '0');\n        let minutes = date.getMinutes().toString().padStart(2, '0');\n        let hours_start = date_start.getHours().toString().padStart(2, '0');\n        let minutes_start = date_start.getMinutes().toString().padStart(2, '0');\n        const timeString = hours_start + ':' + minutes_start;\n        const timestring_end = hours + ':' + minutes;\n        const intervalString = timeString + '-' + timestring_end\n\n        let number = Math.floor(item.data[1]);\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n\n        if (item.componentSubType === \"bar\") {\n          tooltipContent += item.marker + item.seriesName + \" Visits: \" + formattedNumber + '<br/>';\n        }\n        else {\n          tooltipContent += item.marker + item.seriesName + \" \" + intervalString + \" Visits: \" + formattedNumber + '<br/>';\n        }\n      });\n      return tooltipContent;\n    }\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => {\n      const refId = s.fields.find((f) => f.name === \"refId\").values.buffer[0];\n      return refId;\n    }),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: xAxisType,\n  },\n  yAxis: {\n    type: 'value',\n    min: '0',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
                    "google": {
                        "callback": "gmapReady",
                        "key": ""
                    },
                    "map": "none",
                    "renderer": "canvas",
                    "themeEditor": {
                        "config": "{}",
                        "height": 400,
                        "name": "default"
                    }
                },
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH sumdata AS (\n  SELECT\n    TIMESTAMP(tmstp) as tmstp,\n    MAX(m_visits) as m_visits FROM\n     `Piano.total_visits${feverCurveDataset:raw}`\n  WHERE\n  site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND $Zeitraum\n  GROUP by tmstp\n  ORDER BY tmstp DESC\n  ${lim}\n),\nlagged_data AS (\n  SELECT\n    TIMESTAMP(tmstp) as time,\n    m_visits - LAG(m_visits) OVER (\n      ORDER BY\n        tmstp\n    ) as visits_past_5_minutes,\n    LAG(m_visits) OVER (ORDER BY tmstp) as prev_m_visits,\n    LAG(TIMESTAMP(tmstp)) OVER (ORDER BY tmstp) as pre_timestamp,\n    m_visits\n  FROM\n    sumdata\n    \n),\nadjusted_lagged_data AS (\n    SELECT\n        time,\n        pre_timestamp,\n        -- Calculate time difference in minutes\n        TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) as time_diff,\n        -- Adjust visits count based on time difference\n           CASE\n      WHEN FALSE AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10 OR TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) < 10 AND \"${Glaettung:text}\" = \"Gl\u00e4tten\" THEN\n        (m_visits - prev_m_visits) / TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) * 10\n      ELSE\n        m_visits - prev_m_visits\n        END as visits_past_5_minutes\n    FROM\n        lagged_data\n        WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) >= 10\n      ORDER BY time DESC\n      ${lim}\n),\n\ndaily_data AS (\n  SELECT\n     TIMESTAMP(date) as time,\n    SUM(m_visits) as visits_past_5_minutes\n  FROM\n    `Piano.total_visits${feverCurveDataset:raw}`\n  WHERE\n  site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND $Zeitraum\n  GROUP BY date\n)\n\nSELECT\n    DATE_SUB(TIMESTAMP_ADD(time, INTERVAL 1 SECOND), INTERVAL 1 hour) as time,\n  visits_past_5_minutes, \"${type}\" as type, \"${Zeitraumlabels:text}\" as refId,\n     \"${Glaettung:text}\" as glaettung,\n   \"Zeitraum\" as zeitraum\nFROM\n  ${dataset}\nWHERE\n  visits_past_5_minutes IS NOT NULL\n  AND $Zeitraumfever \nORDER BY\n  time ASC\n${lim}\n",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "hide": false,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH min_time AS (\n      SELECT\n        MIN(tmstp) as min_tmstp,\n        MAX(tmstp) as max_tmstp\n        FROM\n      (SELECT tmstp\n      from\n        `Piano.total_visits${feverCurveDataset:raw}`\n      WHERE\n        $Zeitraum\n        AND site_level2 = '${app_name}'\n        AND page_chapter1 = \"Alle Kapitel 1\"\n        AND page_chapter2 = \"Alle Kapitel 2\"\n        AND sendungs_id = \"Alle Sendungs-ID\"\n        AND CASE\n          \"$LRA\"\n          WHEN \"ndr.de\" THEN True\n          ELSE (\n            CASE\n              \"$Redaktionen\"\n              WHEN \"Brisant\" THEN origin = \"sendung\"\n              WHEN \"Jump\" THEN origin = \"sendung\"\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\n              ELSE True\n            END\n          )\n        END\n        ORDER BY tmstp DESC\n        ${lim}\n        )\n    ),\nsumdata AS (\n  SELECT\n    TIMESTAMP(tmstp) as tmstp,\n    MAX(m_visits) as m_visits FROM\n     `Piano.total_visits${feverCurveDataset:raw}`\n  WHERE\n  site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND $Vergleichszeitraum \n    AND tmstp <= (SELECT DATETIME_SUB(MAX(tmstp), INTERVAL 1 HOUR) from  `Piano.total_visits${feverCurveDataset:raw}` WHERE $Zeitraum )\n    AND  CASE \"${Zeitraum:text}\" WHEN \"Gestern\" THEN TRUE ELSE EXTRACT(HOUR from tmstp) <= (SELECT EXTRACT(HOUR FROM MAX(tmstp)) from  `Piano.total_visits${feverCurveDataset:raw}` WHERE $Zeitraum ) END\n  GROUP by tmstp\n  ORDER BY tmstp DESC\n),\nlagged_data AS (\n  SELECT\n    TIMESTAMP(tmstp) as time,\n    m_visits - LAG(m_visits) OVER (\n      ORDER BY\n        tmstp\n    ) as visits_past_5_minutes,\n    m_visits,\n    LAG(m_visits) OVER (ORDER BY tmstp) as prev_m_visits,\n    LAG(TIMESTAMP(tmstp)) OVER (ORDER BY tmstp) as pre_timestamp\n\n  FROM\n    sumdata\n),\nadjusted_lagged_data AS (\n    SELECT\n        time,\n        pre_timestamp,\n        -- Calculate time difference in minutes\n        TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) as time_diff,\n        -- Adjust visits count based on time difference\n           CASE\n      WHEN FALSE AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10 OR TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) < 10 AND \"${Glaettung:text}\" = \"Gl\u00e4tten\" THEN\n        (m_visits - prev_m_visits) / TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) * 10\n      ELSE\n        m_visits - prev_m_visits\n        END as visits_past_5_minutes\n    FROM\n        lagged_data\n        WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) >= 10\n),\ndaily_data AS (\n  SELECT\n     TIMESTAMP(date) as time,\n    SUM(m_visits) as visits_past_5_minutes, \n  FROM\n    `Piano.total_visits${feverCurveDataset:raw}`\n  WHERE\n    site_level2 = '${app_name}'\n    AND page_chapter1 = \"Alle Kapitel 1\"\n    AND page_chapter2 = \"Alle Kapitel 2\"\n    AND sendungs_id = \"Alle Sendungs-ID\"\n    AND $Vergleichszeitraum\n    GROUP BY date\n)\n\nSELECT\n  DATE_SUB(DATE_ADD(TIMESTAMP_ADD(time, INTERVAL 1 SECOND), INTERVAL ${time_shift} DAY), INTERVAL 1 HOUR) as time , \n  visits_past_5_minutes, \"${type}\" as type, \n   \"${Vergleichszeitraumlabels:text}\" as refId,\n      \"${Glaettung:text}\" as glaettung,\n   \"Vergleichszeitraum\" as zeitraum\nFROM\n  ${dataset}\nWHERE\n  visits_past_5_minutes IS NOT NULL\n  AND $Vergleichszeitraumfever \nORDER BY\n  time ASC\n${lim}\n",
                        "refId": "B",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "title": "Verlaufsdiagramm Visits",
                "type": "volkovlabs-echarts-panel"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 8
                },
                "id": 148,
                "options": {
                    "code": {
                        "language": "plaintext",
                        "showLineNumbers": false,
                        "showMiniMap": false
                    },
                    "content": " ",
                    "mode": "html"
                },
                "pluginVersion": "9.2.3",
                "transparent": true,
                "type": "text"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "#f5f5f5",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 2,
                    "w": 5,
                    "x": 0,
                    "y": 9
                },
                "id": 30,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "textMode": "value"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Visits')), 'Visits')\r\nFROM(\r\nSELECT 'Visits' as Visits\r\n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "#f5f5f5",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 2,
                    "w": 5,
                    "x": 5,
                    "y": 9
                },
                "id": 48,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "textMode": "value"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Page Views / Visits')), 'Page Views / Visits')\r\nFROM(\r\nSELECT 'Page Views / Visits' as pi_visits\r\n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "#f5f5f5",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 2,
                    "w": 5,
                    "x": 10,
                    "y": 9
                },
                "id": 128,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "textMode": "value"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Time spent / Visit in s')), 'Time spent / Visit in s')\r\nFROM(\r\nSELECT 'Time spent / Visit in s' as Audio_Videostarts\r\n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "summe"
                            },
                            "properties": [
                                {
                                    "id": "unit",
                                    "value": "locale"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 6,
                    "w": 3,
                    "x": 0,
                    "y": 11
                },
                "id": 14,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "textMode": "value_and_name"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "hide": false,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH adjusted_lagged_data AS (\n  SELECT\n     MAX(m_visits) as summe FROM\n     `Piano.total_visits${feverCurveDataset:raw}`\n  WHERE\n  site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\n),\ndaily_data AS (SELECT\n  sum(m_visits) as summe\nFROM\n  `Piano.total_visits${dataset_zeitraum:raw}`\nWHERE site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\n  )\nSELECT * FROM ${dataset_not_fevercurve} ",
                        "refId": "B",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {
                                "f0_": false
                            },
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "${Zeitraum:text}",
                                "summe": "${Zeitraumlabels:text} ${Uhrzeit:text}",
                                "visits": "${Zeitraum:text}"
                            }
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "summe"
                            },
                            "properties": [
                                {
                                    "id": "unit",
                                    "value": "locale"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 3,
                    "w": 2,
                    "x": 3,
                    "y": 11
                },
                "id": 18,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "textMode": "value_and_name"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH adjusted_lagged_data AS (\r\n  SELECT\r\n    MAX(COALESCE(m_visits,0)) AS summe FROM\r\n     `Piano.total_visits${feverCurveDataset:raw}`\r\n  WHERE\r\n  site_level2 = '${app_name}'\r\n  AND page_chapter1 = \"Alle Kapitel 1\"\r\n  AND page_chapter2 = \"Alle Kapitel 2\"\r\n  AND sendungs_id = \"Alle Sendungs-ID\"\r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  AND tmstp <= \"${comp_fever}\"\r\n),\r\ndaily_data AS (SELECT\r\n  SUM(COALESCE(m_visits,0)) AS summe\r\nFROM\r\n `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\r\nWHERE site_level2 = '${app_name}'\r\n  AND page_chapter1 = \"Alle Kapitel 1\"\r\n  AND page_chapter2 = \"Alle Kapitel 2\"\r\n  AND sendungs_id = \"Alle Sendungs-ID\"\r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  )\r\nSELECT * FROM ${dataset_not_fevercurve}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "${Vergleichszeitraumlabels:text}",
                                "summe": "${Vergleichszeitraumlabels:text} ${Uhrzeit:text}"
                            }
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "PI_per_visit"
                            },
                            "properties": [
                                {
                                    "id": "unit",
                                    "value": "locale"
                                },
                                {
                                    "id": "decimals",
                                    "value": 1
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 6,
                    "w": 3,
                    "x": 5,
                    "y": 11
                },
                "id": 22,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "textMode": "value_and_name"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "hide": false,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT\n  SUM(COALESCE(m_page_loads,0))/SUM(COALESCE(m_visits,1)) as PI_per_visit,\nFROM\n  Piano.total_visits\nWHERE site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}",
                        "refId": "B",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "PI_per_visit": "${Zeitraumlabels:text} ${Uhrzeit:text}",
                                "bounce": "${Zeitraum:text}",
                                "bounce_rate": "${Zeitraum:text}",
                                "f0_": "${Zeitraum:text}",
                                "summe": "${Zeitraum:text}"
                            }
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "PI_per_visit"
                            },
                            "properties": [
                                {
                                    "id": "unit",
                                    "value": "locale"
                                },
                                {
                                    "id": "decimals",
                                    "value": 1
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 3,
                    "w": 2,
                    "x": 8,
                    "y": 11
                },
                "id": 24,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH adjusted_lagged_data AS (\r\n  SELECT\r\n  MAX(COALESCE(m_page_loads,0))/MAX(COALESCE(m_visits,1)) as PI_per_visit,\r\nFROM\r\n  `Piano.total_visits${feverCurveDataset:raw}`\r\nWHERE site_level2 = '${app_name}'\r\n  AND page_chapter1 = \"Alle Kapitel 1\"\r\n  AND page_chapter2 = \"Alle Kapitel 2\"\r\n  AND sendungs_id = \"Alle Sendungs-ID\"\r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  AND tmstp <= \"${comp_fever}\"\r\n),\r\ndaily_data AS (SELECT\r\n  SUM(COALESCE(m_page_loads,0))/SUM(COALESCE(m_visits,1)) as PI_per_visit,\r\nFROM\r\n  Piano.total_visits\r\nWHERE site_level2 = '${app_name}'\r\n  AND page_chapter1 = \"Alle Kapitel 1\"\r\n  AND page_chapter2 = \"Alle Kapitel 2\"\r\n  AND sendungs_id = \"Alle Sendungs-ID\"\r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  )\r\nSELECT * FROM ${dataset_not_fevercurve}\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "PI_per_visit": "${Vergleichszeitraumlabels:text} ${Uhrzeit:text}",
                                "bounce": "${Vergleichszeitraum:text}",
                                "bounce_rate": "${Vergleichszeitraumlabels:text}",
                                "summe": "${Vergleichszeitraum:text}"
                            }
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "time_spent"
                            },
                            "properties": [
                                {
                                    "id": "unit",
                                    "value": "locale"
                                },
                                {
                                    "id": "decimals",
                                    "value": 1
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 6,
                    "w": 3,
                    "x": 10,
                    "y": 11
                },
                "id": 147,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "hide": false,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT\n  SUM(m_visits * m_time_spent_per_visits/1000) / SUM(m_visits) AS time_spent\nFROM\n  Piano.total_visits\nWHERE site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}",
                        "refId": "B",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "PI_per_visit": "${Zeitraum:text}",
                                "impression_durchschnitt": "${Zeitraum:text}",
                                "time_spent": "${Zeitraumlabels:text} ${Uhrzeit:text}"
                            }
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "time_spent"
                            },
                            "properties": [
                                {
                                    "id": "unit",
                                    "value": "locale"
                                },
                                {
                                    "id": "decimals",
                                    "value": 1
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 3,
                    "w": 2,
                    "x": 13,
                    "y": 11
                },
                "id": 46,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH adjusted_lagged_data AS (\r\n SELECT\r\n    MAX(m_visits * m_time_spent_per_visits/1000) / MAX(m_visits) AS time_spent\r\nFROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`\r\nWHERE site_level2 = '${app_name}'\r\n  AND page_chapter1 = \"Alle Kapitel 1\"\r\n  AND page_chapter2 = \"Alle Kapitel 2\"\r\n  AND sendungs_id = \"Alle Sendungs-ID\"\r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  AND tmstp <= \"${comp_fever}\"\r\n),\r\ndaily_data AS (SELECT\r\n    SUM(m_visits * m_time_spent_per_visits/1000) / SUM(m_visits) AS time_spent\r\nFROM\r\n    Piano.total_visits\r\nWHERE site_level2 = '${app_name}'\r\n  AND page_chapter1 = \"Alle Kapitel 1\"\r\n  AND page_chapter2 = \"Alle Kapitel 2\"\r\n  AND sendungs_id = \"Alle Sendungs-ID\"\r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  )\r\nSELECT * FROM ${dataset_not_fevercurve}",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {
                                "PI_per_visit": false
                            },
                            "indexByName": {},
                            "renameByName": {
                                "PI_per_visit": "${Vergleichszeitraumlabels:text}",
                                "impression_durchschnitt": "${Vergleichszeitraum:text}",
                                "time_spent": "${Vergleichszeitraumlabels:text} ${Uhrzeit:text}",
                                "verweildauer": "${Vergleichszeitraumlabels:text}"
                            }
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Differenz"
                            },
                            "properties": [
                                {
                                    "id": "unit",
                                    "value": "percent"
                                },
                                {
                                    "id": "decimals",
                                    "value": 1
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 3,
                    "w": 2,
                    "x": 3,
                    "y": 14
                },
                "id": 20,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "hide": false,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH past_value as(\nWITH adjusted_lagged_data AS (\n  SELECT\n    MAX(COALESCE(m_visits,0)) AS summe FROM\n     `Piano.total_visits${feverCurveDataset:raw}`\n  WHERE\n  site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\n  AND tmstp <= \"${comp_fever}\"\n  GROUP BY date\n),\ndaily_data AS (SELECT\n  SUM(COALESCE(m_visits,0)) AS summe\nFROM\n    `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\nWHERE site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\n  )\nSELECT summe as past_sum FROM ${dataset_not_fevercurve}\n), current_value AS (\n  WITH adjusted_lagged_data AS (\n  SELECT\n     MAX(m_visits) as summe FROM\n     `Piano.total_visits${feverCurveDataset:raw}`\n  WHERE\n  site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\n),\ndaily_data AS (SELECT\n  sum(m_visits) as summe\nFROM\n    `Piano.total_visits${dataset_zeitraum:raw}`\nWHERE site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\n  )\nSELECT summe as current_sum FROM ${dataset_not_fevercurve}\n)\n\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
                        "refId": "C",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Differenz",
                                "relative_difference": "Differenz"
                            }
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Differenz"
                            },
                            "properties": [
                                {
                                    "id": "unit",
                                    "value": "percent"
                                },
                                {
                                    "id": "decimals",
                                    "value": 1
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 3,
                    "w": 2,
                    "x": 8,
                    "y": 14
                },
                "id": 26,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "hide": false,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH past_value as(\nWITH adjusted_lagged_data AS (\n  SELECT\n  MAX(COALESCE(m_page_loads,0))/MAX(COALESCE(m_visits,1)) as summe,\nFROM\n  `Piano.total_visits${feverCurveDataset:raw}`\nWHERE site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\n  AND tmstp <= \"${comp_fever}\"\n),\ndaily_data AS (SELECT\n  SUM(COALESCE(m_page_loads,0))/SUM(COALESCE(m_visits,1)) as summe,\nFROM\n    `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\nWHERE site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\n  )\nSELECT summe as past_sum FROM ${dataset_not_fevercurve}), current_value AS (\nSELECT\n  SUM(COALESCE(m_page_loads,0))/SUM(COALESCE(m_visits,1)) as current_sum,\nFROM\n    `Piano.total_visits${dataset_zeitraum:raw}`\nWHERE site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\n  )\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
                        "refId": "B",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Differenz",
                                "relative_difference": "Differenz"
                            }
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Differenz"
                            },
                            "properties": [
                                {
                                    "id": "unit",
                                    "value": "percent"
                                },
                                {
                                    "id": "decimals",
                                    "value": 1
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 3,
                    "w": 2,
                    "x": 13,
                    "y": 14
                },
                "id": 44,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "hide": false,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH past_value as(\nWITH adjusted_lagged_data AS (\n SELECT\n    MAX(m_visits * m_time_spent_per_visits/1000) / MAX(m_visits) AS summe\nFROM\n    `Piano.total_visits${feverCurveDataset:raw}`\nWHERE site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\n  AND tmstp <= \"${comp_fever}\"\n),\ndaily_data AS (SELECT\n    SUM(m_visits * m_time_spent_per_visits/1000) / SUM(m_visits) AS summe\nFROM\n      `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\nWHERE site_level2 = '${app_name}'\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\n  )\nSELECT summe as past_sum FROM ${dataset_not_fevercurve}), current_value AS (\nSELECT \n   SUM(m_visits * m_time_spent_per_visits/1000) / SUM(m_visits) AS current_sum,\nFROM \n    `Piano.total_visits${dataset_zeitraum:raw}`\nWHERE site_level2 = \"${app_name}\"\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\n)\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
                        "refId": "B",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Differenz"
                            }
                        }
                    }
                ],
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 17
                },
                "id": 139,
                "options": {
                    "code": {
                        "language": "plaintext",
                        "showLineNumbers": false,
                        "showMiniMap": false
                    },
                    "content": " ",
                    "mode": "html"
                },
                "pluginVersion": "9.2.3",
                "transparent": true,
                "type": "text"
            },
            {
                "collapsed": false,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 18
                },
                "id": 60,
                "panels": [],
                "title": "Top Inhalte",
                "type": "row"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "custom": {
                            "align": "auto",
                            "displayMode": "auto",
                            "filterable": true,
                            "inspect": false
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "bounce_rate * 100"
                            },
                            "properties": [
                                {
                                    "id": "custom.displayMode",
                                    "value": "gradient-gauge"
                                },
                                {
                                    "id": "color",
                                    "value": {
                                        "fixedColor": "#00b0de",
                                        "mode": "fixed"
                                    }
                                },
                                {
                                    "id": "unit",
                                    "value": "percent"
                                },
                                {
                                    "id": "displayName",
                                    "value": "Bounce Rate"
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Page Views"
                            },
                            "properties": [
                                {
                                    "id": "unit",
                                    "value": "locale"
                                },
                                {
                                    "id": "displayName",
                                    "value": "Page Views"
                                },
                                {
                                    "id": "custom.width",
                                    "value": 180
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "content_id_sophora"
                            },
                            "properties": [
                                {
                                    "id": "displayName",
                                    "value": "Sophora ID"
                                },
                                {
                                    "id": "custom.width",
                                    "value": 200
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Visits"
                            },
                            "properties": [
                                {
                                    "id": "displayName",
                                    "value": "Visits"
                                },
                                {
                                    "id": "unit",
                                    "value": "locale"
                                },
                                {
                                    "id": "custom.width",
                                    "value": 90
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Stories"
                            },
                            "properties": [
                                {
                                    "id": "custom.width",
                                    "value": 300
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Datum"
                            },
                            "properties": [
                                {
                                    "id": "custom.width",
                                    "value": 200
                                },
                                {
                                    "id": "unit",
                                    "value": "time: DD.MM.YY | HH:mm \\U\\h\\r"
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Type"
                            },
                            "properties": [
                                {
                                    "id": "custom.width",
                                    "value": 200
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 11,
                    "w": 24,
                    "x": 0,
                    "y": 19
                },
                "id": 62,
                "options": {
                    "footer": {
                        "enablePagination": true,
                        "fields": "",
                        "reducer": [
                            "sum"
                        ],
                        "show": false
                    },
                    "frameIndex": 1,
                    "showHeader": true
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "hide": false,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "-- cache version\nSELECT\n  publishing_date as Datum,\n  content_titel as Artikel,\n  sum(m_visits) as Visits,\n  sum(m_page_loads) as page_views,\n  content_id_sophora,\n  '' as Type\nFROM\n  (\n    SELECT\n      --publishing_date,\n      FIRST_VALUE(publishing_date) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as publishing_date, \n      FIRST_VALUE(content_id_sophora) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as content_id_sophora, \n      m_visits,\n      m_page_loads,\n      FIRST_VALUE(content_titel) OVER ( PARTITION BY uuid ORDER BY publishing_date DESC) as content_titel\n    FROM\n      $table\n    WHERE\n      site_level2 = '${app_name}'\n      AND content_id_sophora NOT LIKE '%index%'\n      AND content_id_sophora NOT LIKE '%N/A%'\n      AND (\n        CASE \n            WHEN \"$LRA\" = 'NDR' THEN\n                content_titel NOT LIKE '%Video Livestream%'\n            AND content_titel NOT LIKE '%Startteaser%'\n            AND content_titel NOT LIKE '%startteaser%'\n            AND content_titel NOT LIKE '%-Anmelden%'\n            AND content_titel NOT LIKE '%_Start'\n            AND content_titel != 'Anmelden'\n            AND content_titel != 'Jetzt l\u00e4uft'\n        ELSE\n          TRUE\n        END)\n      AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\n  )\nGROUP BY\n  content_id_sophora,\n  content_titel,\n  publishing_date\nORDER BY\n  3 DESC\nLIMIT\n  100",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {
                                "bounce_rate": true,
                                "bounce_rate * 100": false,
                                "m_homepage_anteil_visits": true,
                                "m_homepage_anteil_visits * 100": false,
                                "m_suchmaschinen_anteil_visits": true,
                                "m_suchmaschinen_anteil_visits * 100": false
                            },
                            "indexByName": {},
                            "renameByName": {
                                "content_titel": "",
                                "distribution": "Locations",
                                "f0_": "Artikel",
                                "f1_": "Visits",
                                "f2_": "Page Impressions",
                                "f3_": "Bounce rate",
                                "f4_": "Suchmachinenanteil",
                                "f5_": "Homepageanteil",
                                "page_impression": "",
                                "page_views": "Page Views",
                                "publishing_date": "",
                                "uuid": "Sophora ID"
                            }
                        }
                    },
                    {
                        "id": "convertFieldType",
                        "options": {
                            "conversions": [
                                {
                                    "destinationType": "time",
                                    "targetField": "Datum"
                                }
                            ],
                            "fields": {}
                        }
                    }
                ],
                "type": "table"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 30
                },
                "id": 142,
                "options": {
                    "code": {
                        "language": "plaintext",
                        "showLineNumbers": false,
                        "showMiniMap": false
                    },
                    "content": " ",
                    "mode": "html"
                },
                "pluginVersion": "9.2.3",
                "transparent": true,
                "type": "text"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 31
                },
                "id": 140,
                "options": {
                    "code": {
                        "language": "plaintext",
                        "showLineNumbers": false,
                        "showMiniMap": false
                    },
                    "content": " ",
                    "mode": "html"
                },
                "pluginVersion": "9.2.3",
                "transparent": true,
                "type": "text"
            },
            {
                "collapsed": false,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 32
                },
                "id": 108,
                "panels": [],
                "title": "Distribution",
                "type": "row"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "palette-classic"
                        },
                        "custom": {
                            "hideFrom": {
                                "legend": false,
                                "tooltip": false,
                                "viz": false
                            }
                        },
                        "mappings": [],
                        "noValue": "-",
                        "unit": "locale"
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 33
                },
                "id": 114,
                "options": {
                    "displayLabels": [],
                    "legend": {
                        "displayMode": "table",
                        "placement": "right",
                        "showLegend": true,
                        "values": [
                            "percent",
                            "value"
                        ]
                    },
                    "pieType": "donut",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": true
                    },
                    "tooltip": {
                        "mode": "single",
                        "sort": "none"
                    }
                },
                "pluginVersion": "9.2.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "hide": false,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "-- cache version\nSELECT \n  SUM(m_visits), os_group \nFROM \n  ${distro_table:raw}\nWHERE site_level2 = \"${app_name}\"\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\n  AND device_type NOT LIKE '%N/A%'\nGROUP BY os_group\nORDER BY 1 DESC\n",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "title": "App | Distribution | $Zeitraumlabels",
                "type": "piechart"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "palette-classic"
                        },
                        "custom": {
                            "hideFrom": {
                                "legend": false,
                                "tooltip": false,
                                "viz": false
                            }
                        },
                        "mappings": [],
                        "unit": "locale"
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 33
                },
                "id": 118,
                "options": {
                    "legend": {
                        "displayMode": "table",
                        "placement": "right",
                        "showLegend": true,
                        "values": [
                            "percent",
                            "value"
                        ]
                    },
                    "pieType": "donut",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": true
                    },
                    "tooltip": {
                        "mode": "single",
                        "sort": "none"
                    }
                },
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT\ndevice_type,\nSUM(m_visits) as visits\nFROM\n  ${distro_table:raw}\nWHERE site_level2 = \"${app_name}\"\n  AND page_chapter1 = \"Alle Kapitel 1\"\n  AND page_chapter2 = \"Alle Kapitel 2\"\n  AND sendungs_id = \"Alle Sendungs-ID\"\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \n  AND device_type NOT LIKE '%N/A%'\nGROUP BY device_type \nORDER BY visits DESC \nLIMIT 10",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "title": "App | Devices | $Zeitraumlabels",
                "type": "piechart"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 41
                },
                "id": 144,
                "options": {
                    "code": {
                        "language": "plaintext",
                        "showLineNumbers": false,
                        "showMiniMap": false
                    },
                    "content": " ",
                    "mode": "html"
                },
                "pluginVersion": "9.2.3",
                "transparent": true,
                "type": "text"
            }
        ],
        "refresh": false,
        "schemaVersion": 37,
        "style": "dark",
        "tags": [],
        "templating": {
            "list": [
                {
                    "current": {
                        "selected": false,
                        "text": "13",
                        "value": "13"
                    },
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "filled_size",
                    "options": [
                        {
                            "selected": true,
                            "text": "13",
                            "value": "13"
                        }
                    ],
                    "query": "13",
                    "skipUrlSync": false,
                    "type": "custom"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "Vorletzte Stunde",
                        "value": "Vorletzte Stunde"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "Vergleichszeitraumlabels",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"Vorletzte Stunde\"\r\n  WHEN \"Heute\" THEN \"Gestern\"\r\n  WHEN \"Heute -7d\" THEN \"Heute vor 7 Tagen\"\r\n  WHEN \"Gestern\" THEN \"Gestern vor 7 Tagen\"\r\n  WHEN \"Letztes Wochenende\" THEN \"Vorletztes Wochenende\"\r\n  WHEN \"Letzte 7 Tage\" THEN \"Letzte 8-14 Tage\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"Letzte 31-60 Tage\"\r\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "date = CURRENT_DATE()",
                        "value": "date = CURRENT_DATE()"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "Vergleichszeitraum",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"date = CURRENT_DATE()\"\r\n  WHEN \"Heute\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\"\r\n  WHEN \"Heute -7d\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Gestern\" THEN \"EXTRACT(DATE from tmstp) = DATE_SUB(CURRENT_DATE(), INTERVAL 8 DAY) AND date = DATE_SUB(CURRENT_DATE(), INTERVAL 8 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"date >= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY),INTERVAL 7 DAY) as saturday) AND date <= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY), INTERVAL 7 DAY) as sunday)\"\r\n  WHEN \"Letzte 7 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"date >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)\"\r\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "MDR",
                        "value": "MDR"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 0,
                    "includeAll": false,
                    "multi": false,
                    "name": "LRA",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT distinct LRA FROM `ndr-code-bi-dashboard.Piano.Profiles_App`\nORDER BY LRA ASC",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "48",
                        "value": "48"
                    },
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "filled_size_headline",
                    "options": [
                        {
                            "selected": true,
                            "text": "48",
                            "value": "48"
                        }
                    ],
                    "query": "48",
                    "skipUrlSync": false,
                    "type": "custom"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "0",
                        "value": "0"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "time_shift",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT\r\nCASE\r\nWHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN 0\r\nWHEN \"${Zeitraum:text}\" = \"Heute\" THEN 1\r\nWHEN \"${Zeitraum:text}\" = \"Gestern\" THEN 7\r\nWHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN 7\r\nWHEN CONTAINS_SUBSTR(\"${Zeitraum:text}\", \"7\") THEN 7\r\nWHEN CONTAINS_SUBSTR(\"${Zeitraum:text}\", \"30\") THEN 30 END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "MDR AKTUELL",
                        "value": "MDR AKTUELL"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 0,
                    "includeAll": false,
                    "multi": false,
                    "name": "App",
                    "options": [],
                    "query": {
                        "dataset": "Piano",
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT distinct app FROM `ndr-code-bi-dashboard.Piano.Profiles_App`\nWHERE LRA = \"$LRA\"\nORDER BY app ASC",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_chapter1",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "998ab889-cdef-4012-b456-71866fb55755": {
                                        "properties": {
                                            "field": "LRA",
                                            "operator": "equal",
                                            "value": [
                                                "$LRA"
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "text"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "a8bbba98-0123-4456-b89a-b1866fb55755",
                                "type": "group"
                            },
                            "whereString": "LRA = '$LRA'"
                        },
                        "table": "Profiles"
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 1,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "app_mdraktuell",
                        "value": "app_mdraktuell"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "app_name",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT\n  CASE\n    WHEN \"$LRA\" = 'MDR' THEN\n      (SELECT distinct product_app_name FROM `ndr-code-bi-dashboard.Piano.Profiles_App` WHERE app = \"$App\")\n    WHEN \"$LRA\" = 'NDR' THEN \n      (SELECT distinct site_level2 FROM `ndr-code-bi-dashboard.Piano.Profiles_App` WHERE app = \"$App\")\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": true,
                        "text": "Letzte Stunde",
                        "value": "CAST(tmstp AS DATE) = CURRENT_DATE()"
                    },
                    "hide": 0,
                    "includeAll": false,
                    "multi": false,
                    "name": "Zeitraum",
                    "options": [
                        {
                            "selected": false,
                            "text": "Letzte Stunde",
                            "value": "CAST(tmstp AS DATE) = CURRENT_DATE()"
                        },
                        {
                            "selected": false,
                            "text": "Heute",
                            "value": "date = CURRENT_DATE()"
                        },
                        {
                            "selected": false,
                            "text": "Heute -7d",
                            "value": "date  = CURRENT_DATE()"
                        },
                        {
                            "selected": false,
                            "text": "Gestern",
                            "value": "date = DATE_SUB(CURRENT_DATE(), INTERVAL  1 DAY)"
                        },
                        {
                            "selected": false,
                            "text": "Letztes Wochenende",
                            "value": "date >= (SELECT\u00a0saturday\u00a0FROM(SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(),WEEK(MONDAY)) - INTERVAL 2 DAY) as saturday)) AND date <= (SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(),WEEK(MONDAY)) - INTERVAL 1 DAY) as sunday)"
                        },
                        {
                            "selected": true,
                            "text": "Letzte 7 Tage",
                            "value": "date >=\u00a0 DATE_SUB(CURRENT_DATE(), INTERVAL\u00a0 7 DAY) AND date < CURRENT_DATE()"
                        },
                        {
                            "selected": false,
                            "text": "Letzte 30 Tage",
                            "value": "date >=\u00a0 DATE_SUB(CURRENT_DATE(), INTERVAL\u00a0 30 DAY) AND date < CURRENT_DATE()"
                        }
                    ],
                    "query": "Letzte Stunde : CAST(tmstp AS DATE) = CURRENT_DATE(), Heute : date = CURRENT_DATE(),  Heute -7d : date  = CURRENT_DATE(), Gestern : date = DATE_SUB(CURRENT_DATE()\\, INTERVAL  1 DAY), Letztes Wochenende : \u00a0date >= (SELECT\u00a0saturday\u00a0FROM(SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\,WEEK(MONDAY)) - INTERVAL 2 DAY) as saturday)) AND date <= (SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\,WEEK(MONDAY)) - INTERVAL 1 DAY) as sunday), Letzte 7 Tage : date >=\u00a0 DATE_SUB(CURRENT_DATE()\\, INTERVAL\u00a0 7 DAY) AND date < CURRENT_DATE(), Letzte 30 Tage : date >=\u00a0 DATE_SUB(CURRENT_DATE()\\, INTERVAL\u00a0 30 DAY) AND date < CURRENT_DATE()",
                    "queryValue": "",
                    "skipUrlSync": false,
                    "type": "custom"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "ndr-code-bi-dashboard.Piano.articles_joined_daily",
                        "value": "ndr-code-bi-dashboard.Piano.articles_joined_daily"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "table",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \n  CASE \"${Zeitraum:text}\"\n  WHEN \"Letzte Stunde\" THEN \"ndr-code-bi-dashboard.Piano.articles_joined_last_hour\"\n  WHEN \"Heute\" THEN \"ndr-code-bi-dashboard.Piano.articles_joined_today\"\n  WHEN \"Heute -7d\" THEN \"ndr-code-bi-dashboard.Piano.articles_joined_today\"\n  ELSE \"ndr-code-bi-dashboard.Piano.articles_joined_daily\"\nEND",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "2024-01-29",
                        "value": "2024-01-29"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "bq_comp_timeframe_end",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT\n  CASE \n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(yesterday, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(last_sunday, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_7_day, INTERVAL 1 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_30_day, INTERVAL 1 DAY))\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\n  END AS relevant_value\nFROM `grafana.current_date`",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "2024-01-29",
                        "value": "2024-01-29"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "bq_comp_timeframe_start",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT\n  CASE \n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(yesterday, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(last_saturday, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_7_day, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_30_day, INTERVAL 30 DAY))\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\n  END AS relevant_value\nFROM `grafana.current_date`",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "2024-01-29",
                        "value": "2024-01-29"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "bq_timeframe_start",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT\n  CASE \n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', last_saturday)\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', interval_7_day)\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', interval_30_day)\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\n  END AS relevant_value\nFROM `grafana.current_date`",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "2024-01-29",
                        "value": "2024-01-29"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "bq_timeframe_end",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT\n  CASE \n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', last_sunday)\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 1 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 1 DAY))\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\n  END AS relevant_value\nFROM `grafana.current_date`",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "Letzte Stunde",
                        "value": "Letzte Stunde"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "Zeitraumlabels",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \n  CASE \"${Zeitraum:text}\"\n  WHEN \"Heute -7d\" THEN \"Heute\"\n  ELSE \"${Zeitraum:text}\"\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "_today_append",
                        "value": "_today_append"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "feverCurveDataset",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"_today_append\"\n  WHEN \"Heute -7d\" THEN  \"_today_append\"\n  WHEN \"Gestern\" THEN \"_today_append\"\n  WHEN \"Letzte Stunde\" THEN \"_today_append\"\n  ELSE \"\"\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "adjusted_lagged_data",
                        "value": "adjusted_lagged_data"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "dataset",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"adjusted_lagged_data\"\n  WHEN \"Heute -7d\" THEN  \"adjusted_lagged_data\"\n  WHEN \"Letzte Stunde\" THEN \"adjusted_lagged_data\"\n  WHEN \"Gestern\" THEN \"adjusted_lagged_data\"\n  ELSE \"daily_data\"\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "line",
                        "value": "line"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "type",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"line\"\n  WHEN \"Heute -7d\" THEN  \"line\"\n  WHEN \"Gestern\" THEN  \"line\"\n  WHEN \"Letzte Stunde\" THEN \"line\"\n  ELSE \"bar\"\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "LIMIT 7",
                        "value": "LIMIT 7"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "lim",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"\"\n  WHEN \"Gestern\" THEN  \"\"\n  WHEN \"Letzte Stunde\" THEN \"LIMIT 8\"\n  ELSE \"\"\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": true,
                        "text": "Gl\u00e4tten",
                        "value": "Gl\u00e4tten"
                    },
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "Glaettung",
                    "options": [
                        {
                            "selected": true,
                            "text": "Gl\u00e4tten",
                            "value": "Gl\u00e4tten"
                        },
                        {
                            "selected": false,
                            "text": "Nicht Gl\u00e4tten",
                            "value": "Nicht Gl\u00e4tten"
                        }
                    ],
                    "query": "Gl\u00e4tten, Nicht Gl\u00e4tten",
                    "queryValue": "",
                    "skipUrlSync": false,
                    "type": "custom"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "2024-01-29 13:39:00.292917",
                        "value": "2024-01-29 13:39:00.292917"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "comp_fever",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT\r\n  CASE \r\n    --WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN CURRENT_DATETIME(\"Europe/Berlin\")\r\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN  DATETIME_SUB(CURRENT_DATETIME(\"Europe/Berlin\"), INTERVAL 1 DAY)\r\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN  DATETIME_SUB(CURRENT_DATETIME(\"Europe/Berlin\"), INTERVAL 7 DAY)\r\n    ELSE CURRENT_DATETIME(\"Europe/Berlin\")\r\n  END AS relevant_value\r\nFROM `grafana.current_date`",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "daily_data",
                        "value": "daily_data"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "dataset_not_fevercurve",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"adjusted_lagged_data\"\n  WHEN \"Heute -7d\" THEN \"adjusted_lagged_data\"\n  WHEN \"Letzte Stunde\" THEN \"daily_data\"\n  ELSE \"daily_data\"\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "",
                        "value": ""
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "Uhrzeit",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\nWHEN \"Heute\" THEN FORMAT_DATE('%H:%M', TIMESTAMP_ADD(MAX(tmstp), INTERVAL 1 SECOND))\r\nWHEN \"Heute -7d\" THEN FORMAT_DATE('%H:%M', TIMESTAMP_ADD(MAX(tmstp), INTERVAL 1 SECOND))\r\nELSE \"\" END\r\nFROM Piano.total_visits_today_append",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "Piano.articles_joined_last_hour",
                        "value": "Piano.articles_joined_last_hour"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "articles_table",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"Piano.articles_joined_today\"\n  WHEN \"Heute -7d\" THEN  \"Piano.articles_joined\"\n  WHEN \"Letzte Stunde\" THEN \"Piano.articles_joined_last_hour\"\n  ELSE \"Piano.articles_joined_daily\"\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "Piano.distro_joined_last_hour",
                        "value": "Piano.distro_joined_last_hour"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "distro_table",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"Piano.distro_joined_today\"\n  WHEN \"Heute -7d\" THEN  \"Piano.distro_joined_today\"\n  WHEN \"Letzte Stunde\" THEN \"Piano.distro_joined_last_hour\"\n  ELSE \"Piano.distro_joined_daily\"\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "\u00a0EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY)",
                        "value": "\u00a0EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY)"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "Vergleichszeitraumfever",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n   WHEN \"Letzte Stunde\" THEN \"DATETIME_DIFF((SELECT min_tmstp FROM min_time), DATETIME(time), MINUTE) <=70 AND DATETIME(time) <= ((SELECT min_tmstp FROM min_time))\"\r\n  WHEN \"Heute\" THEN \"\u00a0EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\"\r\n  WHEN \"Heute -7d\" THEN \"\u00a0EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Gestern\" THEN \"EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 8 DAY) AND EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 8 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"\u00a0EXTRACT(date from time) >= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY),INTERVAL 7 DAY) as saturday) AND EXTRACT(date from time) <= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY), INTERVAL 7 DAY) as sunday)\"\r\n  WHEN \"Letzte 7 Tage\" THEN \"\u00a0EXTRACT(date from time) >= DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY) AND EXTRACT(date from time) < DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"\u00a0EXTRACT(date from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND EXTRACT(date from time) < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)\"\r\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "\u00a0EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY)",
                        "value": "\u00a0EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY)"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "Zeitraumfever",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"\u00a0EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY)\"\r\n  WHEN \"Heute\" THEN \"\u00a0EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY)\"\r\n  WHEN \"Heute -7d\" THEN \"\u00a0EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY)\"\r\n  WHEN \"Gestern\" THEN \"EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) AND EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"\u00a0EXTRACT(date from time) >= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY),INTERVAL 0 DAY) as saturday) AND EXTRACT(date from time) <= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY), INTERVAL 0 DAY) as sunday)\"\r\n  WHEN \"Letzte 7 Tage\" THEN \"\u00a0EXTRACT(date from time) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"\u00a0EXTRACT(date from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) \"\r\n  END",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "_last_hour_app",
                        "value": "_last_hour_app"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "dataset_zeitraum",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \n  CASE \"${Zeitraum:text}\"\n  WHEN \"Letzte Stunde\" \n    THEN \"_last_hour_app\"\n  ELSE \"\"\nEND",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "_last_2_hour_app",
                        "value": "_last_2_hour_app"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "dataset_vergleichs_zeitraum",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \n  CASE \"${Zeitraum:text}\"\n  WHEN \"Letzte Stunde\" \n    THEN \"_last_2_hour_app\"\n  ELSE \"\"\nEND",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                }
            ]
        },
        "time": {
            "from": "2023-05-01T00:00:00.000Z",
            "to": "2023-05-09T16:12:25.000Z"
        },
        "timepicker": {
            "hidden": true
        },
        "timezone": "",
        "title": "Piano App Desktop With Last Hour + Fever DEV",
        "uid": "qvI90tpSz",
        "version": 2,
        "weekStart": ""
    }
}