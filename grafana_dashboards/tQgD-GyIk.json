{
    "meta": {
        "type": "db",
        "canSave": true,
        "canEdit": true,
        "canAdmin": true,
        "canStar": true,
        "canDelete": true,
        "slug": "monitoring",
        "url": "/d/tQgD-GyIk/monitoring",
        "expires": "0001-01-01T00:00:00Z",
        "created": "2024-07-29T12:45:15Z",
        "updated": "2024-11-04T10:17:08Z",
        "updatedBy": "chamskhoury",
        "createdBy": "Anonymous",
        "version": 44,
        "hasAcl": false,
        "isFolder": false,
        "folderId": 660,
        "folderUid": "folder-F9a5Uxn4k",
        "folderTitle": "Prototypes",
        "folderUrl": "/dashboards/f/folder-F9a5Uxn4k/prototypes",
        "provisioned": false,
        "provisionedExternalId": "",
        "annotationsPermissions": {
            "dashboard": {
                "canAdd": true,
                "canEdit": true,
                "canDelete": true
            },
            "organization": {
                "canAdd": true,
                "canEdit": true,
                "canDelete": true
            }
        }
    },
    "dashboard": {
        "annotations": {
            "list": [
                {
                    "builtIn": 1,
                    "datasource": {
                        "type": "grafana",
                        "uid": "-- Grafana --"
                    },
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "target": {
                        "limit": 100,
                        "matchAny": false,
                        "tags": [],
                        "type": "dashboard"
                    },
                    "type": "dashboard"
                }
            ]
        },
        "editable": true,
        "fiscalYearStartMonth": 0,
        "graphTooltip": 0,
        "id": 1417,
        "links": [],
        "liveNow": false,
        "panels": [
            {
                "datasource": {
                    "type": "postgres",
                    "uid": "5RzC0pR4k"
                },
                "gridPos": {
                    "h": 5,
                    "w": 3,
                    "x": 0,
                    "y": 0
                },
                "id": 19,
                "options": {
                    "code": {
                        "language": "plaintext",
                        "showLineNumbers": false,
                        "showMiniMap": false
                    },
                    "content": "\n\n<img width=\"160\" height=\"auto\" src=\"$Image\n\" />\n\n<!-- src=${Image} />",
                    "mode": "html"
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "postgres",
                            "uid": "5RzC0pR4k"
                        },
                        "format": "time_series",
                        "group": [],
                        "metricColumn": "none",
                        "rawQuery": false,
                        "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
                        "refId": "A",
                        "select": [
                            [
                                {
                                    "params": [
                                        "post_video_view_time"
                                    ],
                                    "type": "column"
                                }
                            ]
                        ],
                        "table": "facebookinsightsownposts",
                        "timeColumn": "\"time\"",
                        "timeColumnType": "timestamp",
                        "where": [
                            {
                                "name": "$__timeFilter",
                                "params": [],
                                "type": "macro"
                            }
                        ]
                    }
                ],
                "transparent": true,
                "type": "text"
            },
            {
                "datasource": {
                    "type": "postgres",
                    "uid": "5RzC0pR4k"
                },
                "gridPos": {
                    "h": 3,
                    "w": 6,
                    "x": 0,
                    "y": 5
                },
                "id": 13,
                "options": {
                    "code": {
                        "language": "plaintext",
                        "showLineNumbers": false,
                        "showMiniMap": false
                    },
                    "content": "### Letztes Update:\r\n###### Datumsbasierter Vergleich - ${lastUpdate}\r\n###### Intervallbasierter Vergleich - ${lastUpdate_tenth_minute}",
                    "mode": "markdown"
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "postgres",
                            "uid": "5RzC0pR4k"
                        },
                        "format": "time_series",
                        "group": [],
                        "metricColumn": "none",
                        "rawQuery": false,
                        "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
                        "refId": "A",
                        "select": [
                            [
                                {
                                    "params": [
                                        "post_video_view_time"
                                    ],
                                    "type": "column"
                                }
                            ]
                        ],
                        "table": "facebookinsightsownposts",
                        "timeColumn": "\"time\"",
                        "timeColumnType": "timestamp",
                        "where": [
                            {
                                "name": "$__timeFilter",
                                "params": [],
                                "type": "macro"
                            }
                        ]
                    }
                ],
                "transparent": true,
                "type": "text"
            },
            {
                "collapsed": false,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 8
                },
                "id": 17,
                "panels": [],
                "title": "\u00dcbersicht - Datumsbasierter Vergleich  | ${LRA} - ${Kategorie}",
                "type": "row"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "noValue": "\u2013",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Interaktionen"
                            },
                            "properties": [
                                {
                                    "id": "displayName",
                                    "value": "\u2211 Interaktionen"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 2,
                    "y": 9
                },
                "id": 7,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\"))FROM\n(\nSELECT \nCOUNT(*) AS summe\nFROM Monitoring.monitoring_bigquery_tables_daily\nWHERE\n\"$LRA\" = LRA\nAND DATETIME(tmstp) = \"$zeitfilter\"\nAND\nCASE\nWHEN REPLACE(\"$Kategorie\",\"'\", \"\") IN (\"Alle Kategorien\") THEN TRUE\nELSE  category IN ($Kategorie) END\n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Anzahl Tabellen",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-red",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "noValue": "\u2013",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Interaktionen"
                            },
                            "properties": [
                                {
                                    "id": "displayName",
                                    "value": "\u2211 Interaktionen"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 6,
                    "y": 9
                },
                "id": 9,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\"))FROM\n(\nSELECT \nCOUNT(*) AS summe\nFROM Monitoring.monitoring_bigquery_tables_daily\nWHERE\n\"$LRA\" = LRA\nAND\nDATETIME(tmstp) = \"$zeitfilter\"\nAND\nCASE\nWHEN REPLACE(\"$Kategorie\",\"'\", \"\") IN (\"Alle Kategorien\") THEN TRUE\nELSE  category IN ($Kategorie)  END\nAND\nCASE\nWHEN \"Social Media\" = category THEN max_date < expected_date\nWHEN \"Telemedienampel\" = category THEN max_date < expected_date\nELSE max_date != expected_date END\n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Anzahl fehlerhafter Tabellen",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "#37872d",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "noValue": "\u2013",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Interaktionen"
                            },
                            "properties": [
                                {
                                    "id": "displayName",
                                    "value": "\u2211 Interaktionen"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 10,
                    "y": 9
                },
                "id": 8,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\"))FROM\n(\nSELECT \nCOUNT(*) AS summe\nFROM Monitoring.monitoring_bigquery_tables_daily\nWHERE\n\"$LRA\" = LRA\nAND\nDATETIME(tmstp) = \"$zeitfilter\"\nAND\nCASE\nWHEN REPLACE(\"$Kategorie\",\"'\", \"\") IN (\"Alle Kategorien\") THEN TRUE\nELSE  category IN ($Kategorie)  END\nAND\nCASE\nWHEN \"Social Media\" = category THEN max_date >= expected_date\nWHEN \"Telemedienampel\" = category THEN max_date >= expected_date\nELSE max_date = expected_date END\n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Anzahl korrekter Tabellen",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "transparent",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "noValue": "\u2013",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Verf\u00fcgbarkeit"
                            },
                            "properties": [
                                {
                                    "id": "decimals",
                                    "value": 1
                                },
                                {
                                    "id": "unit",
                                    "value": "percent"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 14,
                    "y": 9
                },
                "id": 20,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH correct AS (\n  SELECT \nCOUNT(*) AS correct_sum\nFROM Monitoring.monitoring_bigquery_tables_daily\nWHERE\n\"$LRA\" = LRA\nAND\nCASE\nWHEN REPLACE(\"$Kategorie\",\"'\", \"\") IN (\"Alle Kategorien\") THEN TRUE\nELSE  category IN ($Kategorie)  END\nAND\nDATETIME(tmstp) = \"$zeitfilter\"\nAND\nCASE\nWHEN \"Social Media\" = category THEN max_date >= expected_date\nWHEN \"Telemedienampel\" = category THEN max_date >= expected_date\nELSE max_date = expected_date END\n), wrong AS(\n  SELECT \nCOUNT(*) AS wrong_sum\nFROM Monitoring.monitoring_bigquery_tables_daily\nWHERE\n\"$LRA\" = LRA\nAND\nDATETIME(tmstp) = \"$zeitfilter\"\nAND\nCASE\nWHEN REPLACE(\"$Kategorie\",\"'\", \"\") IN (\"Alle Kategorien\") THEN TRUE\nELSE  category IN ($Kategorie)  END\nAND\nCASE\nWHEN \"Social Media\" = category THEN max_date < expected_date\nWHEN \"Telemedienampel\" = category THEN max_date < expected_date\nELSE max_date != expected_date END\n)\nSELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\"))FROM\n(\n  SELECT 100 * (correct_sum / (correct_sum + wrong_sum)) AS summe FROM correct, wrong\n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Verf\u00fcgbarkeit",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "transparent",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 6,
                    "y": 13
                },
                "id": 22,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \"\"",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 13,
                    "w": 19,
                    "x": 0,
                    "y": 17
                },
                "id": 24,
                "options": {
                    "baidu": {
                        "callback": "bmapReady",
                        "key": ""
                    },
                    "editor": {
                        "format": "auto",
                        "height": 600
                    },
                    "editorMode": "code",
                    "gaode": {
                        "key": "",
                        "plugin": "AMap.Scale,AMap.ToolBar"
                    },
                    "getOption": "// Sample data for demonstration purposes. Replace this with the actual data from the SQL query.\nconst rawData = context.panel.data.series.map((s) => {\n  const date = s.fields.find((f) => f.name === 'date').values;\n  const correct_sum = s.fields.find((f) => f.name === 'correct_sum').values;\n  const wrong_sum = s.fields.find((f) => f.name === 'wrong_sum').values;\n\n  let heatmapData = [];\n  for (let i = 0; i < date.length; i++) {\n    heatmapData.push([date[i], 'Korrekt', correct_sum[i]]);\n    heatmapData.push([date[i], 'Fehlerhaft', wrong_sum[i]]);\n  }\n  return heatmapData;\n}).flat();\n\nconst processedData = rawData.map(item => {\n  const [date, type, value] = item;\n  return {\n    date: new Date(date).toLocaleDateString(),  // Format date for display\n    type,\n    value\n  };\n});\n\n// Extract unique dates\nconst uniqueDates = [...new Set(processedData.map(d => d.date))];\n\n// Prepare the ECharts option\nconst option = {\n  tooltip: {\n    position: 'top',\n    formatter: function (params) {\n      const [date, type, value] = params.value;\n      return `${date}<br/>${type}: ${value}`;\n    }\n  },\n  grid: {\n    height: '50%',\n    top: '10%'\n  },\n  xAxis: {\n    type: 'category',\n    data: uniqueDates,  // Unique dates\n    splitArea: {\n      show: true\n    },\n    axisLabel: {\n      rotate: 45  // Rotate labels for better readability\n    }\n  },\n  yAxis: {\n    type: 'category',\n    data: ['Korrekt', 'Fehlerhaft'],  // Display rows for correct and wrong\n    splitArea: {\n      show: true\n    }\n  },\n  visualMap: {\n    min: 0,\n    max: Math.max(...processedData.map(d => d.value)),  // Dynamic max value based on your data\n    calculable: true,\n    orient: 'horizontal',\n    left: 'center',\n    bottom: '15%',\n    inRange: {\n      color: ['rgb(173, 235, 169)', 'rgb(145, 206, 141)', 'RGB(55,135,45)']  // Color scheme from low (red) to high (green)\n    }\n  },\n  series: [\n    {\n      name: 'Correct vs Wrong',\n      type: 'heatmap',\n      data: processedData.map(d => [d.date, d.type, d.value]),\n      label: {\n        show: true,\n        formatter: function (params) {\n          return params.value[2];\n        },\n        fontSize: 17  // Change this to the desired font size\n      },\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }\n  ]\n};\n\nreturn option;\n",
                    "google": {
                        "callback": "gmapReady",
                        "key": ""
                    },
                    "map": "none",
                    "renderer": "canvas",
                    "themeEditor": {
                        "config": "{}",
                        "height": 400,
                        "name": "default"
                    },
                    "visualEditor": {
                        "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
                        "dataset": [],
                        "series": []
                    }
                },
                "pluginVersion": "6.1.0",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH correct AS (\r\n  SELECT \r\n    COUNT(*) AS correct_sum,\r\n    DATE(tmstp) AS date,\r\n    EXTRACT(HOUR FROM tmstp) AS hour\r\n  FROM Monitoring.monitoring_bigquery_tables_daily\r\n  WHERE\r\n    \"$LRA\" = LRA\r\n    AND\r\n    CASE\r\n      WHEN REPLACE(\"$Kategorie\",\"'\", \"\") IN (\"Alle Kategorien\") THEN TRUE\r\n      ELSE category IN ($Kategorie)\r\n    END\r\n    AND\r\n    CASE\r\n      WHEN \"Social Media\" = category THEN max_date >= expected_date\r\n      WHEN \"Telemedienampel\" = category THEN max_date >= expected_date\r\n      ELSE max_date = expected_date \r\n    END\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY) AND CURRENT_DATE\r\n  GROUP BY date, hour\r\n), wrong AS (\r\n  SELECT \r\n    COUNT(*) AS wrong_sum,\r\n    DATE(tmstp) AS date,\r\n    EXTRACT(HOUR FROM tmstp) AS hour\r\n  FROM Monitoring.monitoring_bigquery_tables_daily\r\n  WHERE\r\n    \"$LRA\" = LRA\r\n    AND\r\n    CASE\r\n      WHEN REPLACE(\"$Kategorie\",\"'\", \"\") IN (\"Alle Kategorien\") THEN TRUE\r\n      ELSE category IN ($Kategorie)\r\n    END\r\n    AND\r\n    CASE\r\n      WHEN \"Social Media\" = category THEN max_date < expected_date\r\n      WHEN \"Telemedienampel\" = category THEN max_date < expected_date\r\n      ELSE max_date != expected_date \r\n    END\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY) AND CURRENT_DATE\r\n  GROUP BY date, hour\r\n)\r\nSELECT \r\n  date,\r\n  hour,\r\n  IFNULL(correct_sum, 0) AS correct_sum,\r\n  IFNULL(wrong_sum, 0) AS wrong_sum\r\nFROM correct\r\nFULL JOIN wrong\r\nUSING (date, hour)\r\nORDER BY date, hour ASC;\r\n",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "title": "Heatmap Verlauf | ${LRA} - ${Kategorie}",
                "transparent": true,
                "type": "volkovlabs-echarts-panel"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "text",
                            "mode": "fixed"
                        },
                        "custom": {
                            "align": "auto",
                            "cellOptions": {
                                "type": "color-text"
                            },
                            "filterable": true,
                            "inspect": false
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green"
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Vergleich"
                            },
                            "properties": [
                                {
                                    "id": "mappings",
                                    "value": [
                                        {
                                            "options": {
                                                "false": {
                                                    "index": 0,
                                                    "text": "\u274c"
                                                },
                                                "true": {
                                                    "index": 1,
                                                    "text": "\u2714"
                                                }
                                            },
                                            "type": "value"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Tabelle"
                            },
                            "properties": [
                                {
                                    "id": "custom.width",
                                    "value": 395
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 19,
                    "w": 19,
                    "x": 0,
                    "y": 30
                },
                "id": 2,
                "options": {
                    "cellHeight": "sm",
                    "footer": {
                        "countRows": false,
                        "enablePagination": true,
                        "fields": "",
                        "reducer": [
                            "sum"
                        ],
                        "show": false
                    },
                    "showHeader": true,
                    "sortBy": [
                        {
                            "desc": false,
                            "displayName": "Vergleich"
                        }
                    ]
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\ntable_name,\r\ncategory,\r\nCASE \r\nWHEN EXTRACT(YEAR FROM max_date) = 1900 THEN \"Datum ist \u00e4lter als 5 Tage\"\r\nELSE FORMAT_DATE(\"%d.%m.%y\",DATE(max_date)) END AS max_date, \r\nFORMAT_DATE(\"%d.%m.%y\",DATE(expected_date)) as expected_date,\r\nCASE\r\nWHEN \"Social Media\" = category OR category = \"Telemedienampel\" THEN\r\nCASE\r\nWHEN max_date >= expected_date THEN TRUE\r\nELSE FALSE END \r\nELSE\r\nCASE\r\nWHEN max_date = expected_date THEN TRUE\r\nELSE FALSE END\r\nEND as vergleich\r\nFROM Monitoring.monitoring_bigquery_tables_daily\r\nWHERE \r\n\"$LRA\" = LRA \r\nAND \r\nDATETIME(tmstp) = \"$zeitfilter\"\r\nAND\r\nCASE\r\nWHEN REPLACE(\"$Kategorie\",\"'\", \"\") IN (\"Alle Kategorien\") THEN TRUE\r\nELSE  category IN ($Kategorie)  END\r\nORDER BY table_name ASC",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "title": "\u00dcbersicht aller Tabellen | ${LRA} - ${Kategorie}",
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "includeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "category": "Kategorie",
                                "expected_date": "Mindest Datum",
                                "f0_": "Vergleich",
                                "max_date": "Letztes verf\u00fcgbares Datum",
                                "table_name": "Tabelle",
                                "vergleich": "Vergleich"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "table"
            },
            {
                "collapsed": false,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 49
                },
                "id": 28,
                "panels": [],
                "title": "\u00dcbersicht - Intervallbasierter Vergleich | ${LRA}",
                "type": "row"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-blue",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "noValue": "\u2013",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green"
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Interaktionen"
                            },
                            "properties": [
                                {
                                    "id": "displayName",
                                    "value": "\u2211 Interaktionen"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 2,
                    "y": 50
                },
                "id": 29,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\"))FROM\n(\nSELECT \nCOUNT(*) AS summe\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\nWHERE\n\"$LRA\" = LRA\nAND\nCASE category\nWHEN \"ATI\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_piano\"\nWHEN \"Telemedienampel\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_telemedienampel\"\nEND\n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Anzahl Tabellen",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "dark-red",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "noValue": "\u2013",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green"
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Interaktionen"
                            },
                            "properties": [
                                {
                                    "id": "displayName",
                                    "value": "\u2211 Interaktionen"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 6,
                    "y": 50
                },
                "id": 30,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\"))FROM\n(\nSELECT \nCOUNT(*) AS summe\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\nWHERE\n\"$LRA\" = LRA\nAND\nCASE category\nWHEN \"ATI\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_piano\"\nWHEN \"Telemedienampel\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_telemedienampel\"\nEND\nAND\nNOT (max_date BETWEEN lower_bound_date AND upper_bound_date) \n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Anzahl fehlerhafter Tabellen",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "#37872d",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "noValue": "\u2013",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green"
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Interaktionen"
                            },
                            "properties": [
                                {
                                    "id": "displayName",
                                    "value": "\u2211 Interaktionen"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 10,
                    "y": 50
                },
                "id": 32,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\"))FROM\n(\nSELECT \nCOUNT(*) AS summe\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\nWHERE\n\"$LRA\" = LRA\nAND\nCASE category\nWHEN \"ATI\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_piano\"\nWHEN \"Telemedienampel\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_telemedienampel\"\nEND\nAND\nmax_date BETWEEN lower_bound_date AND upper_bound_date\n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Anzahl korrekter Tabellen",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "transparent",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "noValue": "\u2013",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green"
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Verf\u00fcgbarkeit"
                            },
                            "properties": [
                                {
                                    "id": "decimals",
                                    "value": 1
                                },
                                {
                                    "id": "unit",
                                    "value": "percent"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 14,
                    "y": 50
                },
                "id": 33,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH correct AS (\n  SELECT \nCOUNT(*) AS correct_sum\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\nWHERE\n\"$LRA\" = LRA\nAND\nCASE category\nWHEN \"ATI\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_piano\"\nWHEN \"Telemedienampel\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_telemedienampel\"\nEND\nAND\nmax_date BETWEEN lower_bound_date AND upper_bound_date\n), wrong AS(\n  SELECT \nCOUNT(*) AS wrong_sum\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\nWHERE\n\"$LRA\" = LRA\nAND\nCASE category\nWHEN \"ATI\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_piano\"\nWHEN \"Telemedienampel\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_telemedienampel\"\nEND\nAND\nNOT (max_date BETWEEN lower_bound_date AND upper_bound_date) \n)\nSELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\"))FROM\n(\n  SELECT 100 * (correct_sum / (correct_sum + wrong_sum)) AS summe FROM correct, wrong\n)",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "Verf\u00fcgbarkeit",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "transparent",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green"
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 8,
                    "w": 5,
                    "x": 19,
                    "y": 50
                },
                "id": 37,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \"\"",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "description": "",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "transparent",
                            "mode": "fixed"
                        },
                        "decimals": 0,
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green"
                                }
                            ]
                        },
                        "unit": "string"
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 6,
                    "y": 54
                },
                "id": 31,
                "options": {
                    "colorMode": "background",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "percentChangeColorMode": "standard",
                    "reduceOptions": {
                        "calcs": [
                            "last"
                        ],
                        "fields": "/.*/",
                        "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value_and_name",
                    "wideLayout": true
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "dataset": "Quintly",
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \"\"",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [
                                        {
                                            "name": "page_engaged_users",
                                            "type": "functionParameter"
                                        }
                                    ],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50,
                            "whereJsonTree": {
                                "children1": {
                                    "baa899a9-cdef-4012-b456-718364767b70": {
                                        "properties": {
                                            "field": "profileId",
                                            "operator": "equal",
                                            "value": [
                                                null
                                            ],
                                            "valueSrc": [
                                                "value"
                                            ],
                                            "valueType": [
                                                "number"
                                            ]
                                        },
                                        "type": "rule"
                                    }
                                },
                                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                                "type": "group"
                            }
                        },
                        "table": "facebookInsights"
                    }
                ],
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "f0_": "",
                                "page_impressions_unique": "Potentielle Reichweite"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "stat"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 13,
                    "w": 15,
                    "x": 0,
                    "y": 58
                },
                "id": 34,
                "options": {
                    "baidu": {
                        "callback": "bmapReady",
                        "key": ""
                    },
                    "editor": {
                        "format": "auto",
                        "height": 600
                    },
                    "editorMode": "code",
                    "gaode": {
                        "key": "",
                        "plugin": "AMap.Scale,AMap.ToolBar"
                    },
                    "getOption": "// Sample data for demonstration purposes. Replace this with the actual data from the SQL query.\nconst rawData = context.panel.data.series.map((s) => {\n  const date = s.fields.find((f) => f.name === 'date').values;\n  const correct_sum = s.fields.find((f) => f.name === 'correct_sum').values;\n  const wrong_sum = s.fields.find((f) => f.name === 'wrong_sum').values;\n\n  let heatmapData = [];\n  for (let i = 0; i < date.length; i++) {\n    heatmapData.push([date[i], 'Korrekt', correct_sum[i]]);\n    heatmapData.push([date[i], 'Fehlerhaft', wrong_sum[i]]);\n  }\n  console.info(\"heatmapData\", heatmapData)\n  return heatmapData;\n}).flat();\n\nconst processedData = rawData.map(item => {\n  const [date, type, value] = item;\n  return {\n    date,  // Format date for display\n    type,\n    value\n  };\n});\n\n// Extract unique dates\nconst uniqueDates = [...new Set(processedData.map(d => d.date))];\nconsole.info(\"uniqueDates\", uniqueDates)\n\n// Prepare the ECharts option\nconst option = {\n  tooltip: {\n    position: 'top',\n    formatter: function (params) {\n      const [date, type, value] = params.value;\n      return `${date}<br/>${type}: ${value}`;\n    }\n  },\n  grid: {\n    height: '50%',\n    top: '10%'\n  },\n  xAxis: {\n    type: 'category',\n    data: uniqueDates,  // Unique dates\n    splitArea: {\n      show: true\n    },\n    axisLabel: {\n      rotate: 45  // Rotate labels for better readability\n    }\n  },\n  yAxis: {\n    type: 'category',\n    data: ['Korrekt', 'Fehlerhaft'],  // Display rows for correct and wrong\n    splitArea: {\n      show: true\n    }\n  },\n  visualMap: {\n    min: 0,\n    max: Math.max(...processedData.map(d => d.value)),  // Dynamic max value based on your data\n    calculable: true,\n    orient: 'horizontal',\n    left: 'center',\n    bottom: '15%',\n    inRange: {\n      color: ['rgb(173, 235, 169)', 'rgb(145, 206, 141)', 'RGB(55,135,45)']  // Color scheme from low (red) to high (green)\n    }\n  },\n  series: [\n    {\n      name: 'Correct vs Wrong',\n      type: 'heatmap',\n      data: processedData.map(d => [d.date, d.type, d.value]),\n      label: {\n        show: true,\n        formatter: function (params) {\n          return params.value[2];\n        },\n        fontSize: 17  // Change this to the desired font size\n      },\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }\n  ]\n};\n\nreturn option;\n",
                    "google": {
                        "callback": "gmapReady",
                        "key": ""
                    },
                    "map": "none",
                    "renderer": "canvas",
                    "themeEditor": {
                        "config": "{}",
                        "height": 400,
                        "name": "default"
                    },
                    "visualEditor": {
                        "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
                        "dataset": [],
                        "series": []
                    }
                },
                "pluginVersion": "6.1.0",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH piano_correct AS (\r\n  SELECT\r\nDATETIME(tmstp, \"Europe/Berlin\") as tmstp_dt, \r\nCOUNT(*) AS correct_sum\r\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\r\nWHERE\r\n\"$LRA\" = LRA\r\nAND\r\ntmstp BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 70 MINUTE) AND CURRENT_TIMESTAMP()\r\nAND\r\nmax_date BETWEEN lower_bound_date AND upper_bound_date\r\nGROUP BY tmstp_dt\r\n), piano_wrong AS (\r\n  SELECT\r\nDATETIME(tmstp, \"Europe/Berlin\") as tmstp_dt, \r\nCOUNT(*) AS wrong_sum\r\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\r\nWHERE\r\n\"$LRA\" = LRA\r\nAND\r\ntmstp BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 70 MINUTE) AND CURRENT_TIMESTAMP()\r\nAND\r\nNOT (max_date BETWEEN lower_bound_date AND upper_bound_date)\r\nGROUP BY tmstp_dt\r\n)\r\nSELECT \r\n  FORMAT_TIMESTAMP('%H:%M',tmstp_dt) as date, --%d.%m.%y \r\n  CASE\r\n  WHEN EXTRACT(MINUTE from tmstp_dt) = 8 THEN IFNULL(correct_sum,0)\r\n  WHEN tmstp_dt > DATETIME(\"$zeitfilter_tenth_minute_telemedienampel\",\"Europe/Berlin\") THEN IFNULL(correct_sum, 0) + $telemedienampel_correct\r\n  WHEN tmstp_dt < DATETIME(\"$zeitfilter_tenth_minute_telemedienampel\",\"Europe/Berlin\") THEN IFNULL(correct_sum,0) + $second_telemedienampel_correct END AS correct_sum,\r\n  CASE\r\n  WHEN EXTRACT(MINUTE from tmstp_dt) = 8 THEN IFNULL(wrong_sum,0)\r\n  WHEN tmstp_dt > DATETIME(\"$zeitfilter_tenth_minute_telemedienampel\",\"Europe/Berlin\") THEN IFNULL(wrong_sum, 0) + $telemedienampel_wrong\r\n  WHEN tmstp_dt < DATETIME(\"$zeitfilter_tenth_minute_telemedienampel\",\"Europe/Berlin\") THEN IFNULL(wrong_sum,0) + $second_telemedienampel_wrong END AS wrong_sum\r\nFROM piano_correct\r\nFULL JOIN piano_wrong\r\nUSING (tmstp_dt)\r\nORDER BY tmstp_dt ASC;\r\n",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "title": "Heatmap Verlauf | ${LRA} | ${date_from_tmstp}",
                "transparent": true,
                "type": "volkovlabs-echarts-panel"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "text",
                            "mode": "fixed"
                        },
                        "custom": {
                            "align": "auto",
                            "cellOptions": {
                                "type": "color-text"
                            },
                            "filterable": true,
                            "inspect": false
                        },
                        "mappings": [],
                        "noValue": "Alle Tabellen sind korrekt",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green"
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Vergleich"
                            },
                            "properties": [
                                {
                                    "id": "mappings",
                                    "value": [
                                        {
                                            "options": {
                                                "false": {
                                                    "index": 0,
                                                    "text": "\u274c"
                                                },
                                                "true": {
                                                    "index": 1,
                                                    "text": "\u2714"
                                                }
                                            },
                                            "type": "value"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Tabelle"
                            },
                            "properties": [
                                {
                                    "id": "custom.width",
                                    "value": 395
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Letztes verf\u00fcgbares Zeitstempel"
                            },
                            "properties": [
                                {
                                    "id": "custom.width",
                                    "value": 271
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 13,
                    "w": 9,
                    "x": 15,
                    "y": 58
                },
                "id": 35,
                "options": {
                    "cellHeight": "sm",
                    "footer": {
                        "countRows": false,
                        "enablePagination": true,
                        "fields": "",
                        "reducer": [
                            "sum"
                        ],
                        "show": false
                    },
                    "showHeader": true,
                    "sortBy": []
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT table_name, tmstp_dt FROM(\r\nSELECT\r\nFORMAT_TIMESTAMP('%d.%m.%y %H:%M',DATETIME(tmstp, \"Europe/Berlin\")) as tmstp_dt,\r\ntable_name, \r\nCOUNT(*) AS wrong_sum\r\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\r\nWHERE\r\n\"$LRA\" = LRA\r\nAND\r\ntmstp BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 70 MINUTE) AND CURRENT_TIMESTAMP()\r\nAND\r\nNOT (max_date BETWEEN lower_bound_date AND upper_bound_date)\r\nGROUP BY tmstp_dt, table_name)\r\nWHERE wrong_sum != 0\r\nORDER BY tmstp_dt ASC",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "title": "\u00dcbersicht aller fehlerhaften Tabellen im Heatmap | ${LRA} | ${date_from_tmstp}",
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "includeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "category": "Kategorie",
                                "expected_date": "Mindest Datum",
                                "f0_": "Vergleich",
                                "lower_bound_date": "Untergrenze",
                                "max_date": "Letztes verf\u00fcgbares Zeitstempel",
                                "table_name": "Tabelle",
                                "tmstp_dt": "\u00dcberpr\u00fcfungszeitpunkt",
                                "upper_bound_date": "Obergrenze"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "table"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "fixedColor": "text",
                            "mode": "fixed"
                        },
                        "custom": {
                            "align": "auto",
                            "cellOptions": {
                                "type": "color-text"
                            },
                            "filterable": true,
                            "inspect": false
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green"
                                },
                                {
                                    "color": "red",
                                    "value": 80
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Vergleich"
                            },
                            "properties": [
                                {
                                    "id": "mappings",
                                    "value": [
                                        {
                                            "options": {
                                                "false": {
                                                    "index": 0,
                                                    "text": "\u274c"
                                                },
                                                "true": {
                                                    "index": 1,
                                                    "text": "\u2714"
                                                }
                                            },
                                            "type": "value"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Tabelle"
                            },
                            "properties": [
                                {
                                    "id": "custom.width",
                                    "value": 395
                                }
                            ]
                        },
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Letztes verf\u00fcgbares Zeitstempel"
                            },
                            "properties": [
                                {
                                    "id": "custom.width",
                                    "value": 271
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 14,
                    "w": 19,
                    "x": 0,
                    "y": 71
                },
                "id": 36,
                "options": {
                    "cellHeight": "sm",
                    "footer": {
                        "countRows": false,
                        "enablePagination": true,
                        "fields": "",
                        "reducer": [
                            "sum"
                        ],
                        "show": false
                    },
                    "showHeader": true,
                    "sortBy": []
                },
                "pluginVersion": "11.1.3",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\ntable_name,\r\ncategory,\r\nFORMAT_TIMESTAMP('%d.%m.%y %H:%M',DATETIME(max_date, \"Europe/Berlin\")) as max_date,\r\nFORMAT_TIMESTAMP('%d.%m.%y %H:%M',DATETIME(lower_bound_date, \"Europe/Berlin\")) as lower_bound_date,\r\nFORMAT_TIMESTAMP('%d.%m.%y %H:%M',DATETIME(upper_bound_date, \"Europe/Berlin\")) as upper_bound_date,\r\nCASE \r\nWHEN max_date BETWEEN lower_bound_date AND upper_bound_date THEN TRUE\r\nELSE FALSE END as Vergleich\r\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\r\nWHERE\r\n\"$LRA\" = LRA\r\nAND\r\nCASE category\r\nWHEN \"ATI\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_piano\"\r\nWHEN \"Telemedienampel\" THEN DATETIME(tmstp) = \"$zeitfilter_tenth_minute_telemedienampel\"\r\nEND\r\nORDER BY table_name ASC",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "title": "\u00dcbersicht aller Tabellen | ${LRA}",
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {},
                            "includeByName": {},
                            "indexByName": {},
                            "renameByName": {
                                "category": "Kategorie",
                                "expected_date": "Mindest Datum",
                                "f0_": "Vergleich",
                                "lower_bound_date": "Untergrenze",
                                "max_date": "Letztes verf\u00fcgbares Zeitstempel",
                                "table_name": "Tabelle",
                                "upper_bound_date": "Obergrenze"
                            }
                        }
                    }
                ],
                "transparent": true,
                "type": "table"
            },
            {
                "collapsed": false,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 85
                },
                "id": 15,
                "panels": [],
                "title": "\u00dcbersicht alle Kategorien  | ${LRA} ",
                "type": "row"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 16,
                    "w": 9,
                    "x": 8,
                    "y": 86
                },
                "id": 11,
                "options": {
                    "baidu": {
                        "callback": "bmapReady",
                        "key": ""
                    },
                    "editor": {
                        "format": "auto",
                        "height": 2000
                    },
                    "editorMode": "code",
                    "gaode": {
                        "key": "",
                        "plugin": "AMap.Scale,AMap.ToolBar"
                    },
                    "getOption": "const series = context.panel.data.series.map((s) => {\n  const sum = s.fields.find((f) => f.name === 'summe').values;\n  const correct_sum = s.fields.find((f) => f.name === 'correct_sum').values;\n  const wrong_sum = s.fields.find((f) => f.name === 'wrong_sum').values;\n\n  console.info(\"Sum\", sum);\n  console.info(\"Correct_sum\", correct_sum);\n  console.info(\"wrong_sum\", wrong_sum);\n\n  return [\n    {\n      name: \"ATI\",\n      value: sum[0],\n      itemStyle: {\n        color: 'RGB(30,59,103)'\n      },\n      children: [\n        {\n          name: `Korrekte Tabellen: ${correct_sum[0]}`,\n          value: correct_sum[0],\n          itemStyle: {\n            color: 'RGB(55,135,45)'\n          },\n        },\n        {\n          name: `Fehlerhafte Tabellen: ${wrong_sum[0]}`,\n          value: wrong_sum[0],\n          itemStyle: {\n            color: \"RGB(196,22,42)\"\n          },\n        }\n      ]\n    },\n    {\n      name: \"Google Trends\",\n      value: sum[1],\n      itemStyle: {\n        color: 'RGB(100,200,250)'\n      },\n      children: [\n        {\n          name: `Korrekte Tabellen: ${correct_sum[1]}`,\n          value: correct_sum[1],\n          itemStyle: {\n            color: 'RGB(55,135,45)'\n          },\n        },\n        {\n          name: `Fehlerhafte Tabellen: ${wrong_sum[1]}`,\n          value: wrong_sum[1],\n          itemStyle: {\n            color: \"RGB(196,22,42)\"\n          },\n        }\n      ]\n    },\n    {\n      name: \"Podcast\",\n      value: sum[2],\n      itemStyle: {\n        color: 'RGB(73,92,119)'\n      },\n      children: [\n        {\n          name: `Korrekte Tabellen: ${correct_sum[2]}`,\n          value: correct_sum[2],\n          itemStyle: {\n            color: 'RGB(55,135,45)',\n          },\n        },\n        {\n          name: `Fehlerhafte Tabellen: ${wrong_sum[2]}`,\n          value: wrong_sum[2],\n          itemStyle: {\n            color: \"RGB(196,22,42)\"\n          },\n        }\n      ]\n    },\n    {\n      name: \"Quotenreport\",\n      value: sum[3],\n      itemStyle: {\n        color: 'RGB(70,90,50)'\n      },\n      children: [\n        {\n          name: `Korrekte Tabellen: ${correct_sum[3]}`,\n          value: correct_sum[3],\n          itemStyle: {\n            color: 'RGB(55,135,45)'\n          },\n        },\n        {\n          name: `Fehlerhafte Tabellen: ${wrong_sum[3]}`,\n          value: wrong_sum[3],\n          itemStyle: {\n            color: \"RGB(196,22,42)\"\n          },\n        }\n      ]\n    },\n    {\n      name: \"SEO\",\n      value: sum[4],\n      itemStyle: {\n        color: 'RGB(120,185,235)'\n      },\n      children: [\n        {\n          name: `Korrekte Tabellen: ${correct_sum[4]}`,\n          value: correct_sum[4],\n          itemStyle: {\n            color: 'RGB(55,135,45)'\n          },\n        },\n        {\n          name: `Fehlerhafte Tabellen: ${wrong_sum[4]}`,\n          value: wrong_sum[4],\n          itemStyle: {\n            color: \"RGB(196,22,42)\"\n          },\n        }\n      ]\n    },\n    {\n      name: \"S. M.\",\n      value: sum[5],\n      itemStyle: {\n        color: 'RGB(135,171,226)'\n      },\n      children: [\n        {\n          name: `Korrekte Tabellen: ${correct_sum[5]}`,\n          value: correct_sum[5],\n          itemStyle: {\n            color: 'RGB(55,135,45)'\n          },\n        },\n        {\n          name: `Fehlerhafte Tabellen: ${wrong_sum[5]}`,\n          value: wrong_sum[5],\n          itemStyle: {\n            color: \"RGB(196,22,42)\"\n          },\n        }\n      ]\n    },\n    {\n      name: \"S. M. Eingefroren\",\n      value: sum[6],\n      itemStyle: {\n        color: 'RGB(135,200,226)'\n      },\n      children: [\n        {\n          name: `Korrekte Tabellen: ${correct_sum[6]}`,\n          value: correct_sum[6],\n          itemStyle: {\n            color: 'RGB(55,135,45)'\n          },\n        },\n        {\n          name: `Fehlerhafte Tabellen: ${wrong_sum[6]}`,\n          value: wrong_sum[6],\n          itemStyle: {\n            color: \"RGB(196,22,42)\"\n          },\n        }\n      ]\n    },\n    {\n      name: \"Telemedienample\",\n      value: sum[7],\n      itemStyle: {\n        color: 'RGB(80,90,226)'\n      },\n      children: [\n        {\n          name: `Korrekte Tabellen: ${correct_sum[7]}`,\n          value: correct_sum[7],\n          itemStyle: {\n            color: 'RGB(55,135,45)'\n          },\n        },\n        {\n          name: `Fehlerhafte Tabellen: ${wrong_sum[7]}`,\n          value: wrong_sum[7],\n          itemStyle: {\n            color: \"RGB(196,22,42)\"\n          },\n        }\n      ]\n    },\n  ];\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nvar option = {\n  tooltip: {\n    trigger: 'item',\n    formatter: '{b}'\n  },\n  legend: {\n    data: [\n      { name: 'Korrekte Tabellen', icon: 'circle', itemStyle: { color: 'RGB(55,135,45)' } },\n      { name: 'Fehlerhafte Tabellen', icon: 'circle', itemStyle: { color: 'RGB(196,22,42)' } },\n      { name: 'ATI', icon: 'circle', itemStyle: { color: 'RGB(30,59,103)' } },\n      { name: 'Podcast', icon: 'circle', itemStyle: { color: 'RGB(73,92,119)' } },\n      { name: 'Social Media', icon: 'circle', itemStyle: { color: 'RGB(135,171,226)' } }\n    ],\n    orient: 'horizontal',\n    top: 'top'\n  },\n  toolbox: {\n    feature: {\n      dataView: {\n        show: true,\n        readOnly: true,\n        backgroundColor: '#000000',\n        textColor: '#ffffff',\n        optionToContent: function (opt) {\n          const seriesData = opt.series[0].data;\n          let table = '<table style=\"width:100%;text-align:center;color:white;\"><tbody>';\n          table += '<tr>'\n            + '<td>Category</td>'\n            + '<td>Total</td>'\n            + '<td>Korrekte Tabellen</td>'\n            + '<td>Fehlerhafte Tabellen</td>'\n            + '</tr>';\n          seriesData.forEach(item => {\n            table += '<tr>'\n              + `<td>${item.name}</td>`\n              + `<td>${item.value}</td>`\n              + `<td>${item.children[0].value}</td>`\n              + `<td>${item.children[1].value}</td>`\n              + '</tr>';\n          });\n          table += '</tbody></table>';\n          return table;\n        }\n      }\n    },\n    right: 20\n  },\n  series: {\n    type: 'sunburst',\n    data: series.flat(), // Flatten the array to correctly format the data\n    radius: [0, '99%'],\n    label: {\n      rotate: 'radial',\n      formatter: function (params) {\n        return params.name // Show only the text before the colon\n      },\n      fontSize: 11.5\n    }\n  }\n};\n\nreturn option;\n",
                    "google": {
                        "callback": "gmapReady",
                        "key": ""
                    },
                    "map": "none",
                    "renderer": "canvas",
                    "themeEditor": {
                        "config": "{}",
                        "height": 400,
                        "name": "default"
                    },
                    "visualEditor": {
                        "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
                        "dataset": [],
                        "series": []
                    }
                },
                "pluginVersion": "6.1.0",
                "targets": [
                    {
                        "datasource": {
                            "type": "grafana-bigquery-datasource",
                            "uid": "qUaUqEk4k"
                        },
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH correct AS(\r\n  SELECT \r\n  category,\r\nCOUNT(*) AS correct_sum\r\nFROM Monitoring.monitoring_bigquery_tables_daily\r\nWHERE\r\n\"$LRA\" = LRA\r\nAND\r\nDATETIME(tmstp) = \"$zeitfilter\"\r\nAND\r\nCASE\r\nWHEN \"Social Media\" = category THEN max_date >= expected_date\r\nWHEN \"Telemedienampel\" = category THEN max_date >= expected_date\r\nELSE max_date = expected_date END\r\nGROUP BY category\r\n),\r\nwrong AS(\r\n  SELECT \r\n  category,\r\nCOUNT(*) AS wrong_sum\r\nFROM Monitoring.monitoring_bigquery_tables_daily\r\nWHERE\r\n\"$LRA\" = LRA\r\nAND\r\nDATETIME(tmstp) = \"$zeitfilter\"\r\nAND\r\nCASE\r\nWHEN \"Social Media\" = category THEN max_date < expected_date\r\nWHEN \"Telemedienampel\" = category THEN max_date < expected_date\r\nELSE max_date != expected_date END\r\nGROUP BY category\r\n)\r\nSELECT category, IFNULL(correct_sum,0) + IFNULL(wrong_sum,0) AS summe, IFNULL(correct_sum,0) AS correct_sum, IFNULL(wrong_sum,0) AS wrong_sum\r\nFROM correct\r\nFULL JOIN wrong\r\nUSING (category)\r\nORDER BY category ASC",
                        "refId": "A",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    }
                ],
                "title": "${LRA}  | \u00dcbersicht aller korrekter und fehlerhafter Tabellen unterteilt nach den Kategorien",
                "transformations": [
                    {
                        "id": "organize",
                        "options": {}
                    }
                ],
                "transparent": true,
                "type": "volkovlabs-echarts-panel"
            },
            {
                "collapsed": false,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 102
                },
                "id": 38,
                "panels": [],
                "title": "APIs Status",
                "type": "row"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 19,
                    "w": 8,
                    "x": 0,
                    "y": 103
                },
                "id": 26,
                "options": {
                    "code": {
                        "language": "plaintext",
                        "showLineNumbers": false,
                        "showMiniMap": false
                    },
                    "content": "<iframe id=\"embeddedFrame\" src=\"https://piano.statuspage.io/\" width=\"100%\"> </iframe>\n<script>\nvar iframe = document.getElementById(\"embeddedFrame\");\n\n    function setIframeHeight() {\n        iframe.style.height = iframe.parentElement.offsetHeight-5 + \"px\";\n    }\n\n    // Call setIframeHeight when the iframe content is loaded\n    iframe.onload = setIframeHeight;\n\n    // Also, call setIframeHeight when the window is resized\n    window.addEventListener(\"resize\", setIframeHeight);\n</script>",
                    "mode": "html"
                },
                "pluginVersion": "11.1.3",
                "title": "Piano API-Status",
                "type": "text"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 19,
                    "w": 8,
                    "x": 8,
                    "y": 103
                },
                "id": 41,
                "options": {
                    "code": {
                        "language": "plaintext",
                        "showLineNumbers": false,
                        "showMiniMap": false
                    },
                    "content": "<script>\n// Define the iframe element\nvar iframe = document.getElementById(\"embeddedFrame\");\n\nfunction setIframeHeight() {\n    // Check if iframe and parent element exist\n    if (iframe && iframe.parentElement) {\n        // Set the iframe height to the parent's height\n        iframe.style.height = iframe.parentElement.offsetHeight + \"px\";\n    }\n}\n\n// Set iframe height when content is loaded and when window is resized\niframe.onload = setIframeHeight;\nwindow.addEventListener(\"resize\", setIframeHeight);\n</script>\n\n<iframe id=\"embeddedFrame\" src=\"https://status.quintly.com/\" width=\"100%\"></iframe>\n\n<style>\n#embeddedFrame {\n    border: none;\n    display: block;\n    width: 100%;\n    height: 100%;\n}\n</style>\n",
                    "mode": "html"
                },
                "pluginVersion": "11.1.3",
                "title": "Quintly API-Status",
                "type": "text"
            },
            {
                "datasource": {
                    "type": "grafana-bigquery-datasource",
                    "uid": "qUaUqEk4k"
                },
                "gridPos": {
                    "h": 19,
                    "w": 8,
                    "x": 16,
                    "y": 103
                },
                "id": 42,
                "options": {
                    "code": {
                        "language": "plaintext",
                        "showLineNumbers": false,
                        "showMiniMap": false
                    },
                    "content": "<iframe id=\"embeddedFrame\" src=\"https://status.elastic.co/\" width=\"100%\"> </iframe>\n<script>\nvar iframe = document.getElementById(\"embeddedFrame\");\n\n    function setIframeHeight() {\n        iframe.style.height = iframe.parentElement.offsetHeight-5 + \"px\";\n    }\n\n    // Call setIframeHeight when the iframe content is loaded\n    iframe.onload = setIframeHeight;\n\n    // Also, call setIframeHeight when the window is resized\n    window.addEventListener(\"resize\", setIframeHeight);\n</script>\n\n<style>\n#embeddedFrame {\n    border: none;\n    display: block;\n    width: 100%;\n    height: 100%;\n}\n</style>",
                    "mode": "html"
                },
                "pluginVersion": "11.1.3",
                "title": "Elastic API-Status",
                "type": "text"
            }
        ],
        "schemaVersion": 39,
        "tags": [],
        "templating": {
            "list": [
                {
                    "current": {
                        "selected": false,
                        "text": "NDR",
                        "value": "NDR"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 0,
                    "includeAll": false,
                    "multi": false,
                    "name": "LRA",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT DISTINCT LRA FROM Monitoring.monitoring_bigquery_tables_daily",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "allValue": "",
                    "current": {
                        "selected": true,
                        "text": [
                            "Alle Kategorien"
                        ],
                        "value": [
                            "Alle Kategorien"
                        ]
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 0,
                    "includeAll": false,
                    "multi": true,
                    "name": "Kategorie",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH categories AS (SELECT DISTINCT category, 1 AS sort FROM Monitoring.monitoring_bigquery_tables_daily WHERE LRA = \"$LRA\")\r\nSELECT REPLACE(category,\"'\",\"\") FROM(\r\n  SELECT * FROM categories\r\n  UNION ALL\r\n  SELECT \"Alle Kategorien\" AS category, 0 AS sort\r\n)\r\nORDER BY sort, category ASC",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "20",
                        "value": "20"
                    },
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "filled_size",
                    "options": [
                        {
                            "selected": true,
                            "text": "20",
                            "value": "20"
                        }
                    ],
                    "query": "20",
                    "skipUrlSync": false,
                    "type": "custom"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "25.06.2024 | 10:31 Uhr",
                        "value": "25.06.2024 | 10:31 Uhr"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "lastUpdate",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\nCASE MAX(tmstp)\r\n  WHEN NULL THEN \"N/A\"\r\n  ELSE FORMAT_DATETIME(\"%d.%m.%Y | %H:%M Uhr\", DATETIME(MAX(tmstp),\"Europe/Berlin\"))\r\n  END\r\nFROM `ndr-code-bi-dashboard.Monitoring.monitoring_bigquery_tables_daily`\r\n",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": true,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "https://cdn-assets-eu.frontify.com/s3/frontify-enterprise-files-eu/eyJwYXRoIjoibm9yZGRldXRzY2hlci1ydW5kZnVua1wvZmlsZVwvUXhLeVZObTkxemdFTTkxcmhIbnAuanBnIn0:norddeutscher-rundfunk:180WVEn3aprq-qhbFSwOtq-KZKuRXLnHIopbn4yYmvk?width=2400",
                        "value": "https://cdn-assets-eu.frontify.com/s3/frontify-enterprise-files-eu/eyJwYXRoIjoibm9yZGRldXRzY2hlci1ydW5kZnVua1wvZmlsZVwvUXhLeVZObTkxemdFTTkxcmhIbnAuanBnIn0:norddeutscher-rundfunk:180WVEn3aprq-qhbFSwOtq-KZKuRXLnHIopbn4yYmvk?width=2400"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "Image",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT CASE \"$LRA\"\r\n    WHEN \"NDR\" THEN \"https://cdn-assets-eu.frontify.com/s3/frontify-enterprise-files-eu/eyJwYXRoIjoibm9yZGRldXRzY2hlci1ydW5kZnVua1wvZmlsZVwvUXhLeVZObTkxemdFTTkxcmhIbnAuanBnIn0:norddeutscher-rundfunk:180WVEn3aprq-qhbFSwOtq-KZKuRXLnHIopbn4yYmvk?width=2400\" \r\n    WHEN \"MDR\" THEN \"https://share.ard-zdf-box.de/apps/files_sharing/publicpreview/Sxorbc6WLzk84iy?file=/&fileId=257042098&x=2132&y=1104&a=true&etag=31cb74f497586f722c788a3861963167\"\r\n    END ",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "2024-06-26 08:31:59.285244",
                        "value": "2024-06-26 08:31:59.285244"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "zeitfilter",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT DATETIME(MAX(tmstp)) FROM Monitoring.monitoring_bigquery_tables_daily",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "07.10.2024 | 11:59 Uhr",
                        "value": "07.10.2024 | 11:59 Uhr"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "lastUpdate_tenth_minute",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\nCASE MAX(tmstp)\r\n  WHEN NULL THEN \"N/A\"\r\n  ELSE FORMAT_DATETIME(\"%d.%m.%Y | %H:%M Uhr\", DATETIME(MAX(tmstp),\"Europe/Berlin\"))\r\n  END\r\nFROM `ndr-code-bi-dashboard.Monitoring.monitoring_bigquery_tables_tenth_minute`\r\n",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": true,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "2024-11-04 07:08:21.147109",
                        "value": "2024-11-04 07:08:21.147109"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "zeitfilter_tenth_minute_piano",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT DATETIME(MAX(tmstp)) FROM Monitoring.monitoring_bigquery_tables_tenth_minute\r\nWHERE category = \"ATI\"",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "08.10.2024",
                        "value": "08.10.2024"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "date_from_tmstp",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\nCASE MAX(tmstp)\r\n  WHEN NULL THEN \"N/A\"\r\n  ELSE FORMAT_DATETIME(\"%d.%m.%Y\", DATE(DATETIME(MAX(tmstp),\"Europe/Berlin\")))\r\n  END\r\nFROM `ndr-code-bi-dashboard.Monitoring.monitoring_bigquery_tables_tenth_minute`",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "2024-11-04 08:08:29.045961",
                        "value": "2024-11-04 08:08:29.045961"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "zeitfilter_tenth_minute_telemedienampel",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT DATETIME(MAX(tmstp)) FROM Monitoring.monitoring_bigquery_tables_tenth_minute\r\nWHERE category = \"Telemedienampel\"",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "2024-11-04 08:08:29.045961",
                        "value": "2024-11-04 08:08:29.045961"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "second_zeitfilter_tenth_minute_telemedienampel",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT DATETIME(tmstp) FROM(\r\nSELECT \r\ntmstp,\r\nROW_NUMBER() OVER (ORDER BY tmstp DESC) AS row_num \r\nFROM(\r\nSELECT\r\n    DISTINCT tmstp\r\nFROM \r\n  Monitoring.monitoring_bigquery_tables_tenth_minute\r\n  WHERE category = \"Telemedienampel\"\r\n)\r\n)\r\nWHERE row_num = 2",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "8",
                        "value": "8"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "telemedienampel_correct",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\nCAST(COALESCE(COUNT(*),0) AS STRING) AS summe\r\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\r\nWHERE\r\n\"$LRA\" = LRA\r\nAND\r\nDATETIME(tmstp) = \"$zeitfilter_tenth_minute_telemedienampel\"\r\nAND\r\nmax_date BETWEEN lower_bound_date AND upper_bound_date\r\nAND category = \"Telemedienampel\"",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "8",
                        "value": "8"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "second_telemedienampel_correct",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\nCAST(COALESCE(COUNT(*),0) AS STRING) AS summe\r\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\r\nWHERE\r\n\"$LRA\" = LRA\r\nAND\r\nDATETIME(tmstp) = \"$second_zeitfilter_tenth_minute_telemedienampel\"\r\nAND\r\nmax_date BETWEEN lower_bound_date AND upper_bound_date\r\nAND category = \"Telemedienampel\"",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "0",
                        "value": "0"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "telemedienampel_wrong",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\nCAST(COALESCE(COUNT(*),0) AS STRING) AS summe\r\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\r\nWHERE\r\n\"$LRA\" = LRA\r\nAND\r\nDATETIME(tmstp) = \"$zeitfilter_tenth_minute_telemedienampel\"\r\nAND\r\nNOT (max_date BETWEEN lower_bound_date AND upper_bound_date)\r\nAND category = \"Telemedienampel\"",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "current": {
                        "selected": false,
                        "text": "0",
                        "value": "0"
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "second_telemedienampel_wrong",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "SELECT \r\nCAST(COALESCE(COUNT(*),0) AS STRING) AS summe\r\nFROM Monitoring.monitoring_bigquery_tables_tenth_minute\r\nWHERE\r\n\"$LRA\" = LRA\r\nAND\r\nDATETIME(tmstp) = \"$second_zeitfilter_tenth_minute_telemedienampel\"\r\nAND\r\nNOT (max_date BETWEEN lower_bound_date AND upper_bound_date)\r\nAND category = \"Telemedienampel\"",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                },
                {
                    "allValue": "",
                    "current": {
                        "selected": true,
                        "text": [
                            "Alle Kategorien"
                        ],
                        "value": [
                            "Alle Kategorien"
                        ]
                    },
                    "datasource": {
                        "type": "grafana-bigquery-datasource",
                        "uid": "qUaUqEk4k"
                    },
                    "definition": "",
                    "hide": 0,
                    "includeAll": false,
                    "multi": true,
                    "name": "Zehn_Minuten_Kategorie",
                    "options": [],
                    "query": {
                        "editorMode": "code",
                        "format": 1,
                        "location": "europe-west3",
                        "project": "ndr-code-bi-dashboard",
                        "rawQuery": true,
                        "rawSql": "WITH categories AS (SELECT DISTINCT category, 1 AS sort FROM Monitoring.monitoring_bigquery_tables_tenth_minute WHERE LRA = \"$LRA\")\r\nSELECT REPLACE(category,\"'\",\"\") FROM(\r\n  SELECT * FROM categories\r\n  UNION ALL\r\n  SELECT \"Alle Kategorien\" AS category, 0 AS sort\r\n)\r\nORDER BY sort, category ASC",
                        "refId": "tempvar",
                        "sql": {
                            "columns": [
                                {
                                    "parameters": [],
                                    "type": "function"
                                }
                            ],
                            "groupBy": [
                                {
                                    "property": {
                                        "type": "string"
                                    },
                                    "type": "groupBy"
                                }
                            ],
                            "limit": 50
                        }
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query"
                }
            ]
        },
        "time": {
            "from": "now-6h",
            "to": "now"
        },
        "timepicker": {
            "hidden": true
        },
        "timezone": "",
        "title": "Monitoring",
        "uid": "tQgD-GyIk",
        "version": 44,
        "weekStart": ""
    }
}