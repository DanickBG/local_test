{
  "meta": {
    "type": "db",
    "canSave": true,
    "canEdit": true,
    "canAdmin": true,
    "canStar": true,
    "canDelete": true,
    "slug": "quotenreport-monatsdaten",
    "url": "/d/beaqvp0z4v2tcd/quotenreport-monatsdaten",
    "expires": "0001-01-01T00:00:00Z",
    "created": "2025-01-22T09:20:46Z",
    "updated": "2025-02-19T00:34:57Z",
    "updatedBy": "adrian westphal dev",
    "createdBy": "adrian westphal dev",
    "version": 34,
    "hasAcl": false,
    "isFolder": false,
    "folderId": 660,
    "folderUid": "folder-F9a5Uxn4k",
    "folderTitle": "Prototypes",
    "folderUrl": "/dashboards/f/folder-F9a5Uxn4k/prototypes",
    "provisioned": false,
    "provisionedExternalId": "",
    "annotationsPermissions": {
      "dashboard": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      },
      "organization": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      }
    }
  },
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 1588,
    "links": [],
    "panels": [
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 19,
          "x": 0,
          "y": 0
        },
        "id": 60,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<font size=\"6\" color=\"#2671c6\" style=\"font-weight:bold;\">Marktstandard Bewegtbild – lineare TV-Nutzung inkl. 24/7-Livestream</font>\r\n\r\n<font size=\"6\" style=\"font-weight:bold;\">${LRA:text} | $Sendung | Stand: $date_range_monthly </font>",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 13,
          "x": 0,
          "y": 4
        },
        "id": 215,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "#### Beinhaltet Sendungen, deren Startzeit nicht mehr als eine halbe Stunde vom Sendeplatz abweicht. Sonderausgaben bleiben in der Regel unberücksichtigt.",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 5,
          "x": 13,
          "y": 4
        },
        "id": 213,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "#### Aktualisierung erfolgt am 09. jedes Monats",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 6,
          "x": 18,
          "y": 4
        },
        "id": 212,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "##### <b>Nur zur ARD-internen Verwendung</b>",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 6
        },
        "id": 88,
        "panels": [],
        "title": "Jahresdaten",
        "type": "row"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 8,
          "x": 0,
          "y": 7
        },
        "id": 94,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "</br><center><font size=\"5\" style=\"font-weight:bold;\">Anzahl $sendung_or_sendetag</font></center>",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 8,
          "y": 7
        },
        "id": 90,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quotenreport_Sample",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT COUNT(title) as Sendungen\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${sendungsliste_monthly}`\r\nWHERE\r\nshow = \"${Sendung:text}\"\r\nAND year like \"$Jahr\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$date_range_monthly:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 13,
          "y": 7
        },
        "id": 92,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quotenreport_Sample",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT COUNT(title) as Sendungen\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${sendungsliste_native}`\r\nWHERE\r\nCASE WHEN \"${LRA}\" like \"sender\"\r\nTHEN\r\n  lra like \"SENDER\" and broadcaster_short like \"NDR FS\"\r\nELSE show = \"${Sendung:text}\"\r\nEND\r\nAND year like \"$LastJahr\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Gesamtjahr $LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 18,
          "y": 7
        },
        "id": 91,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quotenreport_Sample",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT COUNT(title) as Sendungen\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${sendungsliste_native}`\r\nWHERE\r\nCASE WHEN \"${LRA}\" like \"sender\"\r\nTHEN\r\n  lra like \"SENDER\" and broadcaster_short like \"NDR FS\"\r\nELSE show = \"${Sendung:text}\"\r\nEND\r\nAND year like \"$LastLastJahr\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Gesamtjahr $LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 2,
          "x": 0,
          "y": 10
        },
        "id": 132,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "description": "Anzahl der Zuschauer einer Zielgruppe, die anteilig ihrer Nutzungsdauer gezählt werden",
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 5,
          "x": 2,
          "y": 10
        },
        "id": 96,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "\n<center><font size=\"5\" style=\"font-weight:bold;\">   Sehbeteiligung (Mio.)</font></center>\n",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "description": "Gibt den prozentualen Anteil der durchschnittlichen Sehbeteiligung einer Sendung oder Zeitintervalls an der Sehbeteiligung TV Gesamt zum Zeitpunkt an",
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 7,
          "y": 10
        },
        "id": 98,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<center><font size=\"5\" style=\"font-weight:bold;\">Marktanteil (%)</font></center>",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "description": "Personen, die sich für mindestens eine Minute in das Programm eingeschaltet haben",
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 11,
          "y": 10
        },
        "id": 100,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<center><font size=\"5\" style=\"font-weight:bold;\">Seher (Mio.)</font></center>",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "description": "Verweildauer in Minuten (Durchschnittliche Sehdauer der Zuschauer die mindestens 1 Minute ohne Unterbrechung geschaut haben)",
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 15,
          "y": 10
        },
        "id": 102,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<center><font size=\"5\" style=\"font-weight:bold;\">Verweildauer</font></center>",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 19,
          "y": 10
        },
        "id": 105,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<center><font size=\"5\" style=\"font-weight:bold;\">Durchschnittsalter</font></center>",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 0,
          "y": 12
        },
        "id": 107,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "\n<font size=\"5\" color=\"#2671c6\" style=\"font-weight:bold;\">${BRD_or_NDR}</font>",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-red",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": ""
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "nan",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": " "
                        }
                      },
                      "type": "special"
                    }
                  ]
                },
                {
                  "id": "displayName",
                  "value": "Sehbeteiligung"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 3,
          "y": 12
        },
        "id": 109,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT --CONCAT(CAST(ROUND(sehbeteiligung,3) AS STRING), ' Mio.') as Sehbeteiligung\r\nCONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ','), \r\n  ' Mio.'\r\n)\r\n as Sehbeteiligung\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung:text}\"\r\nAND year like \"$Jahr\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$date_range_monthly:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 7,
          "y": 12
        },
        "id": 110,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT --CONCAT(CAST(ROUND(market_share,2) as STRING),'%') as Marktanteil\r\nCONCAT(REGEXP_REPLACE(FORMAT('%.1f', market_share), r'\\.', ','), \"%\")\r\n as Marktanteil\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year LIKE \"$Jahr\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$date_range_monthly:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#fa2a95",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Sehbeteiligung"
              },
              "properties": [
                {
                  "id": "displayName"
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": ""
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "nan",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": " "
                        }
                      },
                      "type": "special"
                    }
                  ]
                },
                {
                  "id": "displayName",
                  "value": "Seher"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 11,
          "y": 12
        },
        "id": 111,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT --CONCAT(CAST(ROUND(viewers,3) AS STRING), ' Mio.') as Seher\r\nCONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', viewers), r'\\.', ','), \r\n  ' Mio.'\r\n) as Seher\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year like \"$Jahr\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$date_range_monthly:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "orange",
                  "value": null
                }
              ]
            },
            "unit": "dthms"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": ""
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "from": 0,
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": " "
                        },
                        "to": 1E+91
                      },
                      "type": "range"
                    }
                  ]
                },
                {
                  "id": "displayName",
                  "value": "Verweildauer"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 15,
          "y": 12
        },
        "id": 121,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  (EXTRACT(HOUR FROM PARSE_TIME('%H:%M:%S', watch_time))*3600) + \r\n  (EXTRACT(MINUTE FROM PARSE_TIME('%H:%M:%S', watch_time))*60) + \r\n  (EXTRACT(SECOND FROM PARSE_TIME('%H:%M:%S', watch_time))) as Verweildauer\r\nFROM \r\n  `ndr-code-bi-dashboard.Quotenreport.${verweildauer_monthly}` \r\nWHERE \r\n  show LIKE \"${Sendung}\"\r\n  AND year like \"$Jahr\"\r\n  AND CASE \"${table_prefix}\" \r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$date_range_monthly:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#cd6aff",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 19,
          "y": 12
        },
        "id": 148,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT ROUND(average_age,0) as Durchschnittsalter\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year like \"$Jahr\"\r\nAND lra like \"${LRA:text}\" \r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$date_range_monthly:",
        "transparent": true,
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 2,
          "x": 1,
          "y": 15
        },
        "id": 202,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<font size=\"3\" color=\"#4d86c7\" style=\"font-weight:bold;\"><i>Gesamtjahre</i></font>",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 3,
          "y": 15
        },
        "id": 113,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT --CONCAT(CAST(ROUND(sehbeteiligung,3) AS STRING), ' Mio.') as sb\r\nCONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ','), \r\n  ' Mio.'\r\n) as Sehbeteiligung\r\nFROM `ndr-code-bi-dashboard.Quotenreport.ndr_zielgruppen_facts_native` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND year = \"$LastJahr\"\r\nAND show LIKE \"${Sendung:text}\"\r\n-- remove\r\nAND show not like \"Rote Rosen\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 5,
          "y": 15
        },
        "id": 112,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Special case for Riverboat 2024: show had a different name in 2022, so data for that year does not exist in dataset\r\nIF (\"${Sendung:text}\" = \"Riverboat\" AND $Jahr = 2024) THEN (\r\n  SELECT 0.331026659685 as Sehbeteiligung\r\n);\r\nELSE ( \r\n  SELECT \r\n   CONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ','), \r\n  ' Mio.'\r\n) AS Sehbeteiligung\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\n  WHERE\r\n    target_group LIKE \"${BRD_or_NDR}%\"\r\n    AND year = \"$LastLastJahr\"\r\n    AND show LIKE \"${Sendung:text}\"\r\n    -- remove after data fix\r\n    -- AND show NOT LIKE \"Extra3\"\r\n    -- AND show NOT LIKE \"Weltspiegel\"\r\n    -- AND show NOT LIKE \"Zoodokus\"\r\n    -- AND show NOT LIKE \"Dokumentationen und Service\"\r\n);\r\nEND IF;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 7,
          "y": 15
        },
        "id": 115,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT --CONCAT(CAST(ROUND(market_share,1) as STRING),'%') as Marktanteil\r\nCONCAT(REGEXP_REPLACE(FORMAT('%.1f', market_share), r'\\.', ','), \"%\")\r\n as Marktanteil\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year LIKE \"$LastJahr\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 9,
          "y": 15
        },
        "id": 114,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Special case for Riverboat 2024: show had a different name in 2022, so data for that year does not exist in dataset\r\nIF (\"${Sendung:text}\" = \"Riverboat\" AND $Jahr = 2024) THEN (\r\n  SELECT 14.985605308226 as Marktanteil\r\n);\r\nELSE ( \r\n  SELECT --CONCAT(CAST(ROUND(market_share,1) as STRING),'%') as Marktanteil\r\n  CONCAT(REGEXP_REPLACE(FORMAT('%.1f', market_share), r'\\.', ','), \"%\")\r\n as Marktanteil\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\n  WHERE\r\n  target_group = \"${BRD_or_NDR}\"\r\n  AND show like \"${Sendung}\"\r\n  AND year LIKE \"$LastLastJahr\"\r\n  --AND show NOT LIKE \"Extra3\"\r\n  ---AND show NOT LIKE \"Weltspiegel\"\r\n  --AND show NOT LIKE \"Zoodokus\"\r\n  --AND show NOT LIKE \"Dokumentationen und Service\"\r\n);\r\nEND IF;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 11,
          "y": 15
        },
        "id": 117,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT --CONCAT(CAST(ROUND(viewers,3) AS STRING), ' Mio.') as Seher\r\nCONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', viewers), r'\\.', ','), \r\n  ' Mio.'\r\n)\r\n as Seher\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year like \"$LastJahr\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 13,
          "y": 15
        },
        "id": 116,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Special case for Riverboat 2024: show had a different name in 2022, so data for that year does not exist in dataset\r\nIF (\"${Sendung:text}\" = \"Riverboat\" AND $Jahr = 2024) THEN (\r\n  SELECT 0.828348250387 as Seher\r\n);\r\nELSE ( \r\n  SELECT --CONCAT(CAST(ROUND(viewers,3) AS STRING), ' Mio.') as Seher\r\n CONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', viewers), r'\\.', ','), \r\n  ' Mio.'\r\n)\r\n as Seher\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\n  WHERE\r\n  target_group = \"${BRD_or_NDR}\"\r\n  AND show like \"${Sendung}\"\r\n  AND year like \"$LastLastJahr\"\r\n  --AND show NOT LIKE \"Extra3\"\r\n  --AND show NOT LIKE \"Weltspiegel\"\r\n  --AND show NOT LIKE \"Zoodokus\"\r\n  --AND show NOT LIKE \"Nrdt. Factual Entertainment\"\r\n  --AND show NOT LIKE \"Dokumentationen und Service\"\r\n);\r\nEND IF;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "dthms"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 15,
          "y": 15
        },
        "id": 123,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  (EXTRACT(HOUR FROM PARSE_TIME('%H:%M:%S', watch_time))*3600) + \r\n  (EXTRACT(MINUTE FROM PARSE_TIME('%H:%M:%S', watch_time))*60) + \r\n  (EXTRACT(SECOND FROM PARSE_TIME('%H:%M:%S', watch_time))) as Verweildauer\r\nFROM \r\n  `ndr-code-bi-dashboard.Quotenreport.${verweildauer_native}` \r\nWHERE \r\n  show LIKE \"${Sendung}\"\r\n  AND year like \"$LastJahr\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "dthms"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 17,
          "y": 15
        },
        "id": 180,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Special case for Riverboat 2024: show had a different name in 2022, so data for that year does not exist in dataset\r\nIF (\"${Sendung:text}\" = \"Riverboat\" AND $Jahr = 2024) THEN (\r\n  SELECT \"00:51:39\" as Verweildauer\r\n);\r\nELSE ( \r\n  SELECT \r\n    (EXTRACT(HOUR FROM PARSE_TIME('%H:%M:%S', watch_time))*3600) + \r\n    (EXTRACT(MINUTE FROM PARSE_TIME('%H:%M:%S', watch_time))*60) + \r\n    (EXTRACT(SECOND FROM PARSE_TIME('%H:%M:%S', watch_time))) as Verweildauer\r\n  FROM \r\n    `ndr-code-bi-dashboard.Quotenreport.${verweildauer_native}` \r\n  WHERE \r\n    show LIKE \"${Sendung}\"\r\n    AND year like \"$LastLastJahr\"\r\n    --remove after data fix\r\n  --AND show NOT LIKE \"Extra3\"\r\n  --AND show NOT LIKE \"Weltspiegel\"\r\n  --AND show NOT LIKE \"Zoodokus\"\r\n  --AND show NOT LIKE \"Nrdt. Factual Entertainment\"\r\n  --AND show NOT LIKE \"Dokumentationen und Service\"\r\n);\r\nEND IF;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 19,
          "y": 15
        },
        "id": 128,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT ROUND(average_age,0) as Durchschnittsalter\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year like \"$LastJahr\"\r\n--remove\r\nAND show not like \"Schleswig-Holstein Magazin\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 21,
          "y": 15
        },
        "id": 129,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Special case for Riverboat 2024: show had a different name in 2022, so data for that year does not exist in dataset\r\nIF (\"${Sendung:text}\" = \"Riverboat\" AND $Jahr = 2024) THEN (\r\n  SELECT 71.540083717991 as Durchschnittsalter\r\n);\r\nELSE ( \r\n  SELECT ROUND(average_age,0) as Durchschnittsalter\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\n  WHERE\r\n  target_group = \"${BRD_or_NDR}\"\r\n  AND show like \"${Sendung}\"\r\n  AND year like \"$LastLastJahr\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  --AND show NOT LIKE \"Extra3\"\r\n  --AND show NOT LIKE \"Weltspiegel\"\r\n  --AND show NOT LIKE \"Zoodokus\"\r\n  --AND show NOT LIKE \"Dokumentationen und Service\"\r\n);\r\nEND IF;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 18
        },
        "id": 119,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 2,
          "x": 1,
          "y": 19
        },
        "id": 216,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<font size=\"3\" color=\"#4d86c7\" style=\"font-weight:bold;\"><i>Januar - ${Monat:text} </i></font>",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 3,
          "y": 19
        },
        "id": 217,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT --CONCAT(CAST(ROUND(sehbeteiligung,3) AS STRING), ' Mio.') as sb\r\nCONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ','), \r\n  ' Mio.'\r\n) as Sehbeteiligung\r\n FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND year = \"$LastJahr\"\r\nAND show LIKE \"${Sendung:text}\"\r\n-- remove\r\nAND show not like \"Rote Rosen\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 5,
          "y": 19
        },
        "id": 218,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Special case for Riverboat 2024: show had a different name in 2022, so data for that year does not exist in dataset\r\nIF (\"${Sendung:text}\" = \"Riverboat\" AND $Jahr = 2024) THEN (\r\n  SELECT 0.331026659685 as Sehbeteiligung\r\n);\r\nELSE ( \r\n  SELECT \r\n   CONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ','), \r\n  ' Mio.'\r\n) AS Sehbeteiligung\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\n  WHERE\r\n    target_group LIKE \"${BRD_or_NDR}%\"\r\n    AND year = \"$LastLastJahr\"\r\n    AND show LIKE \"${Sendung:text}\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n    -- remove after data fix\r\n    -- AND show NOT LIKE \"Extra3\"\r\n    -- AND show NOT LIKE \"Weltspiegel\"\r\n    -- AND show NOT LIKE \"Zoodokus\"\r\n    -- AND show NOT LIKE \"Dokumentationen und Service\"\r\n);\r\nEND IF;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 7,
          "y": 19
        },
        "id": 219,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT --CONCAT(CAST(ROUND(market_share,1) as STRING),'%') as Marktanteil\r\nCONCAT(REGEXP_REPLACE(FORMAT('%.1f', market_share), r'\\.', ','), \"%\")\r\n as Marktanteil\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year LIKE \"$LastJahr\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 9,
          "y": 19
        },
        "id": 220,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Special case for Riverboat 2024: show had a different name in 2022, so data for that year does not exist in dataset\r\nIF (\"${Sendung:text}\" = \"Riverboat\" AND $Jahr = 2024) THEN (\r\n  SELECT 14.985605308226 as Marktanteil\r\n);\r\nELSE ( \r\n  SELECT --CONCAT(CAST(ROUND(market_share,1) as STRING),'%') as Marktanteil\r\n  CONCAT(REGEXP_REPLACE(FORMAT('%.1f', market_share), r'\\.', ','), \"%\")\r\n as Marktanteil\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\n  WHERE\r\n  target_group = \"${BRD_or_NDR}\"\r\n  AND show like \"${Sendung}\"\r\n  AND year LIKE \"$LastLastJahr\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  --AND show NOT LIKE \"Extra3\"\r\n  ---AND show NOT LIKE \"Weltspiegel\"\r\n  --AND show NOT LIKE \"Zoodokus\"\r\n  --AND show NOT LIKE \"Dokumentationen und Service\"\r\n);\r\nEND IF;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 11,
          "y": 19
        },
        "id": 221,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT --CONCAT(CAST(ROUND(viewers,3) AS STRING), ' Mio.') as Seher\r\nCONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', viewers), r'\\.', ','), \r\n  ' Mio.'\r\n)\r\n as Seher\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year like \"$LastJahr\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 13,
          "y": 19
        },
        "id": 222,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Special case for Riverboat 2024: show had a different name in 2022, so data for that year does not exist in dataset\r\nIF (\"${Sendung:text}\" = \"Riverboat\" AND $Jahr = 2024) THEN (\r\n  SELECT 0.828348250387 as Seher\r\n);\r\nELSE ( \r\n  SELECT --CONCAT(CAST(ROUND(viewers,3) AS STRING), ' Mio.') as Seher\r\n CONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', viewers), r'\\.', ','), \r\n  ' Mio.'\r\n)\r\n as Seher\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\n  WHERE\r\n  target_group = \"${BRD_or_NDR}\"\r\n  AND show like \"${Sendung}\"\r\n  AND year like \"$LastLastJahr\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  --AND show NOT LIKE \"Extra3\"\r\n  --AND show NOT LIKE \"Weltspiegel\"\r\n  --AND show NOT LIKE \"Zoodokus\"\r\n  --AND show NOT LIKE \"Nrdt. Factual Entertainment\"\r\n  --AND show NOT LIKE \"Dokumentationen und Service\"\r\n);\r\nEND IF;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "dthms"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 15,
          "y": 19
        },
        "id": 223,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  (EXTRACT(HOUR FROM PARSE_TIME('%H:%M:%S', watch_time))*3600) + \r\n  (EXTRACT(MINUTE FROM PARSE_TIME('%H:%M:%S', watch_time))*60) + \r\n  (EXTRACT(SECOND FROM PARSE_TIME('%H:%M:%S', watch_time))) as Verweildauer\r\nFROM \r\n  `ndr-code-bi-dashboard.Quotenreport.${verweildauer_monthly}` \r\nWHERE \r\n  show LIKE \"${Sendung}\"\r\n  AND year like \"$LastJahr\"\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "dthms"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 17,
          "y": 19
        },
        "id": 224,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Special case for Riverboat 2024: show had a different name in 2022, so data for that year does not exist in dataset\r\nIF (\"${Sendung:text}\" = \"Riverboat\" AND $Jahr = 2024) THEN (\r\n  SELECT \"00:51:39\" as Verweildauer\r\n);\r\nELSE ( \r\n  SELECT \r\n    (EXTRACT(HOUR FROM PARSE_TIME('%H:%M:%S', watch_time))*3600) + \r\n    (EXTRACT(MINUTE FROM PARSE_TIME('%H:%M:%S', watch_time))*60) + \r\n    (EXTRACT(SECOND FROM PARSE_TIME('%H:%M:%S', watch_time))) as Verweildauer\r\n  FROM \r\n    `ndr-code-bi-dashboard.Quotenreport.${verweildauer_monthly}` \r\n  WHERE \r\n    show LIKE \"${Sendung}\"\r\n    AND year like \"$LastLastJahr\"\r\n        AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n    --remove after data fix\r\n  --AND show NOT LIKE \"Extra3\"\r\n  --AND show NOT LIKE \"Weltspiegel\"\r\n  --AND show NOT LIKE \"Zoodokus\"\r\n  --AND show NOT LIKE \"Nrdt. Factual Entertainment\"\r\n  --AND show NOT LIKE \"Dokumentationen und Service\"\r\n);\r\nEND IF;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 19,
          "y": 19
        },
        "id": 225,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT ROUND(average_age,0) as Durchschnittsalter\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year like \"$LastJahr\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n--remove\r\nAND show not like \"Schleswig-Holstein Magazin\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 21,
          "y": 19
        },
        "id": 226,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Special case for Riverboat 2024: show had a different name in 2022, so data for that year does not exist in dataset\r\nIF (\"${Sendung:text}\" = \"Riverboat\" AND $Jahr = 2024) THEN (\r\n  SELECT 71.540083717991 as Durchschnittsalter\r\n);\r\nELSE ( \r\n  SELECT ROUND(average_age,0) as Durchschnittsalter\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\n  WHERE\r\n  target_group = \"${BRD_or_NDR}\"\r\n  AND show like \"${Sendung}\"\r\n  AND year like \"$LastLastJahr\"\r\n  --AND show NOT LIKE \"Extra3\"\r\n  --AND show NOT LIKE \"Weltspiegel\"\r\n  --AND show NOT LIKE \"Zoodokus\"\r\n  --AND show NOT LIKE \"Dokumentationen und Service\"\r\n);\r\nEND IF;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$LastLastJahr:",
        "transparent": true,
        "type": "stat"
      },
      {
        "description": "Ergebnisse für BRD gesamt werden nur für NDR & MDR angezeigt.",
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 0,
          "y": 21
        },
        "id": 131,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "\n<font size=\"5\" color=\"#2671c6\" style=\"font-weight:bold;\">${BRD_or_none}</font>",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-red",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "INVALID"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "empty",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": "‎ "
                        }
                      },
                      "type": "special"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 3,
          "y": 22
        },
        "id": 133,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ((\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\") OR \"${LRA:text}\" LIKE \"ARD\" OR \"${special_region}\" NOT LIKE \"\") THEN (\r\n  SELECT \"\" as INVALID\r\n);\r\nELSE ( \r\n  SELECT --CONCAT(CAST(ROUND(sehbeteiligung,3) AS STRING), ' Mio.') as Sehbeteiligung\r\n  CONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ','), \r\n  ' Mio.'\r\n) as Sehbeteiligung\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\n  WHERE target_group = \"BRD gesamt\" AND show like \"${Sendung}\" AND year like \"$Jahr\" \r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n);\r\nEND IF;\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$jahrHidden",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "INVALID"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "empty",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": "‎"
                        }
                      },
                      "type": "special"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 7,
          "y": 22
        },
        "id": 137,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ((\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\") OR \"${LRA:text}\" LIKE \"ARD\" OR \"${special_region}\" NOT LIKE \"\") THEN (\r\n  SELECT \"\" as INVALID\r\n);\r\nELSE ( \r\n  SELECT --CONCAT(CAST(ROUND(market_share,1) AS STRING), '%') as Marktanteil\r\n  CONCAT(REGEXP_REPLACE(FORMAT('%.1f', market_share), r'\\.', ','), \"%\")\r\n as Marktanteil\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\n  WHERE target_group = \"BRD gesamt\" AND show like \"${Sendung}\" AND year like \"$Jahr\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n);\r\nEND IF;\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$jahrHidden",
        "transparent": true,
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 2,
          "x": 1,
          "y": 24
        },
        "id": 203,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "\n<font size=\"3\" color=\"#4d86c7\" style=\"font-weight:bold;\"><i>$gesamtjahre_hidden</i></font>",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "INVALID"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "empty",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": "‎ "
                        }
                      },
                      "type": "special"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 3,
          "y": 25
        },
        "id": 135,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ((\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\") OR \"${LRA:text}\" LIKE \"ARD\" OR \"${special_region}\" NOT LIKE \"\") THEN (\r\n  SELECT \"\" as INVALID \r\n);\r\nELSE ( \r\n  SELECT --CONCAT(CAST(ROUND(sehbeteiligung,3) AS STRING), ' Mio.') as Sehbeteiligung\r\n  CONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ','), \r\n  ' Mio.'\r\n) as Sehbeteiligung\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\n  WHERE target_group = \"BRD gesamt\" AND show like \"${Sendung}\" AND year like \"$LastJahr\"\r\n);\r\nEND IF;\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$lastJahrHidden",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "INVALID"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "empty",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": "‎"
                        }
                      },
                      "type": "special"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 5,
          "y": 25
        },
        "id": 136,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Handle the first condition\r\nSELECT \"\" AS INVALID\r\nFROM UNNEST([1]) AS dummy\r\nWHERE (\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\")\r\n   OR \"${LRA:text}\" LIKE \"ARD\"\r\n   OR \"${special_region}\" NOT LIKE \"\"\r\n\r\nUNION ALL\r\n\r\n-- Handle the second condition\r\nSELECT CAST(0.611194112454 AS STRING) AS Sehbeteiligung\r\nFROM UNNEST([1]) AS dummy\r\nWHERE \"${Sendung}\" LIKE \"Riverboat\" AND $Jahr = 2024\r\n\r\nUNION ALL\r\n\r\n-- Default case: the main query\r\nSELECT \r\n  CONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ','), \r\n  ' Mio.'\r\n) AS Sehbeteiligung\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}`\r\nWHERE \r\n  target_group = \"BRD gesamt\"\r\n  AND show LIKE \"${Sendung}\"\r\n  AND year LIKE \"$LastLastJahr\"\r\n  AND NOT (\r\n    (\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\")\r\n    OR \"${LRA:text}\" LIKE \"ARD\"\r\n    OR \"${special_region}\" NOT LIKE \"\"\r\n    OR (\"${Sendung}\" LIKE \"Riverboat\" AND $Jahr = 2024)\r\n  )\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$lastLastJahrHidden",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "INVALID"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "empty",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": "‎"
                        }
                      },
                      "type": "special"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 7,
          "y": 25
        },
        "id": 138,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ((\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\") OR \"${LRA:text}\" LIKE \"ARD\" OR \"${special_region}\" NOT LIKE \"\") THEN (\r\n  SELECT \"\" as INVALID\r\n);\r\nELSE ( \r\n  SELECT --CONCAT(CAST(ROUND(market_share,1) AS STRING), '%') as Marktanteil\r\n  CONCAT(REGEXP_REPLACE(FORMAT('%.1f', market_share), r'\\.', ','), \"%\")\r\n as Marktanteil\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\n  WHERE target_group = \"BRD gesamt\" AND show like \"${Sendung}\" AND year like \"$LastJahr\"\r\n);\r\nEND IF;\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$lastJahrHidden",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "INVALID"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "empty",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": "‎"
                        }
                      },
                      "type": "special"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 9,
          "y": 25
        },
        "id": 139,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Handle the first condition\r\nSELECT \"\" AS INVALID\r\nFROM UNNEST([1]) AS dummy\r\nWHERE (\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\")\r\n   OR \"${LRA:text}\" LIKE \"ARD\"\r\n   OR \"${special_region}\" NOT LIKE \"\"\r\n\r\nUNION ALL\r\n\r\n-- Handle the second condition: Riverboat 2024 with hardcoded market_share\r\nSELECT CAST(3.2 as STRING) AS Marktanteil\r\nFROM UNNEST([1]) AS dummy\r\nWHERE \"${Sendung}\" LIKE \"Riverboat\" AND $Jahr = 2024\r\n\r\nUNION ALL\r\n\r\n-- Default case: the main query\r\nSELECT \r\n  CONCAT(REGEXP_REPLACE(FORMAT('%.1f', market_share), r'\\.', ','), \"%\")\r\n as Marktanteil \r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}`\r\nWHERE \r\n  target_group = \"BRD gesamt\"\r\n  AND show LIKE \"${Sendung}\"\r\n  AND year LIKE \"$LastLastJahr\"\r\n  AND NOT (\r\n    (\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\")\r\n    OR \"${LRA:text}\" LIKE \"ARD\"\r\n    OR \"${special_region}\" NOT LIKE \"\"\r\n    OR (\"${Sendung}\" LIKE \"Riverboat\" AND $Jahr = 2024)\r\n  )\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$lastLastJahrHidden",
        "transparent": true,
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 2,
          "x": 1,
          "y": 26
        },
        "id": 229,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "\n",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 2,
          "x": 1,
          "y": 28
        },
        "id": 231,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "\n<font size=\"3\" color=\"#4d86c7\" style=\"font-weight:bold;\"><i>$gesamtjahre_hidden_monat</i></font>",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "INVALID"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "empty",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": "‎ "
                        }
                      },
                      "type": "special"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 3,
          "y": 28
        },
        "id": 230,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ((\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\") OR \"${LRA:text}\" LIKE \"ARD\" OR \"${special_region}\" NOT LIKE \"\") THEN (\r\n  SELECT \"\" as INVALID \r\n);\r\nELSE ( \r\n  SELECT --CONCAT(CAST(ROUND(sehbeteiligung,3) AS STRING), ' Mio.') as Sehbeteiligung\r\n  CONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ','), \r\n  ' Mio.'\r\n) as Sehbeteiligung\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\n  WHERE target_group = \"BRD gesamt\" AND show like \"${Sendung}\" AND year like \"$LastJahr\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n);\r\nEND IF;\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$lastJahrHidden",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "Mio."
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "INVALID"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "empty",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": "‎"
                        }
                      },
                      "type": "special"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 5,
          "y": 28
        },
        "id": 232,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Handle the first condition\r\nSELECT \"\" AS INVALID\r\nFROM UNNEST([1]) AS dummy\r\nWHERE (\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\")\r\n   OR \"${LRA:text}\" LIKE \"ARD\"\r\n   OR \"${special_region}\" NOT LIKE \"\"\r\n\r\nUNION ALL\r\n\r\n-- Handle the second condition\r\nSELECT CAST(0.611194112454 AS STRING) AS Sehbeteiligung\r\nFROM UNNEST([1]) AS dummy\r\nWHERE \"${Sendung}\" LIKE \"Riverboat\" AND $Jahr = 2024\r\n\r\nUNION ALL\r\n\r\n-- Default case: the main query\r\nSELECT \r\n  CONCAT(\r\n  REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ','), \r\n  ' Mio.'\r\n) AS Sehbeteiligung\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\nWHERE \r\n  target_group = \"BRD gesamt\"\r\n  AND show LIKE \"${Sendung}\"\r\n  AND year LIKE \"$LastLastJahr\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND NOT (\r\n    (\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\")\r\n    OR \"${LRA:text}\" LIKE \"ARD\"\r\n    OR \"${special_region}\" NOT LIKE \"\"\r\n    OR (\"${Sendung}\" LIKE \"Riverboat\" AND $Jahr = 2024)\r\n  )\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$lastLastJahrHidden",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "semi-dark-blue",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "INVALID"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "empty",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": "‎"
                        }
                      },
                      "type": "special"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 7,
          "y": 28
        },
        "id": 233,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ((\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\") OR \"${LRA:text}\" LIKE \"ARD\" OR \"${special_region}\" NOT LIKE \"\") THEN (\r\n  SELECT \"\" as INVALID\r\n);\r\nELSE ( \r\n  SELECT --CONCAT(CAST(ROUND(market_share,1) AS STRING), '%') as Marktanteil\r\n  CONCAT(REGEXP_REPLACE(FORMAT('%.1f', market_share), r'\\.', ','), \"%\")\r\n as Marktanteil\r\n  FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\n  WHERE target_group = \"BRD gesamt\" AND show like \"${Sendung}\" AND year like \"$LastJahr\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n);\r\nEND IF;\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$lastJahrHidden",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-blue",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "INVALID"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "match": "empty",
                        "result": {
                          "color": "transparent",
                          "index": 0,
                          "text": "‎"
                        }
                      },
                      "type": "special"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 9,
          "y": 28
        },
        "id": 234,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Handle the first condition\r\nSELECT \"\" AS INVALID\r\nFROM UNNEST([1]) AS dummy\r\nWHERE (\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\")\r\n   OR \"${LRA:text}\" LIKE \"ARD\"\r\n   OR \"${special_region}\" NOT LIKE \"\"\r\n\r\nUNION ALL\r\n\r\n-- Handle the second condition: Riverboat 2024 with hardcoded market_share\r\nSELECT CAST(3.2 as STRING) AS Marktanteil\r\nFROM UNNEST([1]) AS dummy\r\nWHERE \"${Sendung}\" LIKE \"Riverboat\" AND $Jahr = 2024\r\n\r\nUNION ALL\r\n\r\n-- Default case: the main query\r\nSELECT \r\n  CONCAT(REGEXP_REPLACE(FORMAT('%.1f', market_share), r'\\.', ','), \"%\")\r\n as Marktanteil \r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\nWHERE \r\n  target_group = \"BRD gesamt\"\r\n  AND show LIKE \"${Sendung}\"\r\n  AND year LIKE \"$LastLastJahr\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND NOT (\r\n    (\"${LRA:text}\" LIKE \"Sender\" AND \"${Sendung:text}\" NOT LIKE \"%DR Fernsehen\")\r\n    OR \"${LRA:text}\" LIKE \"ARD\"\r\n    OR \"${special_region}\" NOT LIKE \"\"\r\n    OR (\"${Sendung}\" LIKE \"Riverboat\" AND $Jahr = 2024)\r\n  )\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$lastLastJahrHidden",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 31
        },
        "id": 171,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 32
        },
        "id": 72,
        "panels": [],
        "title": "Zielgruppen",
        "type": "row"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 24,
          "x": 0,
          "y": 33
        },
        "id": 214,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "## <span style=\"color:#BC4542\"><b>$hinweis_regionalmagazin_top</b></span>\n\n### $hinweis_regionalmagazin $special_region_aufkleber",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 16,
          "w": 18,
          "x": 0,
          "y": 36
        },
        "id": 187,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 1063
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "// Helper function for German number formatting\nfunction formatNumberGerman(value, decimals = 2) {\n  return new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  }).format(value);\n}\n\n// Holen der initialen Daten\nconst zielgruppeField = context.panel.data.series[0].fields.find(f => f.name === 'zg');\nconst marktanteilField = context.panel.data.series[0].fields.find(f => f.name === 'ma');\nconst sehbeteiligungField = context.panel.data.series[0].fields.find(f => f.name === 'sb');\n\n// Prüfen, ob die Felder existieren, und die Werte in der gewünschten Reihenfolge anordnen\nlet zielgruppeValues = [];\nlet marktanteilValues = [];\nlet sehbeteiligungValues = [];\n\nif (zielgruppeField && marktanteilField && sehbeteiligungField) {\n  zielgruppeValues = zielgruppeField.values.map(value => value);\n  marktanteilValues = marktanteilField.values.map(value => value);\n  sehbeteiligungValues = sehbeteiligungField.values.map(value => value);\n\n  const combined = zielgruppeValues.map((zg, index) => ({\n    zg,\n    ma: marktanteilValues[index],\n    sb: sehbeteiligungValues[index]\n  }));\n\n  zielgruppeValues = combined.map(item => item.zg);\n  marktanteilValues = combined.map(item => item.ma);\n  sehbeteiligungValues = combined.map(item => item.sb);\n}\n\nconst legendWordField = context.panel.data.series[0].fields.find(f => f.name === 'legendName');\nlet legendWord = legendWordField?.values.get(0) ?? \"Reichweite\";\n\n// Initialisieren der Series\nconst series = [\n  {\n    name: 'Marktanteil (%)',\n    type: 'bar',\n    label: {\n      show: true,\n      position: 'top',\n      fontWeight: 'bold',\n      fontSize: '21',\n      formatter: function (params) {\n        let formattedNumber = formatNumberGerman(params.value, 1);\n        return `${formattedNumber} %`;\n      }\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: function (value) {\n        let formattedNumber = formatNumberGerman(value, 1);\n        return `${formattedNumber} %`;\n      }\n    },\n    data: zielgruppeValues.map((zg, index) => {\n      const value = marktanteilValues[index];\n      const roundedValue = Math.round(value * 10) / 10;\n      return {\n        value: roundedValue,\n        name: zg\n      };\n    })\n  },\n  {\n    name: `${legendWord} (Mio.)`,\n    type: 'scatter',\n    symbol: 'circle',\n    symbolSize: 15,\n    label: {\n      show: true,\n      position: ['250%', 0],\n      fontWeight: 'bold',\n      fontSize: '21',\n      formatter: function (params) {\n        let formattedNumber = formatNumberGerman(params.value[1], 3);\n        return `${formattedNumber}`;\n      }\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: function (value) {\n        let formattedNumber = formatNumberGerman(value, 3);\n        return `${formattedNumber} Mio.`;\n      }\n    },\n    yAxisIndex: 1,\n    data: sehbeteiligungValues.map((value, index) => {\n      const roundedValue = Math.round(value * 1000) / 1000;\n      return [zielgruppeValues[index], roundedValue];\n    })\n  }\n];\n\nreturn {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'none',\n      crossStyle: { color: '#999' }\n    }\n  },\n  toolbox: {\n    feature: {\n      dataView: { show: true, readOnly: false },\n      magicType: { show: true },\n      restore: { show: true },\n      saveAsImage: { show: true }\n    }\n  },\n  legend: {\n    icon: 'circle',\n    inactiveColor: '#767676',\n    borderColor: '#969696',\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 7,\n    itemGap: 30,\n    textStyle: { fontSize: 14, fontWeight: 'bold' },\n    symbolRotate: 90,\n    data: ['Marktanteil (%)', `${legendWord} (Mio.)`]\n  },\n  xAxis: [\n    {\n      type: 'category',\n      data: zielgruppeValues,\n      axisPointer: { type: 'shadow' },\n      bounddaryGap: true,\n      axisTick: {\n        alignWithLabel: true,\n        interval: 0\n      },\n      axisLabel: {\n        interval: 0,\n        fontWeight: 'bold'\n      }\n    }\n  ],\n  yAxis: [\n    {\n      type: 'value',\n      show: false,\n      min: 0,\n      interval: 10,\n      axisLabel: { formatter: '{value} %' }\n    },\n    {\n      type: 'value',\n      show: false,\n      min: 0,\n      max: 'auto',\n      interval: 0.5\n    }\n  ],\n  grid: [{ top: '13%' }],\n  series,\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  target_group as zg,\r\n  market_share as ma,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN ROUND(viewers, 3)\r\n    ELSE ROUND(sehbeteiligung, 3)\r\n  END AS sb,\r\n  CASE\r\n    WHEN ${LRA:doublequote} = \"sender\" THEN \"Seher\"\r\n    ELSE \"Sehbeteiligung\"\r\n  END as legendName\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` as data\r\nWHERE\r\n  show = \"${Sendung}\"\r\n  and year like \"$Jahr\"\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND\r\n    CASE WHEN \"${LRA:text}\" LIKE \"NDR\" OR \"${Sendung:text}\" LIKE \"NDR Fernsehen\"\r\n      THEN\r\n      target_group LIKE \"NDR Gebiet\"\r\n      OR target_group LIKE \"Niedersachsen\"\r\n      OR target_group LIKE \"Schleswig-Holstein\"\r\n      OR target_group LIKE \"Mecklenburg-Vorpommern\"\r\n      OR target_group LIKE \"Hamburg\"\r\n      OR target_group LIKE \"Bremen\"\r\n      OR target_group LIKE \"%BRD%\"\r\n    WHEN \"${LRA:text}\" LIKE \"MDR\"\r\n      THEN\r\n      target_group LIKE \"MDR-Gebiet Z3+\"\r\n      OR target_group LIKE \"Sachsen\"\r\n      OR target_group LIKE \"Thüringen\"\r\n      OR target_group LIKE \"Sachsen-Anhalt\"\r\n      OR target_group LIKE \"%BRD%\"\r\n    WHEN \"${LRA:text}\" LIKE \"ARD\" OR \"${Sendung:text}\" NOT LIKE \"NDR Fernsehen\"\r\n      THEN target_group LIKE \"%BRD%\"\r\n    END\r\n    AND CASE \"${LRA:text}\"\r\n    WHEN \"MDR\" THEN True\r\n    ELSE  1 = CASE WHEN \"${special_region}\" LIKE \"\" THEN 1 ELSE 0 END\r\n    END\r\nORDER BY \r\n  CASE zg\r\n    WHEN \"BRD gesamt\" THEN 1\r\n    WHEN \"BRD West\" THEN 2\r\n    WHEN \"BRD Ost\" THEN 3\r\n    WHEN \"NDR Gebiet\" THEN 4\r\n    WHEN \"MDR Gebiet\" THEN 5\r\n    WHEN \"Niedersachsen\" THEN 6\r\n    WHEN \"Schleswig-Holstein\" THEN 7\r\n    WHEN \"Mecklenburg-Vorpommern\" THEN 8\r\n    WHEN \"Hamburg\" THEN 9\r\n    WHEN \"Bremen\" THEN 10\r\n    WHEN \"Sachsen\" THEN 11\r\n    WHEN \"Sachsen-Anhalt\" THEN 12\r\n    WHEN \"Thüringen\" THEN 13\r\n  END",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Übersicht Sendegebiete | ${LRA:text} | ${Sendung:text} | $BRD_or_NDR | $date_range_monthly",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 18,
          "y": 36
        },
        "id": 204,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "###### Zusammensetzung $SehbOderSeher nach Sendegebieten | ${LRA:text} | ${Sendung:text} | $BRD_or_NDR | $date_range_monthly",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 13,
          "w": 6,
          "x": 18,
          "y": 39
        },
        "id": 68,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "// Check if there is any data\nconst hasData = context.panel.data.series.length > 0 && context.panel.data.series[0].fields[0].values.length > 0;\n\n// If there's no data, return an empty object to hide the chart\nif (!hasData) {\n  return {};\n}\n\nconst categoryColors = {\n  \"Niedersachsen\": \"#f57c00\",\n  \"Schleswig-Holstein\": \"#6d6e71\",\n  \"Mecklenburg-Vorpommern\": \"#ECE076\",\n  \"Hamburg\": \"#4caf50\",\n  \"Bremen\": \"#1f4e79\",\n  \"Sachsen\": \"#f57c00\",\n  \"Sachsen-Anhalt\": \"#6d6e71\",\n  \"Thüringen\": \"#4caf50\",\n  \"BRD West\": \"#64B1DE\",\n  \"BRD Ost\": \"#ECE076\"\n};\n\nlet zielgruppeData = []; // Define zielgruppeData outside the loop\n\nconst series = context.panel.data.series.map((s) => {\n  const zielgruppeField = s.fields.find((f) => f.name === 'zg');\n  const sehbeteiligungField = s.fields.find((f) => f.name === 'sb');\n\n  // Convert data to arrays\n  zielgruppeData = zielgruppeField.values.toArray(); // Assign to the external variable\n  const sehbeteiligungData = sehbeteiligungField.values.toArray();\n\n  return {\n    name: \"Strukturanteile\",\n    type: 'pie',\n    showSymbol: false,\n    radius: '80%',\n    center: ['50%', '50%'],\n    data: sehbeteiligungData.map((d, i) => {\n      const targetGroup = zielgruppeData[i];\n      const itemStyle = { color: categoryColors[targetGroup] };\n\n      return {\n        value: d,\n        name: targetGroup,\n        itemStyle: itemStyle\n      };\n    }),\n    startAngle: 90,\n    clockwise: true,\n    label: {\n      show: true,\n      position: 'inner',\n      formatter: (params) => {\n        return `${Math.round(params.percent)}%`;\n      },\n      fontWeight: 'bold',\n      fontSize: 20\n    },\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'item',\n    formatter: '{b}',\n    borderWidth: 3,\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '0',\n    data: zielgruppeData, // Use zielgruppeData for the legend\n    textStyle: {\n      fontWeight: 'bold'\n    }\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none'\n      },\n      saveAsImage: {}\n    }\n  },\n  series,\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  target_group as zg,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN ROUND(viewers, 3)\r\n    ELSE ROUND(sehbeteiligung, 3)\r\n  END AS sb,\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\nWHERE\r\n  show LIKE \"${Sendung:text}\"\r\n  and year like \"$Jahr\"\r\n  AND\r\n    CASE WHEN \"${LRA:text}\" LIKE \"NDR\" OR \"${Sendung:text}\" LIKE \"NDR Fernsehen\"\r\n      THEN\r\n      target_group LIKE \"Niedersachsen\"\r\n      OR target_group LIKE \"Schleswig-Holstein\"\r\n      OR target_group LIKE \"Mecklenburg-Vorpommern\"\r\n      OR target_group LIKE \"Hamburg\"\r\n      OR target_group LIKE \"Bremen\"\r\n    WHEN \"${LRA:text}\" LIKE \"MDR\"\r\n      THEN\r\n      target_group LIKE \"Sachsen\"\r\n      OR target_group LIKE \"Thüringen\"\r\n      OR target_group LIKE \"Sachsen-Anhalt\"\r\n    WHEN \"${LRA:text}\" LIKE \"ARD\" OR \"${Sendung:text}\" NOT LIKE \"NDR Fernsehen\"\r\n      THEN target_group LIKE \"BRD %st\"\r\n    END\r\n  AND 1 = CASE WHEN \"${special_region}\" LIKE \"\" THEN 1 ELSE 0 END\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\nORDER BY \r\n  CASE zg\r\n    WHEN \"BRD West\" THEN 2\r\n    WHEN \"BRD Ost\" THEN 3\r\n    WHEN \"Niedersachsen\" THEN 6\r\n    WHEN \"Schleswig-Holstein\" THEN 7\r\n    WHEN \"Mecklenburg-Vorpommern\" THEN 8\r\n    WHEN \"Hamburg\" THEN 9\r\n    WHEN \"Bremen\" THEN 10\r\n    WHEN \"Sachsen\" THEN 11\r\n    WHEN \"Sachsen-Anhalt\" THEN 12\r\n    WHEN \"Thüringen\" THEN 13\r\n  END",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "sortBy",
            "options": {
              "fields": {},
              "sort": [
                {
                  "desc": true,
                  "field": "sehbeteiligung"
                }
              ]
            }
          }
        ],
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 16,
          "w": 17,
          "x": 0,
          "y": 52
        },
        "id": 70,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 1063
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "// Helper function for German number formatting\nfunction formatNumberGerman(value, decimals = 2) {\n  return new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  }).format(value);\n}\n\nconst specialCategories = [\n  'Kinder 3-13', 'Erw. 14-29', 'Erw. 30-39', 'Erw. 40-49',\n  'Erw. 50-59', 'Erw. 60-69', 'Erw. ab 70', 'Erw. 50-64', 'Erw. ab 65 ', 'Erw. 14-49', 'Erw. ab 50'\n];\n\n// Daten müssen vorher initialisiert werden, damit eine custom Reihenfolge benutzt werden kann\nconst gewuenschteReihenfolge = [\n  'Zuschauer gesamt', 'MDR-Gebiet Z3+', 'Kinder 3-13', 'Erw. 14-29', 'Erw. 30-39',\n  'Erw. 40-49', 'Erw. 50-59', 'Erw. 50-64', 'Erw. ab 65 ', 'Erw. 60-69',\n  'Erw. ab 70', 'Erw. 30-49', 'Erw. 14-49', 'Erw. ab 50', 'Erw. ab 14'\n];\n\n// Map der gewünschten Reihenfolge zur Überprüfung der Indizes\nconst orderMap = new Map(gewuenschteReihenfolge.map((item, index) => [item, index]));\n\n// Holen der initialen Daten\nconst zielgruppeField = context.panel.data.series[0].fields.find(f => f.name === 'zg');\nconst marktanteilField = context.panel.data.series[0].fields.find(f => f.name === 'ma');\nconst sehbeteiligungField = context.panel.data.series[0].fields.find(f => f.name === 'sb');\n\n// Prüfen, ob die Felder existieren, und die Werte in der gewünschten Reihenfolge anordnen\nlet zielgruppeValues = [];\nlet marktanteilValues = [];\nlet sehbeteiligungValues = [];\n\nif (zielgruppeField && marktanteilField && sehbeteiligungField) {\n  zielgruppeValues = zielgruppeField.values.map(value => value);\n  marktanteilValues = marktanteilField.values.map(value => value);\n  sehbeteiligungValues = sehbeteiligungField.values.map(value => value);\n\n  const combined = zielgruppeValues.map((zg, index) => ({\n    zg,\n    ma: marktanteilValues[index],\n    sb: sehbeteiligungValues[index]\n  }));\n\n  combined.sort((a, b) => {\n    const isSpecialA = specialCategories.includes(a.zg);\n    const isSpecialB = specialCategories.includes(b.zg);\n\n    // Non-special categories come first\n    if (isSpecialA && !isSpecialB) return 1;\n    if (!isSpecialA && isSpecialB) return -1;\n\n    // If both are the same type, follow gewuenschteReihenfolge\n    return orderMap.get(a.zg) - orderMap.get(b.zg);\n  });\n\n  zielgruppeValues = combined.map(item => item.zg);\n  marktanteilValues = combined.map(item => item.ma);\n  sehbeteiligungValues = combined.map(item => item.sb);\n}\n\n\nconst specialColor = '#49c1ff'; // Hellerer Blauton\n\nconst legendWordField = context.panel.data.series[0].fields.find(f => f.name === 'legendName');\nlet legendWord = legendWordField?.values.get(0) ?? \"Reichweite\";\n\n\n// Initialisieren der Series\nconst series = [\n  {\n    name: 'Marktanteil (%)',\n    type: 'bar',\n    label: {\n      show: true,\n      position: 'top',\n      fontWeight: 'bold',\n      fontSize: '18',\n      formatter: function (params) {\n        let formattedNumber = formatNumberGerman(params.value, 1);\n        return `${formattedNumber} %`;\n      }\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: function (value) {\n        let formattedNumber = formatNumberGerman(value, 1);\n        return `${formattedNumber} %`;\n      }\n    },\n    data: zielgruppeValues.map((zg, index) => {\n      const value = marktanteilValues[index];\n      const roundedValue = Math.round(value * 10) / 10;\n      const itemStyle = specialCategories.includes(zg) ? { color: specialColor } : null;\n\n      return { value: roundedValue, name: zg, itemStyle };\n    })\n  },\n  {\n    name: `${legendWord} (Mio.)`,\n    type: 'scatter',\n    symbol: 'circle',\n    symbolSize: 15,\n    label: {\n      show: true,\n      position: ['225%', 0],\n      fontWeight: 'bold',\n      fontSize: '18',\n      formatter: function (params) {\n        let formattedNumber = formatNumberGerman(params.value[1], 3);\n        return `${formattedNumber}`;\n      }\n    },\n    tooltip: {\n      valueFormatter: function (value) {\n        let formattedNumber = formatNumberGerman(value, 3);\n        return `${formattedNumber} Mio.`;\n      }\n    },\n    yAxisIndex: 1,\n    data: sehbeteiligungValues.map((value, index) => {\n      const roundedValue = Math.round(value * 1000) / 1000;\n      return [zielgruppeValues[index], roundedValue];\n    })\n  }\n];\n\n// Zurückgeben der Einstellungen der Grafik\nreturn {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: { type: 'none', crossStyle: { color: '#999' } }\n  },\n  toolbox: {\n    feature: {\n      dataView: { show: true, readOnly: false },\n      magicType: { show: true },\n      restore: { show: true },\n      saveAsImage: { show: true }\n    }\n  },\n  legend: {\n    icon: 'circle',\n    inactiveColor: '#767676',\n    borderColor: '#969696',\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 7,\n    itemGap: 30,\n    textStyle: { fontSize: 14, fontWeight: 'bold' },\n    symbolRotate: 90,\n    data: ['Marktanteil (%)', `${legendWord} (Mio.)`]\n  },\n  xAxis: [\n    {\n      type: 'category',\n      data: zielgruppeValues,\n      axisPointer: { type: 'shadow' },\n      boundaryGap: true,\n      axisTick: { alignWithLabel: true, interval: 0 },\n      axisLabel: { interval: 0, fontWeight: 'bold' }\n    }\n  ],\n  yAxis: [\n    {\n      type: 'value',\n      show: false,\n      min: 0,\n      interval: 10,\n      axisLabel: { formatter: '{value} %' }\n    },\n    {\n      type: 'value',\n      show: false,\n      min: 0,\n      max: 'auto',\n      interval: 0.5\n    }\n  ],\n  grid: [{ top: '13%' }],\n  series\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\r\nSELECT\r\ndistinct\r\n  target_group as zg,\r\n  market_share as ma,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN ROUND(viewers, 3)\r\n    ELSE ROUND(sehbeteiligung, 3)\r\n  END AS sb,\r\n  CASE\r\n    WHEN ${LRA:doublequote} = \"sender\" THEN \"Seher\"\r\n    ELSE \"Sehbeteiligung\"\r\n  END as legendName\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` as data\r\nWHERE\r\n  show LIKE \"${Sendung:text}\"\r\n  and year like \"$Jahr\"\r\n  AND target_group NOT LIKE \"Erw. ab 14 J.\"\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND (target_group LIKE \"%Erw.%\"\r\n  OR target_group LIKE \"Kinder%\"\r\n  OR target_group LIKE \"Zuschauer gesamt\"\r\n  OR target_group LIKE \"MDR-Gebiet Z3+\"\r\n   OR CASE \"${Sendung:text}\"\r\n  WHEN \"MDR Sachsen-Anhalt heute\" THEN target_group = \"Sachsen-Anhalt\"\r\n  WHEN \"MDR Sachsenspiegel\" THEN target_group = \"Sachsen\"\r\n  WHEN \"MDR Thüringen Journal\" THEN target_group = \"Thüringen\"\r\n  END\r\n  )\r\nORDER BY target_group ASC",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Übersicht Altersgruppen | ${LRA:text} | ${Sendung:text} | $BRD_or_NDR | $date_range_monthly",
        "transformations": [
          {
            "id": "organize",
            "options": {}
          }
        ],
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 18,
          "y": 52
        },
        "id": 205,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "###### Zusammensetzung $SehbOderSeher nach Altersgruppen | ${LRA:text} | ${Sendung:text} | $BRD_or_NDR | $date_range_monthly",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 13,
          "w": 7,
          "x": 17,
          "y": 55
        },
        "id": 188,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "let zielgruppeData = []; // Define zielgruppeData outside the loop\n\nconst series = context.panel.data.series.map((s) => {\n  const zielgruppeField = s.fields.find((f) => f.name === 'zg');\n  const sehbeteiligungField = s.fields.find((f) => f.name === 'sb');\n\n  // Convert data to arrays\n  zielgruppeData = zielgruppeField.values.toArray(); // Assign to the external variable\n  const sehbeteiligungData = sehbeteiligungField.values.toArray();\n\n  return {\n    name: \"Strukturanteile\",\n    type: 'pie',\n    showSymbol: false,\n    radius: '80%',\n    center: ['50%', '50%'],\n    data: sehbeteiligungData.map((d, i) => ({\n      value: d,\n      name: zielgruppeData[i],\n    })),\n    startAngle: 90,\n    clockwise: true,\n    label: {\n      show: true,\n      position: 'inner',\n      formatter: (params) => {\n        let perc = params.percent;\n        return perc > 1 ? `${Math.round(params.percent)}%` : '';\n      },\n      fontWeight: 'bold',\n      fontSize: 20,\n    },\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'item',\n    formatter: '{b}',\n    borderWidth: 3,\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '0',\n    data: zielgruppeData, // Use zielgruppeData for the legend\n    textStyle: {\n      fontWeight: 'bold'\n    }\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none'\n      },\n      saveAsImage: {}\n    }\n  },\n  series,\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  target_group as zg,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN viewers\r\n    ELSE sehbeteiligung\r\n  END AS sb,\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\nWHERE\r\n  show LIKE \"${Sendung:text}\"\r\n  and year like \"$Jahr\"\r\n  AND target_group NOT LIKE \"Erw. ab 50\"\r\n  AND target_group NOT LIKE \"Erw. ab 14%\"\r\n  AND target_group NOT LIKE \"Erw. 30-49\"\r\n  AND target_group NOT LIKE \"Erw. 14-49\"\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND (target_group LIKE \"%Erw.%\"\r\n  OR target_group LIKE \"Kinder 3-13\")\r\nORDER BY\r\n  CASE\r\n    WHEN target_group LIKE \"Kinder 3-13\" THEN 1\r\n    WHEN target_group LIKE \"Erw. 14-29\" THEN 2\r\n    WHEN target_group LIKE \"Erw. 30-39\" THEN 3\r\n    WHEN target_group LIKE \"Erw. 40-49\" THEN 4\r\n    WHEN target_group LIKE \"Erw. 50-64\" THEN 5\r\n    WHEN target_group LIKE \"Erw. 50-59\" THEN 6\r\n    WHEN target_group LIKE \"Erw. ab 65 \" THEN 7\r\n    WHEN target_group LIKE \"Erw. 60-69\" THEN 8\r\n    WHEN target_group LIKE \"Erw. ab 70\" THEN 9\r\n  END\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "sortBy",
            "options": {
              "fields": {},
              "sort": [
                {
                  "desc": true,
                  "field": "sehbeteiligung"
                }
              ]
            }
          }
        ],
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 17,
          "w": 12,
          "x": 0,
          "y": 68
        },
        "id": 235,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 1063
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "// Helper function for German number formatting\nfunction formatNumberGerman(value, decimals = 2) {\n  return new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  }).format(value);\n}\n\nconst specialCategories = [\n  'Kinder 3-13', 'Erw. 14-29', 'Erw. 30-39', 'Erw. 40-49',\n  'Erw. 50-59', 'Erw. 60-69', 'Erw. ab 70', 'Erw. 50-64', 'Erw. ab 65 ', 'Erw. 14-49', 'Erw. ab 50'\n];\n\n// Daten müssen vorher initialisiert werden, damit eine custom Reihenfolge benutzt werden kann\nconst gewuenschteReihenfolge = [\n  'Zuschauer gesamt', 'MDR-Gebiet Z3+', 'Kinder 3-13', 'Erw. 14-29', 'Erw. 30-39',\n  'Erw. 40-49', 'Erw. 50-59', 'Erw. 50-64', 'Erw. ab 65 ', 'Erw. 60-69',\n  'Erw. ab 70', 'Erw. 30-49', 'Erw. 14-49', 'Erw. ab 50', 'Erw. ab 14'\n];\n\n// Map der gewünschten Reihenfolge zur Überprüfung der Indizes\nconst orderMap = new Map(gewuenschteReihenfolge.map((item, index) => [item, index]));\n\n// Holen der initialen Daten\nconst zielgruppeField = context.panel.data.series[0].fields.find(f => f.name === 'zg');\nconst current_marktanteilField = context.panel.data.series[0].fields.find(f => f.name === 'current_ma');\nconst past_marktanteilField = context.panel.data.series[0].fields.find(f => f.name === 'past_ma');\n\n// Prüfen, ob die Felder existieren, und die Werte in der gewünschten Reihenfolge anordnen\nlet zielgruppeValues = [];\nlet marktanteilValues = [];\nlet past_marktanteilValues = [];\n\nif (\n  zielgruppeField &&\n  current_marktanteilField &&\n  past_marktanteilField\n) {\n  zielgruppeValues = zielgruppeField.values.map(value => value);\n  marktanteilValues = current_marktanteilField.values.map(value => value);\n  past_marktanteilValues = past_marktanteilField.values.map(value => value);\n\n  const combined = zielgruppeValues.map((zg, index) => ({\n    zg,\n    ma: marktanteilValues[index],\n    pastMa: past_marktanteilValues[index]\n  }));\n\n  combined.sort((a, b) => {\n    const isSpecialA = specialCategories.includes(a.zg);\n    const isSpecialB = specialCategories.includes(b.zg);\n\n    // Non-special categories come first\n    if (isSpecialA && !isSpecialB) return 1;\n    if (!isSpecialA && isSpecialB) return -1;\n\n    // If both are the same type, follow gewuenschteReihenfolge\n    return orderMap.get(a.zg) - orderMap.get(b.zg);\n  });\n\n  zielgruppeValues = combined.map(item => item.zg);\n  marktanteilValues = combined.map(item => item.ma);\n  past_marktanteilValues = combined.map(item => item.pastMa);\n}\n\nconst legendWordField = context.panel.data.series[0].fields.find(f => f.name === 'legendName');\nlet legendWord = legendWordField?.values.get(0) ?? \"Reichweite\";\n\n// Initialisieren der Series\nconst series = [\n  {\n    name: 'Aktuelles Jahr',\n    type: 'bar',\n    barGap: '50%',\n    label: {\n      show: true,\n      position: 'top',\n      fontWeight: 'bold',\n      fontSize: '18',\n      formatter: function (params) {\n        let formattedNumber = formatNumberGerman(params.value, 1);\n        return `${formattedNumber} %`;\n      }\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: function (value) {\n        let formattedNumber = formatNumberGerman(value, 1);\n        return `${formattedNumber} %`;\n      }\n    },\n    itemStyle: {\n      color: '#4993FE' // Set consistent color for all bars\n    },\n    data: zielgruppeValues.map((zg, index) => {\n      const value = marktanteilValues[index];\n      const roundedValue = Math.round(value * 10) / 10;\n\n      return { value: roundedValue, name: zg };\n    })\n  },\n  {\n    name: 'Vorjahr',\n    type: 'bar',\n    barGap: '50%',\n    label: {\n      show: true,\n      position: 'top',\n      fontWeight: 'bold',\n      fontSize: '18',\n      formatter: function (params) {\n        let formattedNumber = formatNumberGerman(params.value, 1);\n        return `${formattedNumber} %`;\n      }\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: function (value) {\n        let formattedNumber = formatNumberGerman(value, 1);\n        return `${formattedNumber} %`;\n      }\n    },\n    itemStyle: {\n      color: '#C5E3FF' // Set consistent color for all bars\n    },\n    data: zielgruppeValues.map((zg, index) => {\n      const value = past_marktanteilValues[index];\n      const roundedValue = Math.round(value * 10) / 10;\n\n      return { value: roundedValue, name: zg };\n    })\n  }\n];\n\n// Zurückgeben der Einstellungen der Grafik\nreturn {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: { type: 'none', crossStyle: { color: '#999' } }\n  },\n  toolbox: {\n    feature: {\n      dataView: { show: true, readOnly: false },\n      magicType: { show: true },\n      restore: { show: true },\n      saveAsImage: { show: true }\n    }\n  },\n  legend: {\n    icon: 'circle',\n    inactiveColor: '#767676',\n    borderColor: '#969696',\n    borderWidth: 1,\n    borderRadius: 1,\n    padding: 7,\n    itemGap: 30,\n    textStyle: { fontSize: 14, fontWeight: 'bold' },\n    symbolRotate: 90,\n    data: [\n      'Aktuelles Jahr',\n      'Vorjahr'\n    ]\n  },\n  xAxis: [\n    {\n      type: 'category',\n      data: zielgruppeValues,\n      axisPointer: { type: 'shadow' },\n      boundaryGap: false,\n      axisTick: { alignWithLabel: true, interval: 0 },\n      axisLabel: { interval: 0, fontWeight: 'bold', 'rotate': 35, fontSize: 10 },\n      autoRotate: true,\n    }\n  ],\n  yAxis: [\n    {\n      type: 'value',\n      show: false,\n      min: 0,\n      interval: 10,\n      axisLabel: { formatter: '{value} %' }\n    },\n    {\n      type: 'value',\n      show: false,\n      min: 0,\n      max: 'auto',\n      interval: 0.5\n    }\n  ],\n  grid: [{ top: '13%' }],\n  series\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH current_values AS(\r\nSELECT\r\ndistinct\r\n  target_group as zg,\r\n  market_share as current_ma,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN ROUND(viewers, 3)\r\n    ELSE ROUND(sehbeteiligung, 3)\r\n  END AS current_sb,\r\n  CASE\r\n    WHEN ${LRA:doublequote} = \"sender\" THEN \"Seher\"\r\n    ELSE \"Sehbeteiligung\"\r\n  END as legendName\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` as data\r\nWHERE\r\n  show LIKE \"${Sendung:text}\"\r\n  and year like \"$Jahr\"\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND target_group NOT LIKE \"Erw. ab 14 J.\"\r\n  AND (target_group LIKE \"%Erw.%\"\r\n  OR target_group LIKE \"Kinder%\"\r\n  OR target_group LIKE \"Zuschauer gesamt\"\r\n  OR target_group LIKE \"MDR-Gebiet Z3+\"\r\n   OR CASE \"${Sendung:text}\"\r\n  WHEN \"MDR Sachsen-Anhalt heute\" THEN target_group = \"Sachsen-Anhalt\"\r\n  WHEN \"MDR Sachsenspiegel\" THEN target_group = \"Sachsen\"\r\n  WHEN \"MDR Thüringen Journal\" THEN target_group = \"Thüringen\"\r\n  END\r\n  )\r\nORDER BY target_group ASC),\r\npast_values AS(\r\n  SELECT\r\ndistinct\r\n  target_group as zg,\r\n  market_share as past_ma,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN ROUND(viewers, 3)\r\n    ELSE ROUND(sehbeteiligung, 3)\r\n  END AS past_sb,\r\n  CASE\r\n    WHEN ${LRA:doublequote} = \"sender\" THEN \"Seher\"\r\n    ELSE \"Sehbeteiligung\"\r\n  END as legendName\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` as data\r\nWHERE\r\n  show LIKE \"${Sendung:text}\"\r\n  and year like \"$LastJahr\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND target_group NOT LIKE \"Erw. ab 14 J.\"\r\n  AND (target_group LIKE \"%Erw.%\"\r\n  OR target_group LIKE \"Kinder%\"\r\n  OR target_group LIKE \"Zuschauer gesamt\"\r\n  OR target_group LIKE \"MDR-Gebiet Z3+\"\r\n   OR CASE \"${Sendung:text}\"\r\n  WHEN \"MDR Sachsen-Anhalt heute\" THEN target_group = \"Sachsen-Anhalt\"\r\n  WHEN \"MDR Sachsenspiegel\" THEN target_group = \"Sachsen\"\r\n  WHEN \"MDR Thüringen Journal\" THEN target_group = \"Thüringen\"\r\n  END\r\n  )\r\nORDER BY target_group ASC\r\n)\r\nSELECT * FROM current_values\r\nJOIN past_values\r\nUSING(zg, legendName)\r\nORDER BY zg ASC",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Marktanteil (%) Aktuelles Jahr vs. Vorjahr | ${LRA:text} | $Sendung | $BRD_or_NDR | $date_range_monthly",
        "transformations": [
          {
            "id": "organize",
            "options": {}
          }
        ],
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 17,
          "w": 12,
          "x": 12,
          "y": 68
        },
        "id": 236,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 1063
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "// Helper function for German number formatting\nfunction formatNumberGerman(value, decimals = 2) {\n  return new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  }).format(value);\n}\n\nconst specialCategories = [\n  'Kinder 3-13', 'Erw. 14-29', 'Erw. 30-39', 'Erw. 40-49',\n  'Erw. 50-59', 'Erw. 60-69', 'Erw. ab 70', 'Erw. 50-64', 'Erw. ab 65 ', 'Erw. 14-49', 'Erw. ab 50'\n];\n\n// Daten müssen vorher initialisiert werden, damit eine custom Reihenfolge benutzt werden kann\nconst gewuenschteReihenfolge = [\n  'Zuschauer gesamt', 'MDR-Gebiet Z3+', 'Kinder 3-13', 'Erw. 14-29', 'Erw. 30-39',\n  'Erw. 40-49', 'Erw. 50-59', 'Erw. 50-64', 'Erw. ab 65 ', 'Erw. 60-69',\n  'Erw. ab 70', 'Erw. 30-49', 'Erw. 14-49', 'Erw. ab 50', 'Erw. ab 14'\n];\n\n// Map der gewünschten Reihenfolge zur Überprüfung der Indizes\nconst orderMap = new Map(gewuenschteReihenfolge.map((item, index) => [item, index]));\n\n// Holen der initialen Daten\nconst zielgruppeField = context.panel.data.series[0].fields.find(f => f.name === 'zg');\nconst current_sehbeteiligungField = context.panel.data.series[0].fields.find(f => f.name === 'current_sb');\nconst past_sehbeteiligungField = context.panel.data.series[0].fields.find(f => f.name === 'past_sb');\n\n// Prüfen, ob die Felder existieren, und die Werte in der gewünschten Reihenfolge anordnen\nlet zielgruppeValues = [];\nlet sehbeteiligungValues = [];\nlet past_sehbeteiligungValues = [];\n\nif (\n  zielgruppeField &&\n  current_sehbeteiligungField &&\n  past_sehbeteiligungField\n) {\n  zielgruppeValues = zielgruppeField.values.map(value => value);\n  sehbeteiligungValues = current_sehbeteiligungField.values.map(value => value);\n  past_sehbeteiligungValues = past_sehbeteiligungField.values.map(value => value);\n\n  const combined = zielgruppeValues.map((zg, index) => ({\n    zg,\n    sb: sehbeteiligungValues[index],\n    pastSb: past_sehbeteiligungValues[index]\n  }));\n\n  combined.sort((a, b) => {\n    const isSpecialA = specialCategories.includes(a.zg);\n    const isSpecialB = specialCategories.includes(b.zg);\n\n    // Non-special categories come first\n    if (isSpecialA && !isSpecialB) return 1;\n    if (!isSpecialA && isSpecialB) return -1;\n\n    // If both are the same type, follow gewuenschteReihenfolge\n    return orderMap.get(a.zg) - orderMap.get(b.zg);\n  });\n\n  zielgruppeValues = combined.map(item => item.zg);\n  sehbeteiligungValues = combined.map(item => item.sb);\n  past_sehbeteiligungValues = combined.map(item => item.pastSb);\n}\n\nconst legendWordField = context.panel.data.series[0].fields.find(f => f.name === 'legendName');\nlet legendWord = legendWordField?.values.get(0) ?? \"Reichweite\";\n\n// Initialisieren der Series\nconst series = [\n  {\n    name: `Aktuelles Jahr`,\n    type: 'bar',\n    barGap: '50%', // Adjusted to 50% for bar gap\n    label: {\n      show: true,\n      position: 'top',\n      fontWeight: 'bold',\n      fontSize: '18',\n      formatter: function (params) {\n        let formattedNumber = formatNumberGerman(params.value, 3);\n        return `${formattedNumber}`;\n      }\n    },\n    tooltip: {\n      valueFormatter: function (value) {\n        let formattedNumber = formatNumberGerman(value, 3);\n        return `${formattedNumber} Mio.`;\n      }\n    },\n    itemStyle: {\n      color: '#4993FE' // Color for \"current\" Sehbeteiligung bars\n    },\n    data: zielgruppeValues.map((zg, index) => {\n      const value = sehbeteiligungValues[index];\n      const roundedValue = Math.round(value * 1000) / 1000;\n      return { value: roundedValue, name: zg };\n    })\n  },\n  {\n    name: `Vorjahr`,\n    type: 'bar',\n    barGap: '50%', // Adjusted to 50% for bar gap\n    label: {\n      show: true,\n      position: 'top',\n      fontWeight: 'bold',\n      fontSize: '18',\n      formatter: function (params) {\n        let formattedNumber = formatNumberGerman(params.value, 3);\n        return `${formattedNumber}`;\n      }\n    },\n    tooltip: {\n      valueFormatter: function (value) {\n        let formattedNumber = formatNumberGerman(value, 3);\n        return `${formattedNumber} Mio.`;\n      }\n    },\n    itemStyle: {\n      color: '#C5E3FF' // Color for \"past\" Sehbeteiligung bars\n    },\n    data: zielgruppeValues.map((zg, index) => {\n      const value = past_sehbeteiligungValues[index];\n      const roundedValue = Math.round(value * 1000) / 1000;\n      return { value: roundedValue, name: zg };\n    })\n  }\n];\n\n// Zurückgeben der Einstellungen der Grafik\nreturn {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: { type: 'none', crossStyle: { color: '#999' } }\n  },\n  toolbox: {\n    feature: {\n      dataView: { show: true, readOnly: false },\n      magicType: { show: true },\n      restore: { show: true },\n      saveAsImage: { show: true }\n    }\n  },\n  legend: {\n    icon: 'circle',\n    inactiveColor: '#767676',\n    borderColor: '#969696',\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 7,\n    itemGap: 30,\n    textStyle: { fontSize: 14, fontWeight: 'bold' },\n    symbolRotate: 90,\n    data: [\n      `Aktuelles Jahr`,\n      `Vorjahr`\n    ]\n  },\n  xAxis: [\n    {\n      type: 'category',\n      data: zielgruppeValues,\n      axisPointer: { type: 'shadow' },\n      boundaryGap: false,\n      axisTick: { alignWithLabel: true, interval: 0 },\n      axisLabel: { interval: 0, fontWeight: 'bold', fontSize: 10, rotate: 35 }\n    }\n  ],\n  yAxis: [\n    {\n      type: 'value',\n      show: false,\n      min: 0,\n      interval: 0.5\n    }\n  ],\n  grid: [{ top: '13%' }],\n  series\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH current_values AS(\r\nSELECT\r\ndistinct\r\n  target_group as zg,\r\n  market_share as current_ma,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN ROUND(viewers, 3)\r\n    ELSE ROUND(sehbeteiligung, 3)\r\n  END AS current_sb,\r\n  CASE\r\n    WHEN ${LRA:doublequote} = \"sender\" THEN \"Seher\"\r\n    ELSE \"Sehbeteiligung\"\r\n  END as legendName\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` as data\r\nWHERE\r\n  show LIKE \"${Sendung:text}\"\r\n  and year like \"$Jahr\"\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND target_group NOT LIKE \"Erw. ab 14 J.\"\r\n  AND (target_group LIKE \"%Erw.%\"\r\n  OR target_group LIKE \"Kinder%\"\r\n  OR target_group LIKE \"Zuschauer gesamt\"\r\n  OR target_group LIKE \"MDR-Gebiet Z3+\"\r\n   OR CASE \"${Sendung:text}\"\r\n  WHEN \"MDR Sachsen-Anhalt heute\" THEN target_group = \"Sachsen-Anhalt\"\r\n  WHEN \"MDR Sachsenspiegel\" THEN target_group = \"Sachsen\"\r\n  WHEN \"MDR Thüringen Journal\" THEN target_group = \"Thüringen\"\r\n  END\r\n  )\r\nORDER BY target_group ASC),\r\npast_values AS(\r\n  SELECT\r\ndistinct\r\n  target_group as zg,\r\n  market_share as past_ma,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN ROUND(viewers, 3)\r\n    ELSE ROUND(sehbeteiligung, 3)\r\n  END AS past_sb,\r\n  CASE\r\n    WHEN ${LRA:doublequote} = \"sender\" THEN \"Seher\"\r\n    ELSE \"Sehbeteiligung\"\r\n  END as legendName\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` as data\r\nWHERE\r\n  show LIKE \"${Sendung:text}\"\r\n  and year like \"$LastJahr\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND target_group NOT LIKE \"Erw. ab 14 J.\"\r\n  AND (target_group LIKE \"%Erw.%\"\r\n  OR target_group LIKE \"Kinder%\"\r\n  OR target_group LIKE \"Zuschauer gesamt\"\r\n  OR target_group LIKE \"MDR-Gebiet Z3+\"\r\n   OR CASE \"${Sendung:text}\"\r\n  WHEN \"MDR Sachsen-Anhalt heute\" THEN target_group = \"Sachsen-Anhalt\"\r\n  WHEN \"MDR Sachsenspiegel\" THEN target_group = \"Sachsen\"\r\n  WHEN \"MDR Thüringen Journal\" THEN target_group = \"Thüringen\"\r\n  END\r\n  )\r\nORDER BY target_group ASC\r\n)\r\nSELECT * FROM current_values\r\nJOIN past_values\r\nUSING(zg, legendName)\r\nORDER BY zg ASC",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "$SehbOderSeher (Mio.) Aktuelles Jahr vs. Vorjahr | ${LRA:text}  | $Sendung | $BRD_or_NDR | $date_range_monthly",
        "transformations": [
          {
            "id": "organize",
            "options": {}
          }
        ],
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 85
        },
        "id": 186,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 12,
          "x": 0,
          "y": 86
        },
        "id": 207,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "###### Zusammensetzung $SehbOderSeher nach Geschlecht | ${LRA:text} | ${Sendung:text} | $BRD_or_NDR | $date_range_monthly",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 12,
          "x": 12,
          "y": 86
        },
        "id": 208,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "###### Zusammensetzung $SehbOderSeher nach Bildung | ${LRA:text} | ${Sendung:text} | $BRD_or_NDR | $date_range_monthly",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 16,
          "w": 12,
          "x": 0,
          "y": 88
        },
        "id": 181,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const categoryColors = {\n  \"Frauen 14-49 J.\": \"#FFCC00\",\n  \"Frauen ab 50 J.\": \"#FF9900\",\n  \"Männer 14-49 J.\": \"#3366FF\",\n  \"Männer ab 50 J.\": \"#0000c9\",\n};\n\nlet zielgruppeData = []; // Define zielgruppeData outside the loop\n\nconst series = context.panel.data.series.map((s) => {\n  const zielgruppeField = s.fields.find((f) => f.name === 'zg');\n  const sehbeteiligungField = s.fields.find((f) => f.name === 'sb');\n\n  // Convert data to arrays\n  zielgruppeData = zielgruppeField.values.toArray(); // Assign to the external variable\n  const sehbeteiligungData = sehbeteiligungField.values.toArray();\n\n  return {\n    name: \"Strukturanteile\",\n    type: 'pie',\n    showSymbol: false,\n    radius: '75%',\n    center: ['50%', '50%'],\n    data: sehbeteiligungData.map((d, i) => ({\n      value: d,\n      name: zielgruppeData[i],\n      itemStyle: { color: categoryColors[zielgruppeData[i]] || '#000' },\n    })),\n    startAngle: 90,\n    clockwise: true,\n    label: {\n      show: true,\n      position: 'inner',\n      formatter: (params) => {\n        return `${Math.round(params.percent)}%`;\n      },\n      fontWeight: 'bold',\n      fontSize: 20\n    },\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'item',\n    formatter: '{b}',\n    borderWidth: 3,\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '0',\n    data: zielgruppeData, // Use zielgruppeData for the legend\n    textStyle: {\n      fontWeight: 'bold'\n    }\n  },\n  toolbox: {\n    feature: {\n      saveAsImage: {}\n    }\n  },\n  series,\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  target_group as zg,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN ROUND(viewers, 3)\r\n    ELSE ROUND(sehbeteiligung, 3)\r\n  END AS sb,\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\nWHERE\r\n  show LIKE \"${Sendung:text}\"\r\n  and year like \"$Jahr\"\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND (target_group LIKE \"Frauen 14-49 J.\"\r\n  OR target_group LIKE \"Frauen ab 50 J.\"\r\n  OR target_group LIKE \"Männer 14-49 J.\"\r\n  OR target_group LIKE \"Männer ab 50 J.\")\r\n  --AND target_group LIKE \"%Kinder 3-13\"\r\nORDER BY target_group asc",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "sortBy",
            "options": {
              "fields": {},
              "sort": [
                {
                  "desc": true,
                  "field": "sehbeteiligung"
                }
              ]
            }
          }
        ],
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 16,
          "w": 12,
          "x": 12,
          "y": 88
        },
        "id": 182,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const categoryColors = {\n  \"Volksschule ohne Lehre\": \"#D5E564\",\n  \"Volksschule mit Lehre\": \"#AFC220\",\n  \"Volks- und Hauptsch.\": \"#AFC220\",\n  \"Volksschule\": \"#AFC220\",\n  \"Weiterf. Schule\": \"#E05AE0\",\n  \"Abitur, Hochschule, Studium\": \"#1197FF\",\n};\n\nlet zielgruppeData = []; // Define zielgruppeData outside the loop\n\nconst series = context.panel.data.series.map((s) => {\n  const zielgruppeField = s.fields.find((f) => f.name === 'zg');\n  const sehbeteiligungField = s.fields.find((f) => f.name === 'sb');\n\n  // Convert data to arrays\n  zielgruppeData = zielgruppeField.values.toArray(); // Assign to the external variable\n  const sehbeteiligungData = sehbeteiligungField.values.toArray();\n\n  return {\n    name: \"Strukturanteile\",\n    type: 'pie',\n    showSymbol: false,\n    radius: '75%',\n    center: ['50%', '50%'],\n    data: sehbeteiligungData.map((d, i) => ({\n      value: d,\n      name: zielgruppeData[i],\n      itemStyle: { color: categoryColors[zielgruppeData[i]] || '#000' },\n    })),\n    startAngle: 90,\n    clockwise: true,\n    label: {\n      show: true,\n      position: 'inner',\n      formatter: (params) => {\n        return `${Math.round(params.percent)}%`;\n      },\n      fontWeight: 'bold',\n      fontSize: 20\n    },\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'item',\n    formatter: '{b}',\n    borderWidth: 3,\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '1',\n    data: zielgruppeData, // Use zielgruppeData for the legend\n    textStyle: {\n      fontWeight: 'bold'\n    }\n  },\n  toolbox: {\n    feature: {\n      saveAsImage: {}\n    }\n  },\n  series,\n  grid: {\n\n  }\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  target_group as zg,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN ROUND(viewers, 3)\r\n    ELSE ROUND(sehbeteiligung, 3)\r\n  END AS sb,\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\nWHERE\r\n  show LIKE \"${Sendung:text}\"\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  and year like \"$Jahr\"\r\n  AND (target_group LIKE \"Volks%\"\r\n  OR target_group LIKE \"Weiterf. Schule\"\r\n  OR target_group LIKE \"Abitur, Hochschule, Studium\")\r\nORDER BY \r\n  CASE target_group\r\n    WHEN \"Volks%\" THEN 1\r\n    WHEN \"Weiterf. Schule\" THEN 2\r\n    WHEN \"Abitur, Hochschule, Studium\" THEN 3\r\n  END",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 104
        },
        "id": 151,
        "panels": [],
        "title": "Digital Media Types",
        "type": "row"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 13,
          "x": 0,
          "y": 105
        },
        "id": 177,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "## <span style=\"color:#BC4542\"><b>Hinweis</b></span>\n\n### Die Darstellung der DMTs wird erst angezeigt, wenn 10 oder mehr $sendung_or_sendetag verfügbar sind. Für ${Sendung:text} sind gerade ${numShows} $sendung_or_sendetag verfügbar.",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 11,
          "x": 13,
          "y": 105
        },
        "id": 201,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 11,
          "x": 13,
          "y": 106
        },
        "id": 200,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "### ${special_region_dmt}",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 11,
          "w": 24,
          "x": 0,
          "y": 109
        },
        "id": 153,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const legendWordField = context.panel.data.series[0].fields.find(f => f.name === 'legendName');\nlet legendWord = legendWordField.values.get(0);\nif (legendWord == null) {\n  legendWord = \"Reichweite\";\n}\n\nconst categoryColors = {\n  'Vereinfachende': '#605185',\n  'Ablenkungssuchende': '#318393',\n  'Ambitionierte': '#BC4542',\n  'Neokulturelle': '#E58901',\n  'Selbstgenügsame': '#005482',\n  'Sicherheitsorientierte': '#2E7A47',\n  'Traditionsbewusste': '#5D5621',\n  'Verantwortungsvolle': '#F2B800',\n  'Gleichmütige': '#6B4C3B'\n};\n\nconst sMilieus = context.panel.data.series[0].fields.find((f) => f.name === 'zg').values;\nconst sSehbeteiligung = context.panel.data.series[0].fields.find((f) => f.name === 'sb').values;\nconst sMarktanteil = context.panel.data.series[0].fields.find((f) => f.name === 'ma').values;\nconst maErw14 = context.panel.data.series[0].fields.find((f) => f.name === 'ma_erw_14').values.get(0);\n\n// Helper function for German number formatting\nfunction germanNumberFormat(number, decimalPlaces = 1) {\n  return number.toFixed(decimalPlaces).replace('.', ',');\n}\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'none',\n      crossStyle: { color: '#999' }\n    }\n  },\n  legend: {\n    itemStyle: { color: '#ffffff' },\n    icon: 'none',\n    inactiveColor: '#767676',\n    borderColor: '#969696',\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 7,\n    itemGap: 0,\n    textStyle: { fontSize: 14, fontWeight: 'bold' },\n    selectedMode: 'single',\n    symbolRotate: 90\n  },\n  toolbox: {\n    show: true,\n    feature: {\n      restore: { show: true },\n      saveAsImage: { show: true }\n    }\n  },\n  calculable: true,\n  xAxis: [\n    {\n      type: 'category',\n      data: sMilieus,\n      label: { show: true },\n      axisLabel: {\n        show: true,\n        interval: 0,\n        margin: 15,\n        fontWeight: 'bold',\n        fontSize: 13\n      }\n    }\n  ],\n  yAxis: [{ type: 'value' }],\n  grid: {\n    left: '5%',\n    right: '9%',\n    top: '17%',\n    bottom: '2%',\n    containLabel: true\n  },\n  series: [\n    {\n      name: 'Marktanteil (%)',\n      colorBy: 'series',\n      type: 'bar',\n      label: {\n        show: true,\n        fontSize: 18,\n        fontWeight: 'bold',\n        position: 'top',\n        formatter: function (params) {\n          let number = germanNumberFormat(params.value, 1);\n          return `${number}%`;\n        }\n      },\n      tooltip: {\n        trigger: 'item',\n        valueFormatter: function (value) {\n          let number = germanNumberFormat(value, 1);\n          return `${number}%`;\n        }\n      },\n      data: sMarktanteil.map((m, index) => ({\n        value: sMarktanteil[index],\n        itemStyle: {\n          color: categoryColors[sMilieus[index]] || '#000',\n          opacity: 0.9\n        }\n      })),\n      ...(maErw14 ? {\n        markLine: {\n          lineStyle: { type: 'dashed', color: '#206fc9' },\n          label: {\n            formatter: function () {\n              return `${germanNumberFormat(maErw14, 1)}% (Erw. ab 14 J.)`;\n            }\n          },\n          data: [{ yAxis: maErw14 }]\n        }\n      } : {})\n    },\n    {\n      name: `${legendWord} (Mio.)`,\n      colorBy: 'series',\n      type: 'bar',\n      label: {\n        show: true,\n        position: 'top',\n        fontSize: 18,\n        fontWeight: 'bold',\n        formatter: function (params) {\n          let number = germanNumberFormat(params.value, 3);\n          return number;\n        }\n      },\n      tooltip: {\n        trigger: 'item',\n        valueFormatter: function (value) {\n          let number = germanNumberFormat(value, 3);\n          return `${number} Mio.`;\n        }\n      },\n      data: sSehbeteiligung.map((m, index) => ({\n        value: sSehbeteiligung[index],\n        itemStyle: {\n          color: categoryColors[sMilieus[index]] || '#000',\n          opacity: 0.9\n        }\n      }))\n    }\n  ]\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT DISTINCT\r\n  target_group as zg, \r\n  market_share as ma,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN ROUND(viewers, 3)\r\n    ELSE ROUND(sehbeteiligung, 3)\r\n  END AS sb,\r\n  CASE\r\n    WHEN ${LRA:doublequote} = \"sender\" THEN \"Seher\"\r\n    ELSE \"Sehbeteiligung\"\r\n  END as legendName,\r\n  (SELECT market_share FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}` \r\n  \r\n   WHERE target_group = \"Erw. ab 14 J.\" AND show = \"${Sendung:text}\" AND year = \"$Jahr\" AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND)  AS ma_erw_14\r\nFROM \r\n  `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\nWHERE \r\n\r\n  target_group IN (\r\n    \"Vereinfachende\",\r\n    \"Ablenkungssuchende\",\r\n    \"Ambitionierte\",\r\n    \"Neokulturelle\",\r\n    \"Selbstgenügsame\",\r\n    \"Sicherheitsorientierte\", \r\n    \"Traditionsbewusste\",\r\n    \"Verantwortungsvolle\", \r\n    \"Gleichmütige\"\r\n  )\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  AND 1 = CASE WHEN $numShows > 9 THEN 1 ELSE 0 END\r\n  AND 2 = CASE \r\n            WHEN \"$special_region\" LIKE \"\" THEN 2\r\n            WHEN \"$special_region\" IN (\"Sachsen\", \"Sachsen-Anhalt\", \"Thüringen\") THEN 2\r\n            ELSE 0 \r\n          END\r\n  AND show = \"${Sendung:text}\"\r\n  and year like \"$Jahr\"\r\nORDER BY $dmtOrder",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Digital Media Types | ${LRA:text} | $Sendung | $BRD_or_NDR | $date_range_monthly",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 120
        },
        "id": 166,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 24,
          "x": 0,
          "y": 121
        },
        "id": 155,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const sendungsNameField = context.panel.data.series[0].fields.find(f => f.name === 'sendungsName');\nconst sendungsName = sendungsNameField.values.get(0); // Assume the legend name is the same for all rows\n\nconst numberShowsField = context.panel.data.series[0].fields.find(f => f.name === 'numberShows');\nconst numberShows = numberShowsField.values.get(0); // Assume the legend name is the same for all rows\n//console.log(\"numberShows:\" + numberShows)\n\nconst categoryColors = {\n  'Vereinfachende': '#605185',\n  'Ablenkungssuchende': '#318393',\n  'Ambitionierte': '#BC4542',\n  'Neokulturelle': '#E58901',\n  \"Selbstgenügsame\": '#005482',\n  \"Sicherheitsorientierte\": '#2E7A47',\n  \"Traditionsbewusste\": '#5D5621',\n  \"Verantwortungsvolle\": '#F2B800',\n  \"Gleichmütige\": '#6B4C3B'\n};\n\nconst sMilieus = context.panel.data.series[0].fields.find((f) => f.name === 'Zielgruppe').values;\nconst sReichweite = context.panel.data.series[0].fields.find((f) => f.name === 'Reichweite').values;\nconst sSender = context.panel.data.series[0].fields.find((f) => f.name === 'Sender').values;\n\nconst sMap = [{\n  data: sMilieus.map((m, i) => ({ value: sReichweite[i], name: sMilieus[i] }))\n}];\n\nconst sumValues = sReichweite.reduce((partialSum, a) => partialSum + a, 0);\n\n// Definierung Y Achse je nachdem ob gerade Senderreports angezeigt werden oder nicht\nlet yAxisName = `${sendungsName}`;\nlet yAxisShow = true;\nif (numberShows == null) {\n  yAxisName = '';\n  yAxisShow = false;\n};\n\nlet series = [];\nsMilieus.forEach((milieu) => {\n  let index = sMilieus.indexOf(milieu);\n  series.push({\n    name: sMilieus[index],\n    type: 'bar',\n    stack: 'total',\n    emphasis: {\n      //focus: 'series'\n    },\n\n    label: {\n      show: true,\n      fontSize: 18,\n      fontWeight: 'bold',\n      formatter: function (params) {\n        let labelContent = '';\n        let temp = params.value.toFixed(0);\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(temp);\n        labelContent = formattedNumber + \"%\";\n        return labelContent;\n      },\n    },\n    data: [sReichweite[index]],\n    itemStyle: {\n      color: categoryColors[sMilieus[index]] || '#000',\n    },\n  });\n});\n\nreturn {\n  legend: {\n    top: '5%',\n    left: 'center',\n    selectedMode: false,\n    textStyle: {\n      fontSize: 14,\n    },\n  },\n\n  tooltip: {\n    trigger: 'item',\n    padding: 2,\n    borderWidth: 3,\n    show: true,\n    borderWidth: 3,\n    position: function (point, pos, dom, rect, size) {\n      return [point[0] - 60, point[1] - 45];\n    },\n    formatter: function (params) {\n      let tooltipContent = '';\n      let number = params.value.toFixed(0);\n      let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n      tooltipContent += params.seriesName + '<br/>' + params.marker + params.name + \": \" + '<span style=\"font-weight: bold;\">' + formattedNumber + '%' + '</span>';\n      return tooltipContent;\n    },\n  },\n\n  yAxis: [{\n    type: 'category',\n    data: [yAxisName],\n    show: yAxisShow,\n    axisLabel: {\n      fontSize: 14,\n      fontWeight: 'bold'\n    }\n  }],\n  xAxis: [{\n    type: 'value',\n    max: sumValues,\n    show: false,\n    axisLabel: {\n      show: false,\n    }\n  }],\n  series,\n  grid: {\n    left: 250,\n    right: '1%',\n    top: '45%',\n    bottom: 0,\n    containLabel: false,\n  },\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": " SELECT\r\n   target_group as Zielgruppe,\r\n   ROUND((sehbeteiligung / $SehbGesamt * 100)) as Reichweite,\r\n   \"$LRA\" as Sender,\r\n   \"${Sendung:text}\" as sendungsName,\r\n   \"${numShows}\" as numberShows\r\n FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\n WHERE target_group IN (\r\n    \"Vereinfachende\",\r\n    \"Ablenkungssuchende\",\r\n    \"Ambitionierte\",\r\n    \"Neokulturelle\",\r\n    \"Selbstgenügsame\",\r\n    \"Sicherheitsorientierte\", \r\n    \"Traditionsbewusste\",\r\n    \"Verantwortungsvolle\", \r\n    \"Gleichmütige\"\r\n  )\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n   AND 1 = CASE WHEN $numShows > 9 THEN 1 ELSE 0 END\r\n    AND 2 = CASE \r\n              WHEN \"$special_region\" LIKE \"\" THEN 2\r\n              WHEN \"$special_region\" IN (\"Sachsen\", \"Sachsen-Anhalt\", \"Thüringen\") THEN 2\r\n              ELSE 0 \r\n            END\r\n   AND show like \"${Sendung:text}\"\r\n  and year like \"$Jahr\"\r\n\r\nORDER BY $dmtOrder",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Strukturanteile Digital Media Types | ${LRA:text} | $Sendung | $BRD_or_NDR | $date_range_monthly",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 125
        },
        "id": 161,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const numberShowsField = context.panel.data.series[0].fields.find(f => f.name === 'numberShows');\nconst numberShows = numberShowsField.values.get(0); // Assume the legend name is the same for all rows\n\nconst legendWordField = context.panel.data.series[0].fields.find(f => f.name === 'legendName');\nlet legendWord = legendWordField.values.get(0);\n\nconst categoryColors = {\n  'Vereinfachende': '#605185',\n  'Ablenkungssuchende': '#318393',\n  'Ambitionierte': '#BC4542',\n  'Neokulturelle': '#E58901',\n  \"Selbstgenügsame\": '#005482',\n  \"Sicherheitsorientierte\": '#2E7A47',\n  \"Traditionsbewusste\": '#5D5621',\n  \"Verantwortungsvolle\": '#F2B800',\n  \"Gleichmütige\": '#6B4C3B'\n};\n\nconst sMilieus = context.panel.data.series[0].fields.find((f) => f.name === 'Zielgruppe').values;\nconst sTVGesamt = context.panel.data.series[0].fields.find((f) => f.name === 'Reichweite').values;\n\nconst sMap = [{\n  data: sMilieus.map((m, i) => ({ value: sTVGesamt[i], name: sMilieus[i] }))\n}];\n\nconst sumValues = sTVGesamt.reduce((partialSum, a) => partialSum + a, 0);\n\nlet yAxisShow = true;\nif (numberShows == null) {\n  yAxisShow = false;\n};\n\nlet series = [];\nsMilieus.forEach((milieu) => {\n  let index = sMilieus.indexOf(milieu);\n  series.push({\n    name: sMilieus[index],\n    type: 'bar',\n    stack: 'total',\n    emphasis: {\n      //focus: 'series'\n    },\n    label: {\n      show: true,\n      fontSize: 18,\n      fontWeight: 'bold',\n      formatter: function (params) {\n        let labelContent = '';\n        //let number = params.value.toFixed(2);\n        let temp = params.value.toFixed(0);\n        //let percentage = ((number / sumValues) * 100).toFixed(1);\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(temp);\n        labelContent = formattedNumber + \"%\";\n        return labelContent\n      },\n    },\n    data: [sTVGesamt[index]],\n    itemStyle: {\n      color: categoryColors[sMilieus[index]] || '#000',\n    }\n  });\n});\n\n\nreturn {\n\n  yAxis: [{\n    type: 'category',\n    width: 1,\n    show: yAxisShow,\n    data: [`${legendWord}`],\n    axisLabel: {\n      overflow: 'break',\n      fontSize: 14,\n      fontWeight: 'bold',\n\n    }\n  }],\n  xAxis: [{\n    type: 'value',\n    max: sumValues,\n    show: false,\n    axisLabel: {\n      show: false,\n    }\n  }],\n  series,\n  grid: {\n    left: 250,\n    right: '1%',\n    top: 0,\n    bottom: 0,\n    containLabel: false,\n  },\n\n  tooltip: {\n    trigger: 'item',\n    padding: 2,\n    show: true,\n    borderWidth: 3,\n    position: function (point, pos, dom, rect, size) {\n      return [point[0] - 60, point[1] - 45]\n    },\n    formatter: function (params) {\n      let tooltipContent = '';\n      let number = params.value.toFixed(0);\n      let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n      tooltipContent += params.seriesName + '<br/>' + params.marker + params.name + \": \" + '<span style=\"font-weight: bold;\">' + formattedNumber + '%' + '</span>' + '<br/>';\n      return tooltipContent;\n    },\n  },\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": " SELECT\r\n target_group as Zielgruppe,\r\n ROUND((viewers / $SeherGesamt * 100)) as Reichweite,\r\n \"${numShows}\" as numberShows,\r\n CASE\r\n    WHEN ${LRA:doublequote} = \"sender\" THEN \"Fernsehmarkt\\n03-03 Uhr\"\r\n    ELSE \"Fernsehmarkt zur Sendezeit\"\r\n  END as legendName,\r\n FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\n WHERE target_group IN (\r\n    \"Vereinfachende\",\r\n    \"Ablenkungssuchende\",\r\n    \"Ambitionierte\",\r\n    \"Neokulturelle\",\r\n    \"Selbstgenügsame\",\r\n    \"Sicherheitsorientierte\", \r\n    \"Traditionsbewusste\",\r\n    \"Verantwortungsvolle\", \r\n    \"Gleichmütige\"\r\n  )\r\n  AND 1 = CASE WHEN $numShows > 9 THEN 1 ELSE 0 END\r\n  AND 2 = CASE WHEN \"$special_region\" LIKE \"\" THEN 2 ELSE 0 END\r\n  AND show LIKE \"${Sendung:text}\"\r\n  and year like \"$Jahr\"\r\n   AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n\r\n  ORDER BY $dmtOrder",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 127
        },
        "id": 163,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "// Zuordnung Miliues zu Farben\nconst categoryColors = {\n  \"Vereinfachende\": \"#605185\",\n  \"Ablenkungssuchende\": \"#318393\",\n  \"Ambitionierte\": \"#BC4542\",\n  \"Neokulturelle\": \"#E58901\",\n  \"Selbstgenügsame\": \"#005482\",\n  \"Sicherheitsorientierte\": \"#2E7A47\",\n  \"Traditionsbewusste\": \"#5D5621\",\n  \"Verantwortungsvolle\": \"#F2B800\",\n  \"Gleichmütige\": \"#6B4C3B\"\n};\n\n// Aus Query bereitgestellte Daten als Arrays\nconst sMilieus = context.panel.data.series[0].fields.find((f) => f.name === \"Zielgruppe\").values;\nconst sSehbeteiligung = context.panel.data.series[0].fields.find((f) => f.name === \"Sehbeteiligung\").values;\nconst sSender = context.panel.data.series[0].fields.find((f) => f.name === \"Sender\").values;\nconst hidePanel = context.panel.data.series[0].fields.find((f) => f.name === \"hidePanel\").values.get(0);\n\nif (hidePanel === 1) {\n  return {}; // Return an empty object to hide the panel\n}\n\nconst sMap = [{\n  data: sMilieus.map((m, i) => ({ value: sSehbeteiligung[i], name: sMilieus[i] }))\n}];\n\nconst sumValues = sSehbeteiligung.reduce((partialSum, a) => partialSum + a, 0);\n\n// Definierung Y Achse je nachdem ob gerade Senderreports angezeigt werden oder nicht\nlet yAxisName = \"NDR FS 03-03 Uhr\";\nif (sSender[0] === \"mdr\") {\n  yAxisName = \"MDR FS 03-03 Uhr\"\n}\nelse if (sSender[0] === \"ard\") {\n  yAxisName = \"ARD FS 03-03 Uhr\"\n}\nlet yAxisShow = true;\n\nif (sSender[0] !== \"sender\") {\n  const numberShowsField = context.panel.data.series[0].fields.find(f => f.name === \"numberShows\");\n  const numberShows = numberShowsField.values.get(0);\n  if (numberShows == null) {\n    yAxisName = \"\";\n    yAxisShow = false;\n  }\n} else {\n  yAxisName = \"\";\n  yAxisShow = false;\n}\n\nlet series = [];\nsMilieus.forEach((milieu) => {\n  let index = sMilieus.indexOf(milieu);\n  series.push({\n    name: sMilieus[index],\n    type: \"bar\",\n    stack: \"total\",\n    label: {\n      show: true,\n      fontSize: 18,\n      fontWeight: \"bold\",\n      formatter: function (params) {\n        let number = ((params.value / sumValues) * 100).toFixed(0);\n        return new Intl.NumberFormat(\"de-DE\").format(number) + \"%\";\n      },\n    },\n    data: [sSehbeteiligung[index]],\n    itemStyle: {\n      color: categoryColors[sMilieus[index]] || \"#000\",\n    }\n  });\n});\n\nreturn {\n  yAxis: [{\n    type: \"category\",\n    data: [yAxisName],\n    show: yAxisShow,\n    axisLabel: {\n      fontSize: 14,\n      fontWeight: \"bold\"\n    }\n  }],\n  xAxis: [{\n    type: \"value\",\n    max: sumValues,\n    axisLabel: {\n      show: false,\n    }\n  }],\n  series,\n  grid: {\n    left: 250,\n    right: \"1%\",\n    top: 0,\n    bottom: 0,\n    containLabel: false,\n  },\n  tooltip: {\n    trigger: \"item\",\n    padding: 2,\n    show: true,\n    borderWidth: 3,\n    position: function (point, pos, dom, rect, size) {\n      return [point[0] - 60, point[1] - 45];\n    },\n    formatter: function (params) {\n      let number = ((params.value / sumValues) * 100).toFixed(0);\n      return params.seriesName + \"<br/>\" + params.marker + params.name + \": \" + '<span style=\"font-weight: bold;\">' + new Intl.NumberFormat(\"de-DE\").format(number) + \"%\" + \"</span><br/>\";\n    },\n  },\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN \"-\"\r\n    ELSE target_group\r\n  END AS Zielgruppe,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN NULL\r\n    ELSE ROUND((sehbeteiligung / $SendetagGesamt * 100))\r\n  END AS Sehbeteiligung,\r\n  \"$LRA\" AS Sender,\r\n  \"${numShows}\" AS numberShows,\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"Sender\" THEN 1\r\n    ELSE 0\r\n  END AS hidePanel, \r\n  $dmtOrder AS rank\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts_monthly}`\r\nWHERE target_group IN (\r\n  \"Vereinfachende\",\r\n  \"Ablenkungssuchende\",\r\n  \"Ambitionierte\",\r\n  \"Neokulturelle\",\r\n  \"Selbstgenügsame\",\r\n  \"Sicherheitsorientierte\", \r\n  \"Traditionsbewusste\",\r\n  \"Verantwortungsvolle\", \r\n  \"Gleichmütige\"\r\n)\r\nAND \"${LRA:text}\" != \"Sender\" \r\nAND show LIKE \"${LRA:text}%\"\r\nAND lra LIKE \"SENDER\"\r\nAND $numShows > 9\r\nand year like \"$Jahr\"\r\nAND 2 = CASE WHEN \"$special_region\" LIKE \"\" THEN 2 ELSE 0 END\r\nAND CASE \"${LRA:text}\"\r\nWHEN \"ARD\"\r\nTHEN show = \"ARD Das Erste\"\r\nELSE TRUE \r\nEND\r\n AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 24,
          "x": 0,
          "y": 129
        },
        "id": 211,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "## <span style=\"color:#BC4542\"><b>Hinweis</b></span>\n\n### $dmt_kennziffern_hinweis Mögliche Differenzen zu 100% entstehen durch unterjährige Fluktuationen im Panel.",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": true,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 132
        },
        "id": 168,
        "panels": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "custom": {
                  "align": "auto",
                  "cellOptions": {
                    "type": "auto"
                  },
                  "filterable": true,
                  "inspect": false
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                }
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Nummer"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 100
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Datum"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 123
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Folgentitel"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 599
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Marktanteil"
                  },
                  "properties": [
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "type": "auto"
                      }
                    },
                    {
                      "id": "min",
                      "value": 0
                    },
                    {
                      "id": "max",
                      "value": 100
                    },
                    {
                      "id": "decimals",
                      "value": 1
                    },
                    {
                      "id": "displayName",
                      "value": "Marktanteil (%)"
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "f0_"
                  },
                  "properties": [
                    {
                      "id": "decimals",
                      "value": 3
                    },
                    {
                      "id": "displayName",
                      "value": "Seher (Mio.)"
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Seher"
                  },
                  "properties": [
                    {
                      "id": "decimals",
                      "value": 3
                    },
                    {
                      "id": "displayName",
                      "value": "Seher (Mio.)"
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Wochentag"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 131
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Sehbeteiligung"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Sehbeteiligung (Mio.)"
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 12,
              "w": 24,
              "x": 0,
              "y": 439
            },
            "id": 170,
            "options": {
              "cellHeight": "sm",
              "footer": {
                "countRows": false,
                "enablePagination": true,
                "fields": "",
                "reducer": [
                  "sum"
                ],
                "show": false
              },
              "showHeader": true,
              "sortBy": []
            },
            "pluginVersion": "11.3.1",
            "targets": [
              {
                "datasource": {
                  "type": "grafana-bigquery-datasource",
                  "uid": "qUaUqEk4k"
                },
                "editorMode": "code",
                "format": 1,
                "location": "EU",
                "project": "ndr-code-bi-dashboard",
                "rawQuery": true,
                "rawSql": "IF (\"${LRA:text}\" = \"Sender\") THEN (\r\n  SELECT \r\n    --Nummer, \r\n    Sender, \r\n    Datum,\r\n    Wochentag,\r\n    REGEXP_REPLACE(FORMAT('%.3f', Seher), r'\\.', ','),\r\n    REGEXP_REPLACE(FORMAT('%.1f', Marktanteil), r'\\.', ',') AS Marktanteil\r\n  FROM (\r\n    SELECT \r\n      --ROW_NUMBER() OVER (ORDER BY -market_share) AS Nummer, \r\n      show AS Sender, \r\n      date AS Datum,\r\n      weekday AS Wochentag,\r\n      $SehbOderSeher AS Seher,\r\n      market_share AS Marktanteil\r\n    FROM `ndr-code-bi-dashboard.Quotenreport.${sendungsliste_monthly}`\r\n    WHERE show LIKE \"${Sendung:text}\" AND year LIKE \"$Jahr\"\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  ) AS subquery\r\n  ORDER BY Marktanteil DESC\r\n);\r\nELSE (\r\n  SELECT \r\n    --Nummer, \r\n    Sender, \r\n    Datum,\r\n    Wochentag,\r\n    Folgentitel,\r\n    REGEXP_REPLACE(FORMAT('%.3f', sehbeteiligung), r'\\.', ',') as Sehbeteiligung,\r\n    REGEXP_REPLACE(FORMAT('%.1f', Marktanteil), r'\\.', ',') AS Marktanteil\r\n  FROM (\r\n    SELECT \r\n      ROW_NUMBER() OVER (ORDER BY -sehbeteiligung, -market_share) AS Nummer, \r\n      lra AS Sender, \r\n      date AS Datum,\r\n      weekday AS Wochentag,\r\n      title AS Folgentitel,\r\n      sehbeteiligung AS Sehbeteiligung,\r\n      market_share AS Marktanteil\r\n    FROM `ndr-code-bi-dashboard.Quotenreport.${sendungsliste_monthly}`\r\n    WHERE show LIKE \"${Sendung:text}\" AND year LIKE \"$Jahr\"\r\n    AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\n  ) AS subquery\r\n  ORDER BY Marktanteil DESC\r\n);\r\nEND IF;\r\n",
                "refId": "A",
                "sql": {
                  "columns": [
                    {
                      "parameters": [],
                      "type": "function"
                    }
                  ],
                  "groupBy": [
                    {
                      "property": {
                        "type": "string"
                      },
                      "type": "groupBy"
                    }
                  ],
                  "limit": 50
                }
              }
            ],
            "title": "Hitliste $sendung_or_sendetag |  ${LRA:text} | $Sendung | $BRD_or_NDR | $date_range_monthly",
            "transparent": true,
            "type": "table"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "transparent"
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                }
              },
              "overrides": []
            },
            "gridPos": {
              "h": 1,
              "w": 24,
              "x": 0,
              "y": 451
            },
            "id": 173,
            "options": {
              "colorMode": "value",
              "graphMode": "area",
              "justifyMode": "auto",
              "orientation": "auto",
              "percentChangeColorMode": "standard",
              "reduceOptions": {
                "calcs": [
                  "lastNotNull"
                ],
                "fields": "",
                "values": false
              },
              "showPercentChange": false,
              "textMode": "auto",
              "wideLayout": true
            },
            "pluginVersion": "11.3.1",
            "targets": [
              {
                "refId": "A"
              }
            ],
            "title": "",
            "transparent": true,
            "type": "stat"
          }
        ],
        "title": "Hitlisten",
        "type": "row"
      },
      {
        "collapsed": true,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 133
        },
        "id": 74,
        "panels": [
          {
            "fieldConfig": {
              "defaults": {},
              "overrides": []
            },
            "gridPos": {
              "h": 3,
              "w": 24,
              "x": 0,
              "y": 147
            },
            "id": 210,
            "options": {
              "code": {
                "language": "plaintext",
                "showLineNumbers": false,
                "showMiniMap": false
              },
              "content": "## <span style=\"color:#BC4542\"><b>Hinweis</b></span>\n\n### Der Wert der Durchschnittslinie bezieht sich auf das aktuelle Jahr.",
              "mode": "markdown"
            },
            "pluginVersion": "11.3.1",
            "title": "",
            "transparent": true,
            "type": "text"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "fieldConfig": {
              "defaults": {},
              "overrides": []
            },
            "gridPos": {
              "h": 16,
              "w": 24,
              "x": 0,
              "y": 150
            },
            "id": 76,
            "options": {
              "baidu": {
                "callback": "bmapReady",
                "key": ""
              },
              "editor": {
                "format": "auto",
                "height": 1057
              },
              "editorMode": "code",
              "gaode": {
                "key": "",
                "plugin": "AMap.Scale,AMap.ToolBar"
              },
              "getOption": "const legendWordField = context.panel.data.series[0].fields.find(f => f.name === 'legendName');\nconst legendWord = legendWordField.values.get(0);\n\nconst reichweiteDSField = context.panel.data.series[0].fields.find(f => f.name === 'reichweiteDurchschnitt');\nconst marktanteilDSField = context.panel.data.series[0].fields.find(f => f.name === 'marktanteilDurchschnitt');\nconst reichweiteDS = reichweiteDSField.values.get(0);\nconst marktanteilDS = marktanteilDSField.values.get(0);\n\nfunction formatDate(timestamp) {\n  const date = new Date(timestamp);\n  let day = ('0' + date.getDate()).slice(-2);\n  let month = ('0' + (date.getMonth() + 1)).slice(-2);\n  let year = date.getFullYear();\n  return `${day}.${month}.${year}`;\n}\n\nconst series = context.panel.data.series.map(s => {\n  const dates = s.fields.find(f => f.name === 'datum').values;\n  const marktanteilValues = s.fields.find(f => f.name === 'ma').values;\n  const sehbeteiligungValues = s.fields.find(f => f.name === 'sb').values;\n\n  return [\n    {\n      name: 'Marktanteil (%)',\n      type: 'scatter',\n      symbolSize: 12,\n      yAxisIndex: 0,\n      data: marktanteilValues.map((value, index) => [dates[index], Math.round(value * 10) / 10]),\n      markLine: {\n        data: [{ yAxis: marktanteilDS, name: 'Avg' }],\n        label: {\n          formatter: function (params) {\n            return `${params.value.toFixed(1).toLocaleString().replace(\".\", \",\")}%`;\n          }\n        }\n      }\n    },\n    {\n      name: `${legendWord} (Mio.)`,\n      type: 'scatter',\n      symbolSize: 12,\n      yAxisIndex: 1,\n      data: sehbeteiligungValues.map((value, index) => [dates[index], Math.round(value * 1000) / 1000]),\n      markLine: {\n        data: [{ yAxis: parseFloat(reichweiteDS).toFixed(1), name: 'Avg' }],\n        label: {\n          formatter: function (params) {\n            return `${parseFloat(params.value).toFixed(1).toLocaleString('de-DE')} Mio.`;\n          }\n        }\n      }\n    }\n  ];\n}).flat();\n\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    formatter: function (params) {\n      let tooltipContent = formatDate(params[0].axisValue) + '<br/>';\n      params.forEach(param => {\n        const colorSpan = `<span style=\"display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:${param.color};\"></span>`;\n        let value = param.value[1];\n        let unit = param.seriesName.includes('Mio.') ? ' Mio.' : '%';\n        value = Number(value).toLocaleString('de-DE', {\n          minimumFractionDigits: unit === ' Mio.' ? 3 : 1\n        });\n        tooltipContent += `${colorSpan}${param.seriesName}: <span style=\"font-weight:bold;\">${value}${unit}</span><br/>`;\n      });\n      return tooltipContent;\n    }\n  },\n  legend: {\n    icon: 'circle',\n    inactiveColor: '#767676',\n    borderColor: '#969696',\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 7,\n    itemGap: 30,\n    textStyle: { fontSize: 14, fontWeight: 'bold' },\n    selectedMode: 'single',\n    symbolRotate: 90,\n    data: ['Marktanteil (%)', `${legendWord} (Mio.)`]\n  },\n  toolbox: {\n    feature: {\n      dataView: { show: true, readOnly: false },\n      magicType: { show: true },\n      restore: { show: true },\n      saveAsImage: { show: true }\n    }\n  },\n  dataZoom: [\n    { type: 'slider', xAxisIndex: [0], start: 0, end: 100 }\n  ],\n  xAxis: {\n    type: 'time',\n    boundaryGap: ['2%', '2%'],\n    axisLabel: {\n      fontWeight: 'bold',\n      formatter: value => {\n        const date = new Date(value);\n        return `${('0' + date.getDate()).slice(-2)}.${('0' + (date.getMonth() + 1)).slice(-2)}.${date.getFullYear()}`;\n      }\n    },\n    axisTick: { alignWithLabel: true }\n  },\n  yAxis: [\n    {\n      type: 'value',\n      min: 0,\n      max: value => value.max * 1.1,\n      axisLabel: {\n        formatter: value => Number(value).toFixed(1).toLocaleString('de-DE', { minimumFractionDigits: 1 }) + '%'\n      }\n    },\n    {\n      type: 'value',\n      min: 0,\n      position: 'left',\n      max: value => value.max * 1.1,\n      axisLabel: {\n        formatter: value => Number(value).toLocaleString('de-DE', { minimumFractionDigits: 3 }) + ' Mio.'\n      }\n    }\n  ],\n  grid: {\n    left: '5%', right: '5%', top: '10%', bottom: 50, containLabel: true\n  },\n  series\n};\n",
              "google": {
                "callback": "gmapReady",
                "key": ""
              },
              "map": "none",
              "renderer": "canvas",
              "themeEditor": {
                "config": "{}",
                "height": 400,
                "name": "default"
              },
              "visualEditor": {
                "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
                "dataset": [],
                "series": []
              }
            },
            "pluginVersion": "6.1.0",
            "targets": [
              {
                "datasource": {
                  "type": "grafana-bigquery-datasource",
                  "uid": "qUaUqEk4k"
                },
                "editorMode": "code",
                "format": 1,
                "location": "EU",
                "project": "ndr-code-bi-dashboard",
                "rawQuery": true,
                "rawSql": "SELECT\r\n  PARSE_DATE(\"%d.%m.%Y\", date) as datum,\r\n  ROUND(market_share, 3) as ma,\r\n  ROUND($SehbOderSeher, 3) as sb,\r\n  CASE\r\n    WHEN ${LRA:doublequote} = \"sender\" THEN \"Seher\"\r\n    ELSE \"Sehbeteiligung\"\r\n  END as legendName,\r\n  CASE\r\n    WHEN ${LRA:doublequote} = \"sender\" THEN $seherDurchschnitt\r\n    ELSE $sehbDurchschnitt\r\n  END as reichweiteDurchschnitt,\r\n  $marktanteilDurchschnitt as marktanteilDurchschnitt\r\nFROM\r\n  `ndr-code-bi-dashboard.Quotenreport.${sendungsliste_monthly}`\r\nWHERE show = \"${Sendung:text}\" and year like \"$Jahr\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\nORDER BY datum ASC",
                "refId": "A",
                "sql": {
                  "columns": [
                    {
                      "parameters": [],
                      "type": "function"
                    }
                  ],
                  "groupBy": [
                    {
                      "property": {
                        "type": "string"
                      },
                      "type": "groupBy"
                    }
                  ],
                  "limit": 50
                }
              }
            ],
            "title": "$sendung_or_sendetag im Zeitverlauf | $LRA | $Sendung | $BRD_or_NDR | $date_range_monthly",
            "transparent": true,
            "type": "volkovlabs-echarts-panel"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "transparent"
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                }
              },
              "overrides": []
            },
            "gridPos": {
              "h": 1,
              "w": 24,
              "x": 0,
              "y": 166
            },
            "id": 174,
            "options": {
              "colorMode": "value",
              "graphMode": "area",
              "justifyMode": "auto",
              "orientation": "auto",
              "percentChangeColorMode": "standard",
              "reduceOptions": {
                "calcs": [
                  "lastNotNull"
                ],
                "fields": "",
                "values": false
              },
              "showPercentChange": false,
              "textMode": "auto",
              "wideLayout": true
            },
            "pluginVersion": "11.3.1",
            "targets": [
              {
                "refId": "A"
              }
            ],
            "title": "",
            "transparent": true,
            "type": "stat"
          }
        ],
        "title": "$sendung_or_sendetag",
        "type": "row"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 134
        },
        "id": 78,
        "panels": [],
        "title": "Monatsdurchschnitte",
        "type": "row"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 12,
          "x": 0,
          "y": 135
        },
        "id": 206,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "###### Marktanteil (%) Aktuelles Jahr vs. Vorjahr | ${LRA:text} | $Sendung | $BRD_or_NDR | $date_range",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 12,
          "x": 12,
          "y": 135
        },
        "id": 209,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "###### $SehbOderSeher (Mio.) Aktuelles Jahr vs. Vorjahr | ${LRA:text}  | $Sendung | $BRD_or_NDR | $date_range",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 11,
          "w": 12,
          "x": 0,
          "y": 137
        },
        "id": 80,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const aktuellesJahr = context.panel.data.series[0].fields.find(f => f.name === 'aktuelles_jahr').values.get(0);\nconst vorJahr = context.panel.data.series[0].fields.find(f => f.name === 'vor_jahr').values.get(0);\n\nfunction formatNumberGerman(value, decimals = 2) {\n  return new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  }).format(value);\n}\n\nconst series = context.panel.data.series.map(s => {\n  const years = s.fields.find(f => f.name === 'jahre').values;\n  const marktanteilValues = s.fields.find(f => f.name === 'ma').values;\n\n  let currentYearData = [];\n  let previousYearData = [];\n\n\n  years.forEach((year, index) => {\n    const roundedValue = Math.round(marktanteilValues[index] * 10) / 10;\n    if (year === aktuellesJahr) {\n      currentYearData.push({ value: roundedValue });\n    } else if (year === vorJahr) {\n      previousYearData.push({ value: roundedValue });\n    }\n  });\n\n  return [\n    {\n      name: 'Aktuelles Jahr',\n      type: 'bar',\n      barGap: 0,\n      data: currentYearData,\n      label: {\n        show: true,\n        position: 'top',\n        fontSize: 13,\n        fontWeight: 'bold',\n        formatter: function (params) {\n          let formattedNumber = formatNumberGerman(params.value.toFixed(1), 1);\n          return `${formattedNumber}%`;\n        }\n      },\n      tooltip: {\n        valueFormatter: function (value) {\n          let formattedNumber = formatNumberGerman(value.toFixed(1), 1);\n          return `${formattedNumber}%`;\n        }\n      },\n    },\n    {\n      name: 'Vorjahr',\n      type: 'bar',\n      barGap: 0,\n      data: previousYearData,\n      itemStyle: { color: '#c5e2ff' },\n      label: {\n        show: true,\n        position: 'top',\n        fontSize: 13,\n        fontWeight: 'bold',\n        formatter: function (params) {\n          let formattedNumber = formatNumberGerman(params.value.toFixed(1), 1);\n          return `${formattedNumber}%`;\n        }\n      },\n      tooltip: {\n        valueFormatter: function (value) {\n          let formattedNumber = formatNumberGerman(value.toFixed(1), 1);\n          return `${formattedNumber}%`;\n        }\n      }\n    }\n  ];\n}).flat();\n\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\ncontext.panel.chart.on('legendselectchanged', function (event) {\n  const selectedName = event.name;\n  const series = context.panel.chart.getOption().series;\n\n  series.forEach(function (serie) {\n    serie.show = serie.category === selectedName;\n  });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: { type: 'none' }\n  },\n  legend: {\n    icon: 'circle',\n    inactiveColor: '#767676',\n    borderColor: '#969696',\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 7,\n    itemGap: 30,\n    textStyle: { fontSize: 14, fontWeight: 'bold' },\n    symbolRotate: 90,\n  },\n  toolbox: {\n    feature: {\n      dataView: { show: true, readOnly: false },\n      magicType: { show: true },\n      restore: { show: true },\n      saveAsImage: { show: true }\n    }\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\n    axisPointer: { type: 'shadow' },\n    boundaryGap: true,\n    axisTick: { alignWithLabel: true, interval: 0 },\n    axisLabel: { interval: 0, fontWeight: 'bold' }\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n    axisLabel: {\n      formatter: function (value) {\n        return formatNumberGerman(value.toFixed(1), 1) + '%';\n      }\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '17%',\n    bottom: 12,\n    containLabel: true,\n  },\n  series: series\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nROUND(market_share, 1) as ma,\r\nmonth as mon,\r\nyear as jahre,\r\n\"$Jahr\" as aktuelles_jahr,\r\n\"$LastJahr\" as vor_jahr\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${monatswerte_native}`\r\nWHERE show like \"${Sendung:name}\" AND (year LIKE \"$Jahr\" OR year LIKE \"$LastJahr\")\r\nORDER BY \r\n  CASE mon\r\n    WHEN \"Januar\" THEN 1\r\n    WHEN \"Februar\" THEN 2\r\n    WHEN \"März\" THEN 3\r\n    WHEN \"April\" THEN 4\r\n    WHEN \"Mai\" THEN 5\r\n    WHEN \"Juni\" THEN 6\r\n    WHEN \"Juli\" THEN 7\r\n    WHEN \"August\" THEN 8\r\n    WHEN \"September\" THEN 9\r\n    WHEN \"Oktober\" THEN 10\r\n    WHEN \"November\" THEN 11\r\n    WHEN \"Dezember\" THEN 12\r\n  END\r\n-- LIMIT 10",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 11,
          "w": 12,
          "x": 12,
          "y": 137
        },
        "id": 86,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const aktuellesJahr = context.panel.data.series[0].fields.find(f => f.name === 'aktuelles_jahr').values.get(0);\nconst vorJahr = context.panel.data.series[0].fields.find(f => f.name === 'vor_jahr').values.get(0);\n\n\nfunction formatNumberGerman(value, decimals = 2) {\n  return new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  }).format(value);\n}\nconst series = context.panel.data.series.map(s => {\n  const years = s.fields.find(f => f.name === 'jahre').values;\n  const sehbeteiligungValues = s.fields.find(f => f.name === 'sb').values;\n\n  // Initialize arrays for current year and previous year data\n  let currentYearData = [];\n  let previousYearData = [];\n\n  // Separate data based on the year\n  years.forEach((year, index) => {\n    const roundedValue = Math.round(sehbeteiligungValues[index] * 1000) / 1000;\n    if (year === aktuellesJahr) {\n      currentYearData.push({ value: roundedValue });\n    } else if (year === vorJahr) {\n      previousYearData.push({ value: roundedValue });\n    }\n  });\n\n  return [\n    {\n      name: 'Aktuelles Jahr',\n      type: 'bar',\n      category: 'Reichweite',\n      barGap: 0,\n      data: currentYearData,\n      label: {\n        show: true,\n        position: 'top',\n        fontSize: '13',\n        fontWeight: 'bold',\n        formatter: function (params) {\n          let number = params.value.toFixed(3);\n          let formattedNumber = formatNumberGerman(number, 3); // new Intl.NumberFormat('de-DE').format(number);\n          return formattedNumber;\n        }\n      },\n      tooltip: {\n        valueFormatter: function (value) {\n          let number = value.toFixed(3);\n          let formattedNumber = formatNumberGerman(number, 3); // new Intl.NumberFormat('de-DE').format(number).replace('.', ',');\n          return formattedNumber + ' Mio.';\n        }\n      },\n    },\n    {\n      name: 'Vorjahr',\n      type: 'bar',\n      category: 'Reichweite',\n      barGap: 0,\n      data: previousYearData,\n      itemStyle: { color: '#c5e2ff' },\n      label: {\n        show: true,\n        position: 'top',\n        fontSize: '13',\n        fontWeight: 'bold',\n        formatter: function (params) {\n          let number = params.value.toFixed(3);\n          let formattedNumber = formatNumberGerman(number, 3); //new Intl.NumberFormat('de-DE').format(number);\n          return formattedNumber;\n        }\n      },\n      tooltip: {\n        valueFormatter: function (value) {\n          let number = value.toFixed(3);\n          let formattedNumber = formatNumberGerman(number, 3); //new Intl.NumberFormat('de-DE').format(number).replace('.', ',');\n          return formattedNumber + ' Mio.';\n        }\n      }\n    }\n  ];\n}).flat();\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\ncontext.panel.chart.on('legendselectchanged', function (event) {\n  const selectedName = event.name;\n  const series = context.panel.chart.getOption().series;\n\n  series.forEach(function (serie) {\n    serie.show = serie.category === selectedName;\n  });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'none',\n      crossStyle: {\n        color: '#999'\n      }\n    }\n  },\n  legend: {\n    icon: 'circle',\n    inactiveColor: '#767676',\n    borderColor: '#969696',\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 7,\n    itemGap: 30,\n    textStyle: { fontSize: 14, fontWeight: 'bold' },\n    symbolRotate: 90,\n  },\n  toolbox: {\n    feature: {\n      dataView: { show: true, readOnly: false },\n      magicType: { show: true },\n      restore: { show: true },\n      saveAsImage: { show: true }\n    }\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September',\n      'Oktober', 'November', 'Dezember'],\n    axisPointer: {\n      type: 'shadow'\n    },\n    boundaryGap: true,\n    axisTick: {\n      alignWithLabel: true,\n      interval: 0\n    },\n    axisLabel: {\n      interval: 0,\n      fontWeight: 'bold'\n    }\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n    axisLabel: {\n      formatter: function (value) {\n        return formatNumberGerman(value.toFixed(1), 1) + \" Mio. \";\n      }\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '17%',\n    bottom: 12,\n    containLabel: true,\n  },\n  series: series\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nROUND(sehbeteiligung, 3) as sb,\r\nmonth as mon,\r\nyear as jahre,\r\n\"$Jahr\" as aktuelles_jahr,\r\n\"$LastJahr\" as vor_jahr\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${monatswerte_monthly}`\r\nWHERE show LIKE \"${Sendung:text}\" AND (year LIKE \"$Jahr\" OR year LIKE \"$LastJahr\")\r\nORDER BY \r\n  CASE mon\r\n    WHEN \"Januar\" THEN 1\r\n    WHEN \"Februar\" THEN 2\r\n    WHEN \"März\" THEN 3\r\n    WHEN \"April\" THEN 4\r\n    WHEN \"Mai\" THEN 5\r\n    WHEN \"Juni\" THEN 6\r\n    WHEN \"Juli\" THEN 7\r\n    WHEN \"August\" THEN 8\r\n    WHEN \"September\" THEN 9\r\n    WHEN \"Oktober\" THEN 10\r\n    WHEN \"November\" THEN 11\r\n    WHEN \"Dezember\" THEN 12\r\n  END\r\n-- LIMIT 10",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 148
        },
        "id": 175,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 149
        },
        "id": 82,
        "panels": [],
        "title": "Vergleichssender",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 150
        },
        "id": 83,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const selectedLRA = context.panel.data.series[0].fields.find(f => f.name === 'lra').values;\nconst selectedShow = context.panel.data.series[0].fields.find(f => f.name === 'sendung').values;\n\nfunction formatNumberGerman(value, decimals = 2) {\n  return new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  }).format(value);\n}\nconst series = context.panel.data.series.map(s => {\n  const sender = s.fields.find(f => f.name === 'Vergleichssender').values;\n  const marktanteilValues = s.fields.find(f => f.name === 'Marktanteil').values;\n\n  return [\n    {\n      name: 'Marktanteil',\n      type: 'bar',\n      data: marktanteilValues.map((value, index) => {\n        const roundedValue = Math.round(value * 10) / 10;\n        let itemStyle = {};\n\n        console.log(sender[index])\n        console.log(\"current:\" + selectedLRA[index])\n\n        if (selectedShow[index] === sender[index]\n          || sender[index].includes(selectedLRA[index])) {\n          itemStyle = { color: '#32BD68' };\n        }\n\n        return { value: roundedValue, itemStyle: itemStyle }\n      }),\n      label: {\n        show: true,\n        position: 'top',\n        fontSize: '18',\n        fontWeight: 'bold',\n        formatter: function (params) {\n          let number = params.value.toFixed(1);\n          let formattedNumber = formatNumberGerman(number, 1);//new Intl.NumberFormat('de-DE').format(number);\n          return formattedNumber + '%';\n        }\n      },\n      tooltip: {\n        valueFormatter: function (value) {\n          let number = value.toFixed(1);\n          let formattedNumber = formatNumberGerman(number, 1);//new Intl.NumberFormat('de-DE').format(number).replace('.', ',');\n          return formattedNumber + '%';\n        }\n      }\n    }\n  ];\n}).flat();\n\nconst sender = context.panel.data.series[0].fields.find(f => f.name === 'Vergleichssender').values;\n\nconst xAxisData = sender.map((value, index) => {\n  if (selectedShow[index] === sender[index]\n    || sender[index].includes(selectedLRA[index])) {\n    return selectedShow[index];\n  }\n  return value;\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'none',\n      crossStyle: {\n        color: '#999'\n      }\n    }\n  },\n  legend: {\n    show: false,\n  },\n  toolbox: {\n    feature: {\n      dataView: { show: true, readOnly: false },\n      magicType: { show: true },\n      restore: { show: true },\n      saveAsImage: { show: true }\n    }\n  },\n  xAxis: {\n    type: 'category',\n    data: xAxisData,\n    axisPointer: {\n      type: 'shadow'\n    },\n    boundaryGap: true,\n    axisTick: {\n      alignWithLabel: true,\n      interval: 0\n    },\n    axisLabel: {\n      interval: 0,\n      fontWeight: 'bold'\n    }\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n    axisLabel: {\n      formatter: function (value) {\n        return formatNumberGerman(value.toFixed(1), 1) + '%';\n      }\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '8%',\n    bottom: 12,\n    containLabel: true,\n  },\n  series\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\ncomparison_sender as Vergleichssender,\r\nROUND(market_share, 1) as Marktanteil,\r\nlra as lra,\r\nshow as sendung\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${vergleichssender_monthly}`\r\nWHERE show like \"${Sendung}\" and year like \"$Jahr\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\nORDER BY Marktanteil DESC\r\nLIMIT 10",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top 10 Sender zur Sendezeit nach Marktanteil (%) | $LRA | $Sendung | $BRD_or_NDR | $date_range_monthly",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 163
        },
        "id": 199,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 164
        },
        "id": 192,
        "panels": [],
        "title": "Glossar",
        "type": "row"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 0,
          "y": 165
        },
        "id": 194,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "# Sehbeteiligung (Mio.)\n\nAnzahl der Zuschauer einer Zielgruppe, die anteilig ihrer Nutzungsdauer gezählt werden",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 6,
          "y": 165
        },
        "id": 196,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "# Marktanteil\n\nGibt den prozentualen Anteil der durchschnittlichen Sehbeteiligung einer Sendung oder Zeitintervalls an der Sehbeteiligung TV Gesamt zum Zeitpunkt an",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 12,
          "y": 165
        },
        "id": 195,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "# Seher (Mio.)\n\nPersonen, die sich für mindestens eine Minute in das Programm eingeschaltet haben",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 18,
          "y": 165
        },
        "id": 197,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "# Verweildauer\n\nVerweildauer in Minuten (Durchschnittliche Sehdauer der Zuschauer die mindestens 1 Minute ohne Unterbrechung geschaut haben)",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 169
        },
        "id": 198,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      }
    ],
    "preload": true,
    "schemaVersion": 40,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "text": "ard",
            "value": "ard"
          },
          "includeAll": false,
          "name": "LRA",
          "options": [
            {
              "selected": true,
              "text": "ARD",
              "value": "ard"
            },
            {
              "selected": false,
              "text": "MDR",
              "value": "mdr"
            },
            {
              "selected": false,
              "text": "NDR",
              "value": "ndr"
            },
            {
              "selected": false,
              "text": "Sender",
              "value": "sender"
            }
          ],
          "query": "ARD : ard, MDR : mdr, NDR : ndr, Sender : sender",
          "type": "custom"
        },
        {
          "current": {
            "text": "01.01.2024 - 31.12.2024",
            "value": "01.01.2024 - 31.12.2024"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "date_range",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  date_range\r\nFROM \r\n  `ndr-code-bi-dashboard.Quotenreport.${verweildauer_native}`\r\nWHERE \r\n  (show LIKE \"${LRA:text}%\" OR show LIKE \"${Sendung:text}\")\r\n  AND year LIKE \"$Jahr\"\r\n  AND lra LIKE \"SENDER\"\r\nORDER BY \r\n  date_range DESC\r\nLIMIT 1",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "date_range_monthly",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  date_range\r\nFROM \r\n  `ndr-code-bi-dashboard.Quotenreport.${verweildauer_monthly}`\r\nWHERE \r\n  (show LIKE \"${LRA:text}%\" OR show LIKE \"${Sendung:text}\")\r\n  AND year LIKE \"$Jahr\"\r\n  AND lra LIKE \"SENDER\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\nORDER BY \r\n  date_range DESC\r\nLIMIT 1",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "01.01.2023 - 31.05.2023",
            "value": "01.01.2023 - 31.05.2023"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "date_range_monthly_last_year",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  date_range\r\nFROM \r\n  `ndr-code-bi-dashboard.Quotenreport.${verweildauer_monthly}`\r\nWHERE \r\n  (show LIKE \"${LRA:text}%\" OR show LIKE \"${Sendung:text}\")\r\n  AND year LIKE \"$LastJahr\"\r\n  AND lra LIKE \"SENDER\"\r\n  AND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND\r\nORDER BY \r\n  date_range DESC\r\nLIMIT 1",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "TTT",
            "value": "TTT"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "includeAll": false,
          "name": "Sendung",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT DISTINCT(show) from `ndr-code-bi-dashboard.Quotenreport.${monatswerte_native}`\r\nWHERE lower(lra) LIKE ${LRA:doublequote}\r\n-- to remove a specific show, add show and uncomment\r\nAND show NOT LIKE \"Tagesschau 20 Uhr alle Sender\"\r\nORDER BY lower(show) ASC",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Sehbeteiligung",
            "value": "Sehbeteiligung"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "SehbOderSeher",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE \"${LRA:text}\"\r\nWHEN \"Sender\" THEN \"Seher\"\r\nELSE \"Sehbeteiligung\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Zuschauer gesamt",
            "value": "Zuschauer gesamt"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "ndrOderGesamt",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN (\"${LRA:text}\" LIKE \"NDR\" AND \"${special_region}\" LIKE \"\") THEN \"NDR Gebiet\"\r\nWHEN (\"${LRA:text}\"LIKE \"MDR\" AND \"${special_region}\" LIKE \"\") THEN \"MDR Gebiet\"\r\nWHEN \"${special_region}\" NOT LIKE \"\" THEN \"Gebiet $special_region\"\r\nELSE \"Zuschauer gesamt\"\r\nEND AS ndrOrGesamt",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2024",
            "value": "2024"
          },
          "name": "Jahr",
          "options": [
            {
              "selected": false,
              "text": "2022",
              "value": "2022"
            },
            {
              "selected": false,
              "text": "2023",
              "value": "2023"
            },
            {
              "selected": true,
              "text": "2024",
              "value": "2024"
            }
          ],
          "query": "2022 : 2022, 2023 : 2023, 2024 : 2024, 2025 : 2025",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "2023",
            "value": "2023"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "LastJahr",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST($Jahr - 1 AS STRING)\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2022",
            "value": "2022"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "LastLastJahr",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST($Jahr - 2 AS STRING)",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "24",
            "value": "24"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "numShows",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCAST(COUNT(title) AS STRING)\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${sendungsliste_monthly}`\r\nWHERE show LIKE \"${Sendung:text}\" and year like \"$Jahr\"\r\nAND CASE \"${table_prefix}\"\r\nWHEN \"ndr_\" THEN month = $Monat\r\nELSE TRUE \r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "BRD gesamt",
            "value": "BRD gesamt"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "BRD_or_NDR",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN \"${special_region}\" NOT LIKE \"\" THEN \"${special_region}\"\r\nWHEN \"${LRA:text}\" like \"ARD\" THEN \"BRD gesamt\"\r\nWHEN \"${LRA:text}\" like \"NDR\" THEN \"NDR Gebiet\"\r\nWHEN \"${LRA:text}\" like \"MDR\" THEN \"MDR-Gebiet Z ges.\"\r\nWHEN \"${Sendung:text}\" not like \"NDR Fernsehen\" THEN \"BRD gesamt\"\r\nWHEN \"${Sendung:text}\" LIKE \"NDR Fernsehen\" THEN \"NDR Gebiet\"\r\nEND\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "BRD_or_none",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN \"${special_region}\" NOT LIKE \"\" THEN \"\"\r\nWHEN \"${LRA:text}\" like \"NDR\" THEN \"BRD Gesamt\"\r\nWHEN \"${Sendung:text}\" like \"NDR Fernsehen\" THEN \"BRD Gesamt\"\r\nWHEN \"${LRA:text}\" like \"MDR\" THEN \"BRD Gesamt\"\r\nELSE \"\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "jahrHidden",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN \"${special_region}\" NOT LIKE \"\" THEN \"\"\r\nWHEN \"${LRA:text}\" like \"ARD\" THEN \"\"\r\nWHEN \"${Sendung:text}\" like \"Tagesschau24\" THEN \"\"\r\nWHEN \"${Sendung:text}\" like \"ARD Das Erste\" THEN \"\"\r\nELSE \"${date_range_monthly}:\"\r\nEND as text\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "lastJahrHidden",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN \"${special_region}\" NOT LIKE \"\" THEN \"\"\r\nWHEN \"${LRA:text}\" like \"ARD\" THEN \"\"\r\nWHEN \"${Sendung:text}\" like \"Tagesschau24\" THEN \"\"\r\nWHEN \"${Sendung:text}\" like \"ARD Das Erste\" THEN \"\"\r\nELSE \"${LastJahr}:\"\r\nEND as text\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "lastLastJahrHidden",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN \"${special_region}\" NOT LIKE \"\" THEN \"\"\r\nWHEN \"${LRA:text}\" like \"ARD\" THEN \"\"\r\nWHEN \"${Sendung:text}\" like \"Tagesschau24\" THEN \"\"\r\nWHEN \"${Sendung:text}\" like \"ARD Das Erste\" THEN \"\"\r\nELSE \"${LastLastJahr}:\"\r\nEND as text\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr_zielgruppen_facts_native",
            "value": "ndr_zielgruppen_facts_native"
          },
          "definition": "",
          "hide": 2,
          "name": "zielgruppen_und_facts",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${table_prefix}\"\nWHEN \"ndr_\"\nTHEN \"ndr_zielgruppen_facts_native\"\nELSE \"${table_prefix}zielgruppen_facts_native\"\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr_gcs_zielgruppen_facts_monthly_f",
            "value": "ndr_gcs_zielgruppen_facts_monthly_f"
          },
          "definition": "",
          "hide": 2,
          "name": "zielgruppen_und_facts_monthly",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${table_prefix}\"\nWHEN \"ndr_\"\nTHEN \"ndr_gcs_zielgruppen_facts_monthly_f\"\nELSE \"${table_prefix}zielgruppen_facts_native\"\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr_gcs_sendungsliste_monthly_f",
            "value": "ndr_gcs_sendungsliste_monthly_f"
          },
          "definition": "",
          "hide": 2,
          "name": "sendungsliste_monthly",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${table_prefix}\"\nWHEN \"ndr_\"\nTHEN \"ndr_gcs_sendungsliste_monthly_f\"\nELSE \"${table_prefix}sendungsliste_native\"\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr_gcs_verweildauer_monthly_f",
            "value": "ndr_gcs_verweildauer_monthly_f"
          },
          "definition": "",
          "hide": 2,
          "name": "verweildauer_monthly",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${table_prefix}\"\nWHEN \"ndr_\"\nTHEN \"ndr_gcs_verweildauer_monthly_f\"\nELSE \"${table_prefix}verweildauer_native\"\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr_gcs_monatswerte_monthly_f",
            "value": "ndr_gcs_monatswerte_monthly_f"
          },
          "definition": "",
          "hide": 2,
          "name": "monatswerte_monthly",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${table_prefix}\"\nWHEN \"ndr_\"\nTHEN \"ndr_gcs_monatswerte_monthly_f\"\nELSE \"${table_prefix}monatswerte_native\"\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr_gcs_vergleichssender_monthly_f",
            "value": "ndr_gcs_vergleichssender_monthly_f"
          },
          "definition": "",
          "hide": 2,
          "name": "vergleichssender_monthly",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${table_prefix}\"\nWHEN \"ndr_\"\nTHEN \"ndr_gcs_vergleichssender_monthly_f\"\nELSE \"${table_prefix}vergleichssender_native\"\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "0.994763301975",
            "value": "0.994763301975"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "SehbGesamt",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST(sehbeteiligung AS STRING) from `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}`\r\nWHERE target_group LIKE \"Erw. ab 14%\"\r\nAND show LIKE \"${Sendung:text}\"\r\nAND year = \"${Jahr:text}\"",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "1.718337632803",
            "value": "1.718337632803"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "SeherGesamt",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST(viewers AS STRING) from `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}`\r\nWHERE target_group LIKE \"Erw. ab 14%\"\r\nAND show LIKE \"${Sendung:text}\"\r\nAND year = \"${Jahr:text}\"",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "1.193218714654",
            "value": "1.193218714654"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "SendetagGesamt",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST(sehbeteiligung_value AS STRING) FROM(\r\nSELECT\r\n  CASE \"${LRA:text}\"\r\n    WHEN \"NDR\" THEN (\r\n      SELECT sehbeteiligung\r\n      FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}`\r\n      WHERE\r\n        target_group LIKE \"Erw. ab 14 J.\"\r\n        AND show LIKE \"NDR Fernsehen\"\r\n        AND year = \"${Jahr:text}\"\r\n    )\r\n    WHEN \"MDR\" THEN (\r\n      SELECT sehbeteiligung\r\n      FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}`\r\n      WHERE\r\n        target_group LIKE \"Erw. ab 14\"\r\n        AND show LIKE \"MDR Fernsehen\"\r\n        AND year = \"${Jahr:text}\"\r\n    )\r\n    WHEN \"ARD\" THEN (\r\n      SELECT sehbeteiligung\r\n      FROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}`\r\n      WHERE\r\n        target_group LIKE \"Erw. ab 14%\"\r\n        AND show LIKE \"ARD Das Erste\"\r\n        AND year = \"${Jahr:text}\"\r\n    )\r\n    WHEN \"Sender\" THEN (\r\n      SELECT 0\r\n    )\r\n  END AS sehbeteiligung_value)",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "special_region",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE \"${Sendung}\"\r\nWHEN \"Hallo Niedersachsen\" THEN \"Niedersachsen\"\r\nWHEN \"Nordmagazin\" THEN \"Mecklenburg-Vorpommern\"\r\nWHEN \"Hamburg Journal\" THEN \"Hamburg\"\r\nWHEN \"buten un binnen\" THEN \"Bremen\"\r\nWHEN \"Schleswig-Holstein Magazin\" THEN \"Schleswig-Holstein\"\r\nWHEN \"MDR Thüringen Journal\" THEN \"Thüringen\"\r\nWHEN \"MDR Sachsenspiegel\" THEN \"Sachsen\"\r\nWHEN \"MDR Sachsen-Anhalt heute\" THEN \"Sachsen-Anhalt\"\r\nEND as region",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Zusammensetzung von TTT und Fernsehmarkt auf Basis der Sehbeteiligung. Zusammensetzung Das Erste FS 03-03 Uhr auf Basis der Seher.",
            "value": "Zusammensetzung von TTT und Fernsehmarkt auf Basis der Sehbeteiligung. Zusammensetzung Das Erste FS 03-03 Uhr auf Basis der Seher."
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dmt_kennziffern_hinweis",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN \"${LRA:text}\" LIKE \"Sender\" THEN \"Zusammensetzung von $Sendung und Fernsehmarkt auf Basis der Seher.\"\r\nWHEN \"${LRA:text}\" LIKE \"ARD\" THEN \"Zusammensetzung von $Sendung und Fernsehmarkt auf Basis der Sehbeteiligung. Zusammensetzung Das Erste FS 03-03 Uhr auf Basis der Seher.\"\r\nWHEN \"${LRA:text}\" LIKE \"%DR\" THEN \"Zusammensetzung von $Sendung und Fernsehmarkt auf Basis der Sehbeteiligung. Zusammensetzung ${LRA:text} FS 03-03 Uhr auf Basis der Seher.\"\r\nEND AS aufkleber",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "CASE target_group\n    WHEN \"Vereinfachende\" THEN 1\n    WHEN \"Ablenkungssuchende\" THEN 2\n    WHEN \"Ambitionierte\" THEN 3\n    WHEN \"Neokulturelle\" THEN 4\n    WHEN \"Selbstgenügsame\" THEN 5\n    WHEN \"Sicherheitsorientierte\" THEN 6\n    WHEN \"Traditionsbewusste\" THEN 7\n    WHEN \"Verantwortungsvolle\" THEN 8\n    WHEN \"Gleichmütige\" THEN 9\nEND",
            "value": "CASE target_group\n    WHEN \"Vereinfachende\" THEN 1\n    WHEN \"Ablenkungssuchende\" THEN 2\n    WHEN \"Ambitionierte\" THEN 3\n    WHEN \"Neokulturelle\" THEN 4\n    WHEN \"Selbstgenügsame\" THEN 5\n    WHEN \"Sicherheitsorientierte\" THEN 6\n    WHEN \"Traditionsbewusste\" THEN 7\n    WHEN \"Verantwortungsvolle\" THEN 8\n    WHEN \"Gleichmütige\" THEN 9\nEND"
          },
          "hide": 2,
          "includeAll": false,
          "name": "dmtOrder",
          "options": [
            {
              "selected": true,
              "text": "CASE target_group\n    WHEN \"Vereinfachende\" THEN 1\n    WHEN \"Ablenkungssuchende\" THEN 2\n    WHEN \"Ambitionierte\" THEN 3\n    WHEN \"Neokulturelle\" THEN 4\n    WHEN \"Selbstgenügsame\" THEN 5\n    WHEN \"Sicherheitsorientierte\" THEN 6\n    WHEN \"Traditionsbewusste\" THEN 7\n    WHEN \"Verantwortungsvolle\" THEN 8\n    WHEN \"Gleichmütige\" THEN 9\nEND",
              "value": "CASE target_group\n    WHEN \"Vereinfachende\" THEN 1\n    WHEN \"Ablenkungssuchende\" THEN 2\n    WHEN \"Ambitionierte\" THEN 3\n    WHEN \"Neokulturelle\" THEN 4\n    WHEN \"Selbstgenügsame\" THEN 5\n    WHEN \"Sicherheitsorientierte\" THEN 6\n    WHEN \"Traditionsbewusste\" THEN 7\n    WHEN \"Verantwortungsvolle\" THEN 8\n    WHEN \"Gleichmütige\" THEN 9\nEND"
            }
          ],
          "query": "CASE target_group\n    WHEN \"Vereinfachende\" THEN 1\n    WHEN \"Ablenkungssuchende\" THEN 2\n    WHEN \"Ambitionierte\" THEN 3\n    WHEN \"Neokulturelle\" THEN 4\n    WHEN \"Selbstgenügsame\" THEN 5\n    WHEN \"Sicherheitsorientierte\" THEN 6\n    WHEN \"Traditionsbewusste\" THEN 7\n    WHEN \"Verantwortungsvolle\" THEN 8\n    WHEN \"Gleichmütige\" THEN 9\nEND",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "0.981000026523",
            "value": "0.981000026523"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "sehbDurchschnitt",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST(sehbeteiligung AS STRING) as Sehbeteiligung\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung:text}\"\r\nAND year like \"$Jahr\"",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2.142539165619",
            "value": "2.142539165619"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "seherDurchschnitt",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST(viewers as STRING) as viewers\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\nWHERE target_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year like \"$Jahr\"",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "8.491470699838",
            "value": "8.491470699838"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "marktanteilDurchschnitt",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST(market_share as STRING) as Marktanteil\r\nFROM `ndr-code-bi-dashboard.Quotenreport.${zielgruppen_und_facts}` \r\nWHERE\r\ntarget_group = \"${BRD_or_NDR}\"\r\nAND show like \"${Sendung}\"\r\nAND year LIKE \"$Jahr\"",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "special_region_dmt",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE \"${special_region}\"\r\nWHEN \"\" THEN \"\"\r\nELSE \"Außerdem entfällt die Darstellung für ${Sendung:text}, da DMTs nicht auf Bundeslandebene (hier ${special_region}) ausgewertet werden.\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Gesamtjahre",
            "value": "Gesamtjahre"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "gesamtjahre_hidden",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN \"${special_region}\" NOT LIKE \"\" THEN \"\"\r\nWHEN \"${LRA:text}\" like \"NDR\" THEN \"Gesamtjahre\"\r\nWHEN \"${Sendung:text}\" like \"NDR Fernsehen\" THEN \"Gesamtjahre\"\r\nWHEN \"${LRA:text}\" like \"MDR\" THEN \"Gesamtjahre\"\r\nELSE \"\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Dezember",
            "value": "Dezember"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "gesamtjahre_hidden_monat",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN \"${special_region}\" NOT LIKE \"\" THEN \"\"\r\nWHEN \"${LRA:text}\" like \"NDR\" THEN \"Januar - ${Monat:text}\"\r\nWHEN \"${Sendung:text}\" like \"NDR Fernsehen\" THEN \"Januar - ${Monat:text}\"\r\nWHEN \"${LRA:text}\" like \"MDR\" THEN \"Januar - ${Monat:text}\"\r\nELSE \"\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Sendungen",
            "value": "Sendungen"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "sendung_or_sendetag",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE \"${LRA:text}\"\r\nWHEN \"Sender\" THEN \"Sendetage\"\r\nELSE \"Sendungen\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Daher wird die Darstellung für Hamburg Journal nicht angezeigt.",
            "value": "Daher wird die Darstellung für Hamburg Journal nicht angezeigt."
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "special_region_aufkleber",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE \"${special_region}\"\r\nWHEN \"\" THEN \"\"\r\nELSE \"Daher wird die Darstellung für $Sendung nicht angezeigt.\"\r\nEND AS aufkleber",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr_",
            "value": "ndr_"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "table_prefix",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE ${LRA:doublequote}\r\n        WHEN \"mdr\" THEN \"mdr_\"\r\n        ELSE \"ndr_\"\r\n        END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr_verweildauer_native",
            "value": "ndr_verweildauer_native"
          },
          "hide": 2,
          "includeAll": false,
          "name": "verweildauer_native",
          "options": [],
          "query": "verweildauer_native : ${table_prefix}verweildauer_native",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "ndr_sendungsliste_native",
            "value": "ndr_sendungsliste_native"
          },
          "hide": 2,
          "includeAll": false,
          "name": "sendungsliste_native",
          "options": [],
          "query": "sendungsliste_native : ${table_prefix}sendungsliste_native",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "ndr_monatswerte_native",
            "value": "ndr_monatswerte_native"
          },
          "hide": 2,
          "includeAll": false,
          "name": "monatswerte_native",
          "options": [],
          "query": "monatswerte_native : ${table_prefix}monatswerte_native",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "ndr_vergleichssender_native",
            "value": "ndr_vergleichssender_native"
          },
          "hide": 2,
          "includeAll": false,
          "name": "vergleichssender_native",
          "options": [],
          "query": "vergleichssender_native : ${table_prefix}vergleichssender_native",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "hinweis_regionalmagazin",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \n  CASE \n    WHEN \"$Sendung\" IN (\"Nordmagazin\", \"Hamburg Journal\", \"Schleswig-Holstein Magazin\", \"Hallo Niedersachsen\", \"buten un binnen\") \n    THEN \"Bei den Regionalmagazinen ist eine Auswertung nach Bundesländern methodisch bedingt nicht möglich.\"\n    ELSE \"\" \n  END AS Hinweis\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "hinweis_regionalmagazin_top",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \n  CASE \n    WHEN \"$Sendung\" IN (\"Nordmagazin\", \"Hamburg Journal\", \"Schleswig-Holstein Magazin\", \"Hallo Niedersachsen\", \"buten un binnen\") \n    THEN \"Hinweis\"\n    ELSE \"\" \n  END AS Hinweis\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "\"12\"",
            "value": "\"12\""
          },
          "name": "Monat",
          "options": [
            {
              "selected": false,
              "text": "Januar",
              "value": "\"1\""
            },
            {
              "selected": false,
              "text": "Februar",
              "value": "\"2\""
            },
            {
              "selected": false,
              "text": "März",
              "value": "\"3\""
            },
            {
              "selected": false,
              "text": "April",
              "value": "\"4\""
            },
            {
              "selected": false,
              "text": "Mai",
              "value": "\"5\""
            },
            {
              "selected": false,
              "text": "Juni",
              "value": "\"6\""
            },
            {
              "selected": false,
              "text": "Juli",
              "value": "\"7\""
            },
            {
              "selected": false,
              "text": "August",
              "value": "\"8\""
            },
            {
              "selected": false,
              "text": "September",
              "value": "\"9\""
            },
            {
              "selected": false,
              "text": "Oktober",
              "value": "\"10\""
            },
            {
              "selected": false,
              "text": "November",
              "value": "\"11\""
            },
            {
              "selected": true,
              "text": "Dezember",
              "value": "\"12\""
            }
          ],
          "query": "Januar : \"1\", Februar :  \"2\", März : \"3\", April : \"4\", Mai : \"5\", Juni : \"6\", Juli : \"7\", August : \"8\", September : \"9\", Oktober : \"10\", November : \"11\", Dezember : \"12\" ",
          "type": "custom"
        }
      ]
    },
    "time": {
      "from": "2023-11-30T10:08:12.740Z",
      "to": "2023-12-02T10:08:12.740Z"
    },
    "timepicker": {
      "hidden": true
    },
    "timezone": "",
    "title": "Quotenreport Monatsdaten",
    "uid": "beaqvp0z4v2tcd",
    "version": 34,
    "weekStart": ""
  }
}
