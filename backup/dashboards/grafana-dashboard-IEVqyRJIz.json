{
  "meta": {
    "type": "db",
    "canSave": true,
    "canEdit": true,
    "canAdmin": true,
    "canStar": true,
    "canDelete": true,
    "slug": "lfh-crossmedia-dashboard-prototype",
    "url": "/d/IEVqyRJIz/lfh-crossmedia-dashboard-prototype",
    "expires": "0001-01-01T00:00:00Z",
    "created": "2024-07-29T12:41:53Z",
    "updated": "2025-05-12T10:28:54Z",
    "updatedBy": "silke beyer dev",
    "createdBy": "Anonymous",
    "version": 398,
    "hasAcl": false,
    "isFolder": false,
    "folderId": 660,
    "folderUid": "folder-F9a5Uxn4k",
    "folderTitle": "Prototypes",
    "folderUrl": "/dashboards/f/folder-F9a5Uxn4k/prototypes",
    "provisioned": false,
    "provisionedExternalId": "",
    "annotationsPermissions": {
      "dashboard": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      },
      "organization": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      }
    }
  },
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 1256,
    "links": [],
    "panels": [
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Nur zur ARD-internen Verwendung!",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 8,
          "y": 0
        },
        "id": 73,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 16,
          "y": 0
        },
        "id": 175,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "###### Der vollständige Datensatz steht ab ca. dem 09. des Folgemonats zur Verfügung.\n",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 2
        },
        "id": 30,
        "panels": [],
        "title": "KPI Boxes - Online Data",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "text",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 3
        },
        "id": 119,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 40
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECt \"Online & Social Media\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 5
        },
        "id": 123,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_Info"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_Sport"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_Hamburg"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_Niedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_Kultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 0,
          "y": 6
        },
        "id": 12,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with name_string as (SELECT '${RedaktionKurz} - Web' as name, \n)\n\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH( name)),  name )as Web_${webColor} from name_string\n\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_Info"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_Sport"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_Hamburg"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_Niedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Web_Kultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 6,
          "y": 6
        },
        "id": 67,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with name_string as (SELECT '${RedaktionKurz} - App' as name, \n)\n\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH( name)),  name )as Web_${webColor} from name_string",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#3c69ff",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 12,
          "y": 6
        },
        "id": 5,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\r\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH( 'Facebook')),  'Facebook')\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#c400f0",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 15,
          "y": 6
        },
        "id": 8,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH( 'Instagram')),  'Instagram')\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#1b4483",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 18,
          "y": 6
        },
        "id": 112,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH( 'ARD Mediathek')),  'ARD Mediathek')\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 0,
          "y": 9
        },
        "id": 13,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Visits')), 'Visits') ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 3,
          "y": 9
        },
        "id": 14,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Wiedergaben')), 'Wiedergaben') \r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 6,
          "y": 9
        },
        "id": 88,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Visits')), 'Visits') \r\n  --SELECT 'Visits'",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 9,
          "y": 9
        },
        "id": 105,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH( 'Wiedergaben')), 'Wiedergaben')  \r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 12,
          "y": 9
        },
        "id": 82,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Interaktionen')), 'Interaktionen') \r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 15,
          "y": 9
        },
        "id": 214,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Interaktionen')), 'Interaktionen') \r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "displayName": "${Sendung1800} |",
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 18,
          "y": 9
        },
        "id": 227,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 10
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Wiedergaben' )), 'Wiedergaben' ) name\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "displayName": "${Sendung1930} |",
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 21,
          "y": 9
        },
        "id": 114,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 10
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Wiedergaben')), 'Wiedergaben') name \r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 0,
          "y": 11
        },
        "id": 207,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheVisits\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] aS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS mWeb,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS mApp,\r\n  FROM split_rows\r\n),\r\ndata as(SELECT ROUND(mWeb/1000, 0)*1000 as summe\r\n--SELECT '0'\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01))\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\")) summe_${webColor} FROM\r\ndata\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 3,
          "y": 11
        },
        "id": 208,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheAV\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS mWeb,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS mApp,\r\n  FROM split_rows\r\n),\r\ndata as (\r\nSELECT ROUND(mWeb/1000, 0)*1000 as summe\r\n--SELECT '0'\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01))\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\")) summe_${webColor} FROM\r\ndata",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 6,
          "y": 11
        },
        "id": 209,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheVisits\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS mWeb,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS mApp,\r\n  FROM split_rows\r\n),\r\ndata as(SELECT ROUND(mApp/1000, 0)*1000 as summe\r\n--SELECT '0'\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01))\r\n\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\")) summe_${webColor} FROM\r\ndata",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 9,
          "y": 11
        },
        "id": 210,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheAV\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS mWeb,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS mApp,\r\n  FROM split_rows\r\n),\r\ndata as (SELECT ROUND(mApp/1000, 0)*1000 as summe\r\n--SELECT '0'\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01))\r\n\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\")) summe_${webColor} FROM\r\ndata",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#3c69ff",
              "mode": "fixed"
            },
            "decimals": 0,
            "displayName": "⌀ pro Tag",
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "current_value"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 12,
          "y": 11
        },
        "id": 188,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheSoMe\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] aS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS INT64) AS Facebook,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS INT64) AS fbDays,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(3)] AS INT64) AS Instagram,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(4)] AS INT64) AS igDays,\r\n  FROM split_rows\r\n), \r\ndata as (SELECT ROUND((Facebook/fbDays)/1000, 0)*1000 as summe\r\n--SELECT '0'\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01))\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\")) current_value FROM\r\ndata",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_impressions_unique",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "page_engaged_users": "⌀ pro Tag"
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#c400f0",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "current_value"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 15,
          "y": 11
        },
        "id": 189,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheSoMe\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] aS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS INT64) AS Facebook,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS INT64) AS fbDays,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(3)] AS INT64) AS Instagram,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(4)] AS INT64) AS igDays,\r\n  FROM split_rows\r\n),\r\ndata as (SELECT ROUND((Instagram/igDays)/1000, 0)*1000 as summe\r\n--SELECT '0'\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01))\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\")) current_value FROM\r\ndata",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " Summe",
                "page_impressions_unique": "Potentielle Reichweite"
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#1b4483",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Wiedergaben"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 18,
          "y": 11
        },
        "id": 193,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {},
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheMed\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    SPLIT(row_text, \"|\")[OFFSET(0)] AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS INT64) AS numDays,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS STRING) AS name1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(3)] AS INT64) AS Sendung1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(4)] AS STRING) AS name1930,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(5)] AS INT64) AS Sendung1930,\r\n  FROM split_rows\r\n),\r\ndata as (SELECT ROUND((Sendung1800/numDays)/100, 0)*100 as summe\r\n--SELECT '0'\r\nFROM parsed_rows\r\nWHERE DATE(date) = DATE($Jahr, CAST($Monat as INT64),01))\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\")) Wiedergaben FROM\r\ndata",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#1b4483",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Wiedergaben"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ pro Tag"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 21,
          "y": 11
        },
        "id": 195,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {},
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheMed\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    SPLIT(row_text, \"|\")[OFFSET(0)] AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS INT64) AS numDays,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS STRING) AS name1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(3)] AS INT64) AS Sendung1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(4)] AS STRING) AS name1930,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(5)] AS INT64) AS Sendung1930,\r\n  FROM split_rows\r\n),\r\ndata as (SELECT ROUND((Sendung1930/numDays)/100, 0)*100 as summe\r\n--SELECT '0'\r\nFROM parsed_rows\r\nWHERE DATE(date) = DATE($Jahr, CAST($Monat as INT64),01))\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\")) Wiedergaben FROM\r\ndata",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a31426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b74f00",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00749f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007171",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 0,
          "y": 14
        },
        "id": 183,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheVisits\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS mWeb,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS mApp,\r\n  FROM split_rows\r\n),\r\nsum_current AS(\r\n  SELECT mWeb as sumCurrent\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01)\r\n),\r\nsum_past AS(\r\n    SELECT mWeb as sumPast\r\nFROM parsed_rows\r\nWHERE date = DATE_SUB(DATE($Jahr, CAST($Monat as INT64),01), INTERVAL 1 MONTH)\r\n),\r\ndata as (SELECT\r\n  CONCAT(\r\n    CAST(\r\n      ROUND(((sumCurrent/sumPast)-1) * 100, 0) AS STRING\r\n    ),\r\n    \"%\"\r\n  ) as summe--, sumCurrent, sumPast\r\nFROM\r\n  sum_current,\r\n  sum_past )\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size_small - CHAR_LENGTH(CAST(summe as STRING))), summe) summe_${webColor} FROM\r\ndata\r\n\r\n  ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a31426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b74f00",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00749f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007171",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 3,
          "y": 14
        },
        "id": 211,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheAV\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS mWeb,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS mApp,\r\n  FROM split_rows\r\n),\r\nsum_current AS(\r\n  SELECT mWeb as sumCurrent\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01)\r\n),\r\nsum_past AS(\r\n    SELECT mWeb as sumPast\r\nFROM parsed_rows\r\nWHERE date = DATE_SUB(DATE($Jahr, CAST($Monat as INT64),01), INTERVAL 1 MONTH)\r\n),\r\ndata as (\r\nSELECT\r\n  CONCAT(\r\n    CAST(\r\n      ROUND(((sumCurrent/sumPast)-1) * 100, 0) AS STRING\r\n    ),\r\n    \"%\"\r\n  ) as summe\r\nFROM\r\n  sum_current,\r\n  sum_past as data )\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size_small - CHAR_LENGTH(CAST(summe as STRING))), summe) summe_${webColor} FROM\r\ndata\r\n\r\n  ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a31426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b74f00",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00749f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007171",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 6,
          "y": 14
        },
        "id": 212,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheVisits\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS mWeb,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS mApp,\r\n  FROM split_rows\r\n),\r\nsum_current AS(\r\n  SELECT mApp as sumCurrent\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01)\r\n),\r\nsum_past AS(\r\n    SELECT mApp as sumPast\r\nFROM parsed_rows\r\nWHERE date = DATE_SUB(DATE($Jahr, CAST($Monat as INT64),01), INTERVAL 1 MONTH)\r\n),\r\ndata as (SELECT\r\n  CONCAT(\r\n    CAST(\r\n      ROUND(((sumCurrent/sumPast)-1) * 100, 0) AS STRING\r\n    ),\r\n    \"%\"\r\n  ) as summe--, sumCurrent, sumPast\r\nFROM\r\n  sum_current,\r\n  sum_past )\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size_small - CHAR_LENGTH(CAST(summe as STRING))), summe) summe_${webColor} FROM\r\ndata\r\n\r\n  ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a31426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b74f00",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00749f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007171",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 9,
          "y": 14
        },
        "id": 213,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheAV\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS mWeb,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS mApp,\r\n  FROM split_rows\r\n),\r\nsum_current AS(\r\n  SELECT mApp as sumCurrent\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01)\r\n),\r\nsum_past AS(\r\n    SELECT mApp as sumPast\r\nFROM parsed_rows\r\nWHERE date = DATE_SUB(DATE($Jahr, CAST($Monat as INT64),01), INTERVAL 1 MONTH)\r\n),\r\ndata as (\r\nSELECT\r\n  CONCAT(\r\n    CAST(\r\n      ROUND(((sumCurrent/sumPast)-1) * 100, 0) AS STRING\r\n    ),\r\n    \"%\"\r\n  ) as summe\r\nFROM\r\n  sum_current,\r\n  sum_past as data )\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size_small - CHAR_LENGTH(CAST(summe as STRING))), summe) summe_${webColor} FROM\r\ndata\r\n\r\n  ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#193cb0",
              "mode": "fixed"
            },
            "decimals": 2,
            "displayName": "Veränderung",
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "current_value"
              },
              "properties": []
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 12,
          "y": 14
        },
        "id": 190,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheSoMe\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS INT64) AS Facebook,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS INT64) AS fbDays,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(3)] AS INT64) AS Instagram,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(4)] AS INT64) AS igDays,\r\n  FROM split_rows\r\n),\r\nsum_current AS(\r\n  SELECT Facebook/fbDays as sumCurrent\r\nFROM parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01)\r\n),\r\nsum_past AS(\r\n    SELECT Facebook/fbDays as sumPast\r\nFROM parsed_rows\r\nWHERE date = DATE_SUB(DATE($Jahr, CAST($Monat as INT64),01), INTERVAL 1 MONTH)\r\n),\r\ndata as (SELECT\r\n  CONCAT(\r\n    CAST(\r\n      ROUND(((sumCurrent/sumPast)-1) * 100, 0) AS STRING\r\n    ),\r\n    \"%\"\r\n  ) as summe--, sumCurrent, sumPast\r\nFROM\r\n  sum_current,\r\n  sum_past as data)\r\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_small - CHAR_LENGTH(CAST(summe as STRING))), summe) current_value FROM\r\ndata\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#81059d",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "min": 0,
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "differenz"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 15,
          "y": 14
        },
        "id": 191,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\n  SELECT \"$datenreiheSoMe\" AS data\n), split_rows AS (\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\n  FROM data_string,\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\n), parsed_rows AS (\n  SELECT\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS INT64) AS Facebook,\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS INT64) AS fbDays,\n    CAST(SPLIT(row_text, \"|\")[OFFSET(3)] AS INT64) AS Instagram,\n    CAST(SPLIT(row_text, \"|\")[OFFSET(4)] AS INT64) AS igDays,\n  FROM split_rows\n),\nsum_current AS(\n  SELECT Instagram/igDays as sumCurrent\nFROM parsed_rows\nWHERE date = DATE($Jahr, CAST($Monat as INT64),01)\n),\nsum_past AS(\n    SELECT Instagram/igDays as sumPast\nFROM parsed_rows\nWHERE date = DATE_SUB(DATE($Jahr, CAST($Monat as INT64),01), INTERVAL 1 MONTH)\n),\ndata as (SELECT\n  CONCAT(\n    CAST(\n      ROUND(((sumCurrent/sumPast)-1) * 100, 0) AS STRING\n    ),\n    \"%\"\n  ) as summe\nFROM\n  sum_current,\n  sum_past as data)\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_small - CHAR_LENGTH(CAST(summe as STRING))), summe) differenz FROM\ndata\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %",
                "page_impressions_unique": "Potentielle Reichweite"
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#0f3773",
              "mode": "fixed"
            },
            "decimals": 0,
            "displayName": "Veränderung",
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Wiedergaben"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 18,
          "y": 14
        },
        "id": 194,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheMed\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    SPLIT(row_text, \"|\")[OFFSET(0)] AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS INT64) AS numDays,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS STRING) AS name1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(3)] AS INT64) AS Sendung1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(4)] AS STRING) AS name1930,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(5)] AS INT64) AS Sendung1930,\r\n  FROM split_rows\r\n),\r\nsum_current AS(\r\n  SELECT Sendung1800/numDays as sumCurrent\r\nFROM parsed_rows\r\nWHERE DATE(date) = DATE($Jahr, CAST($Monat as INT64),01)\r\n),\r\nsum_past AS(\r\n    SELECT Sendung1800/numDays as sumPast\r\nFROM parsed_rows\r\nWHERE DATE(date) = DATE_SUB(DATE($Jahr, CAST($Monat as INT64),01), INTERVAL 1 MONTH)\r\n),\r\ndata as (SELECT\r\n  CONCAT(\r\n    CAST(\r\n      ROUND(((sumCurrent/sumPast)-1) * 100, 0) AS STRING\r\n    ),\r\n    \"%\"\r\n  ) as summe\r\nFROM\r\n  sum_current,\r\n  sum_past )\r\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_small - CHAR_LENGTH(CAST(summe as STRING))), summe) differenz FROM\r\ndata\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#0f3773",
              "mode": "fixed"
            },
            "decimals": 0,
            "displayName": "Veränderung",
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Wiedergaben"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Veränderung"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 21,
          "y": 14
        },
        "id": 196,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheMed\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    SPLIT(row_text, \"|\")[OFFSET(0)] AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS INT64) AS numDays,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS STRING) AS name1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(3)] AS INT64) AS Sendung1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(4)] AS STRING) AS name1930,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(5)] AS INT64) AS Sendung1930,\r\n  FROM split_rows\r\n),\r\nsum_current AS(\r\n  SELECT Sendung1930/numDays as sumCurrent\r\nFROM parsed_rows\r\nWHERE DATE(date) = DATE($Jahr, CAST($Monat as INT64),01)\r\n),\r\nsum_past AS(\r\n    SELECT Sendung1930/numDays as sumPast\r\nFROM parsed_rows\r\nWHERE DATE(date) = DATE_SUB(DATE($Jahr, CAST($Monat as INT64),01), INTERVAL 1 MONTH)\r\n),\r\ndata as (SELECT\r\n  CONCAT(\r\n    CAST(\r\n      ROUND(((sumCurrent/sumPast)-1) * 100, 0) AS STRING\r\n    ),\r\n    \"%\"\r\n  ) as summe\r\nFROM\r\n  sum_current,\r\n  sum_past)\r\n    SELECT  CONCAT(REPEAT(\" \", $filled_size_small - CHAR_LENGTH(CAST(summe as STRING))), summe) differenz FROM\r\ndata",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 12,
          "x": 0,
          "y": 16
        },
        "id": 218,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "* Quelle: Piano Analytics\r\n* Veränderungen jeweils zum Vormonat",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 6,
          "x": 12,
          "y": 16
        },
        "id": 168,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "* Quelle: Quintly\r\n* Instagram ohne Stories\r\n\r\n**Weiterführende Links**:\r\n\r\n* [Monatsbericht Instagram](https://daten.ndr.mobi/d/cdva33mw6bn5sd/social-media-report-instagram?orgId=1&from=now-6h&to=now&var-LRA=NDR&var-Monat=${MonatPicker:text}&var-Jahr=$Jahr)\r\n\r\n* [Monatsbericht Facebook](https://daten.ndr.mobi/d/fdulo028sdptsc/social-media-report-facebook?orgId=1&from=now-6h&to=now&var-LRA=NDR&var-Monat=${MonatPicker:text}&var-Jahr=$Jahr)",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 6,
          "x": 18,
          "y": 16
        },
        "id": 186,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "* Quelle: Piano Analytics, Holistics",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 12,
          "x": 0,
          "y": 18
        },
        "id": 124,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<sub>${hinweisWeb} ",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 22
        },
        "id": 102,
        "panels": [],
        "title": "KPI Boxes - TV ",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "text",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 12,
          "x": 2,
          "y": 23
        },
        "id": 109,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {},
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('NDR Fernsehen' )), 'NDR Fernsehen' )  \r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "text",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 7,
          "x": 17,
          "y": 23
        },
        "id": 223,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {},
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('NDR Radio' )), 'NDR Radio' )  \r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 25
        },
        "id": 221,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 0,
          "y": 26
        },
        "id": 226,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "none",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT '    '",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "TV_Hamburg"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "TV_Niedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "TV_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "TV_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 6,
          "x": 2,
          "y": 26
        },
        "id": 219,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('${Sendung1800}' )), '${Sendung1800}' )  TV_${webColor}\n\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "TV_Hamburg"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "TV_Niedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "TV_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "TV_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 6,
          "x": 8,
          "y": 26
        },
        "id": 220,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('${Sendung1930}' )), '${Sendung1930}' )  TV_${webColor}\n\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 3,
          "x": 14,
          "y": 26
        },
        "id": 129,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "none",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT '    '",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Radio_Hamburg"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Radio_Niedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Radio_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "Radio_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 7,
          "x": 17,
          "y": 26
        },
        "id": 222,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('${radioWelle}' )), '${radioWelle}' )  Radio_${webColor}\n\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 2,
          "y": 28
        },
        "id": 17,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH( 'TV 18:00')),  'TV 18:00')\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 2,
          "x": 6,
          "y": 28
        },
        "id": 136,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH('Veränderung')), 'Veränderung')  \n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 8,
          "y": 28
        },
        "id": 215,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH( 'TV 19:30')),  'TV 19:30')\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 2,
          "x": 12,
          "y": 28
        },
        "id": 216,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH('Veränderung')), 'Veränderung')  \n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 5,
          "x": 17,
          "y": 28
        },
        "id": 126,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\n\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH( 'Tagesreichweite')),  'Tagesreichweite')  \n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f4f4f4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 2,
          "x": 22,
          "y": 28
        },
        "id": 217,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 1
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\n  SELECT  CONCAT(REPEAT(\" \", $filled_size_headline_small - CHAR_LENGTH('Veränderung')), 'Veränderung')  \n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 0,
          "y": 30
        },
        "id": 224,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT 'BRD'",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 2,
          "y": 30
        },
        "id": 199,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  WITH data_string AS(\r\n  SELECT \"$datenreiheTVBRD\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS summe1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS summe1930,\r\n  FROM split_rows\r\n)\r\nSELECT \r\n  ROUND(summe1800*1000,0)*1000 as summe_${webColor}\r\nfrom parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat AS INT64), 01)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a31426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b74f00",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "short"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00749f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007171",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 6,
          "y": 30
        },
        "id": 201,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 30
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  WITH data_string AS(\r\n  SELECT \"$datenreiheTVBRD\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS summe1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS summe1930,\r\n  FROM split_rows\r\n),\r\ncurrent_data as (\r\n    SELECT \r\n  ROUND(summe1800*1000,0)*1000 as summe_current\r\nfrom parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat AS INT64), 01)\r\n),\r\npast_data as (\r\n    SELECT \r\n  ROUND(summe1800*1000,0)*1000 as summe_past\r\nfrom parsed_rows\r\nWHERE date = DATE_SUB(DATE($Jahr, CAST($Monat AS INT64), 01), INTERVAL 1 MONTH)\r\n)\r\nSELECT CONCAT(CAST(ROUND((((ROUND(summe_current/1000,0)*1000)/(ROUND(summe_past/1000,0)*1000))-1)*100,0) AS STRING),\"%\") as summe_${webColor}\r\nfrom current_data, past_data as data",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 8,
          "y": 30
        },
        "id": 203,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  WITH data_string AS(\r\n  SELECT \"$datenreiheTVBRD\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS summe1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS summe1930,\r\n  FROM split_rows\r\n)\r\nSELECT \r\n  ROUND(summe1930*1000,0)*1000 as summe_${webColor}\r\nfrom parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat AS INT64), 01)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a31426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b74f00",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "short"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00749f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007171",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 12,
          "y": 30
        },
        "id": 205,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 30
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  WITH data_string AS(\r\n  SELECT \"$datenreiheTVBRD\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS summe1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS summe1930,\r\n  FROM split_rows\r\n),\r\ncurrent_data as (\r\n    SELECT \r\n  ROUND(summe1930*1000,0)*1000 as summe_current\r\nfrom parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat AS INT64), 01)\r\n),\r\npast_data as (\r\n    SELECT \r\n  ROUND(summe1930*1000,0)*1000 as summe_past\r\nfrom parsed_rows\r\nWHERE date = DATE_SUB(DATE($Jahr, CAST($Monat AS INT64), 01), INTERVAL 1 MONTH)\r\n)\r\nSELECT CONCAT(CAST(ROUND((((ROUND(summe_current/1000,0)*1000)/(ROUND(summe_past/1000,0)*1000))-1)*100,0) AS STRING),\"%\") as summe_${webColor}\r\nfrom current_data, past_data as data",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 15,
          "y": 30
        },
        "id": 128,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT 'BRD'",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 17,
          "y": 30
        },
        "id": 132,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  trw_brd as summe_${webColor}\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_radio_trw` \r\nWHERE jahr = CASE WHEN  CAST($Monat as INT64) <= 3 THEN $Jahr-1 ELSE $Jahr END\r\nAND ma_nummer = CASE WHEN  CAST($Monat as INT64) <= 3 THEN \"II\" WHEN  CAST($Monat as INT64) <= 7 THEN \"I\" ELSE \"II\" END \r\nAND sender = \"$radioWelle\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a31426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b74f00",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "short"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00749f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007171",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 22,
          "y": 30
        },
        "id": 135,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with currentdata as (SELECT \r\n  trw_brd as summe_new\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_radio_trw`\r\nWHERE jahr = CASE WHEN  CAST($Monat as INT64) <= 3 THEN $Jahr-1 ELSE $Jahr END\r\nAND ma_nummer = CASE WHEN  CAST($Monat as INT64) <= 3 THEN \"II\" WHEN  CAST($Monat as INT64) <= 7 THEN \"I\" ELSE \"II\" END  AND sender = \"$radioWelle\"),\r\npastdata as (SELECT \r\n  trw_brd as summe_old\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_radio_trw`\r\nWHERE jahr = CASE WHEN  CAST($Monat as INT64) <= 3 THEN $Jahr-1 WHEN  CAST($Monat as INT64) <= 7 THEN $Jahr - 1 ELSE $Jahr END\r\nAND ma_nummer = CASE WHEN  CAST($Monat as INT64) <= 3 THEN \"I\" WHEN CAST($Monat as INT64) <= 7 THEN \"II\" ELSE \"I\" END \r\nAND sender = \"$radioWelle\")\r\nSELECT CONCAT(CAST(ROUND(((summe_new - summe_old)/summe_old)*100,0) AS STRING),\"%\") as summe_${webColor}\r\nFROM currentdata, pastdata as data",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 0,
          "y": 33
        },
        "id": 225,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT '${RedaktionKurz}'",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 2,
          "y": 33
        },
        "id": 200,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  WITH data_string AS(\r\n  SELECT \"$datenreiheTVReg\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS summe1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS summe1930,\r\n  FROM split_rows\r\n)\r\nSELECT \r\n  ROUND(summe1800*1000,0)*1000 as summe_${webColor}\r\nfrom parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat AS INT64), 01)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a31426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b74f00",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "short"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00749f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007171",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 6,
          "y": 33
        },
        "id": 202,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  WITH data_string AS(\r\n  SELECT \"$datenreiheTVReg\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS summe1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS summe1930,\r\n  FROM split_rows\r\n),\r\ncurrent_data as (\r\n    SELECT \r\n  ROUND(summe1800*1000,0)*1000 as summe_current\r\nfrom parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat AS INT64), 01)\r\n),\r\npast_data as (\r\n    SELECT \r\n  ROUND(summe1800*1000,0)*1000 as summe_past\r\nfrom parsed_rows\r\nWHERE date = DATE_SUB(DATE($Jahr, CAST($Monat AS INT64), 01), INTERVAL 1 MONTH)\r\n)\r\nSELECT CONCAT(CAST(ROUND((((ROUND(summe_current/1000,0)*1000)/(ROUND(summe_past/1000,0)*1000))-1)*100,0) AS STRING),\"%\") as summe_${webColor}\r\nfrom current_data, past_data as data",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "⌀ Seher"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 8,
          "y": 33
        },
        "id": 204,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  WITH data_string AS(\r\n  SELECT \"$datenreiheTVReg\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS summe1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS summe1930,\r\n  FROM split_rows\r\n)\r\nSELECT \r\n  ROUND(summe1930*1000,0)*1000 as summe_${webColor}\r\nfrom parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat AS INT64), 01)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a31426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b74f00",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "short"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00749f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007171",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 12,
          "y": 33
        },
        "id": 206,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  WITH data_string AS(\r\n  SELECT \"$datenreiheTVReg\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(0)] AS DATE) AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS summe1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS summe1930,\r\n  FROM split_rows\r\n),\r\ncurrent_data as (\r\n    SELECT \r\n  ROUND(summe1930*1000,0)*1000 as summe_current\r\nfrom parsed_rows\r\nWHERE date = DATE($Jahr, CAST($Monat AS INT64), 01)\r\n),\r\npast_data as (\r\n    SELECT \r\n  ROUND(summe1930*1000,0)*1000 as summe_past\r\nfrom parsed_rows\r\nWHERE date = DATE_SUB(DATE($Jahr, CAST($Monat AS INT64), 01), INTERVAL 1 MONTH)\r\n)\r\nSELECT CONCAT(CAST(ROUND((((ROUND(summe_current/1000,0)*1000)/(ROUND(summe_past/1000,0)*1000))-1)*100,0) AS STRING),\"%\") as summe_${webColor}\r\nfrom current_data, past_data as data",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 15,
          "y": 33
        },
        "id": 127,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT '${RedaktionKurz}'",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d11426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f06600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009ad2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#009f9f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 17,
          "y": 33
        },
        "id": 131,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  trw_bundesland as summe_${webColor}\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_radio_trw` \r\nWHERE jahr = CASE WHEN  CAST($Monat as INT64) <= 3 THEN $Jahr-1 ELSE $Jahr END\r\nAND ma_nummer = CASE WHEN  CAST($Monat as INT64) <= 3 THEN \"II\" WHEN  CAST($Monat as INT64) <= 7 THEN \"I\" ELSE \"II\" END \r\nAND sender = \"$radioWelle\"",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#2568b4",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Info"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0277bf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Sport"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2568b4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Hamburg"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a31426",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Niedersachsen"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b74f00",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_SchleswigHolstein"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "short"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00749f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_MecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007171",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "summe_Kultur"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "$Monat_abkuerzung $Jahr"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#b63929",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 22,
          "y": 33
        },
        "id": 134,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 16
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with currentdata as (SELECT \r\n  trw_bundesland as summe_new\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_radio_trw`\r\nWHERE jahr = CASE WHEN  CAST($Monat as INT64) <= 3 THEN $Jahr-1 ELSE $Jahr END\r\nAND ma_nummer = CASE WHEN  CAST($Monat as INT64) <= 3 THEN \"II\" WHEN  CAST($Monat as INT64) <= 7 THEN \"I\" ELSE \"II\" END  AND sender = \"$radioWelle\"),\r\npastdata as (SELECT \r\n  trw_bundesland as summe_old\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_radio_trw`\r\nWHERE jahr = CASE WHEN  CAST($Monat as INT64) <= 3 THEN $Jahr-1 WHEN CAST($Monat as INT64) <= 7 THEN $Jahr - 1 ELSE $Jahr END\r\nAND ma_nummer = CASE WHEN  CAST($Monat as INT64) <= 3 THEN \"I\" WHEN  CAST($Monat as INT64) <= 7 THEN \"II\" ELSE \"I\" END \r\nAND sender = \"$radioWelle\")\r\nSELECT CONCAT(CAST(ROUND(((summe_new - summe_old)/summe_old)*100,0) AS STRING),\"%\") as summe_${webColor}\r\nFROM currentdata, pastdata as data",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 10,
          "x": 2,
          "y": 36
        },
        "id": 144,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "* ${RedaktionKurz}: TV NDR regional in ${Redaktionen}\r\n* BRD: Regionalsender ${Redaktionen} bundesweit\r\n\r\n* Veränderung jeweils zum Vormonat\r\n",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 7,
          "x": 17,
          "y": 36
        },
        "id": 86,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "* Veränderung gegenüber der letzten ma Audio\r\n* Daten der MA Audio I stehen in diesem Dashboard jeweils ab April zur Verfügung, Daten der MA Audio II ab August.",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 39
        },
        "id": 142,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 41
        },
        "id": 36,
        "panels": [],
        "title": "Graphs",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "text",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 42
        },
        "id": 120,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 40
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECt \"Trends\"",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": " "
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "custom": {
              "thresholdsStyle": {
                "mode": "color",
                "thresholds": []
              }
            },
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 16,
          "y": 44
        },
        "id": 158,
        "options": {
          "alwaysVisibleFilter": false,
          "autoScroll": false,
          "collapsedByDefault": false,
          "customValue": true,
          "displayMode": "minimize",
          "emptyValue": false,
          "favorites": {
            "addQuery": {},
            "datasource": "",
            "deleteQuery": {},
            "enabled": false,
            "getQuery": {},
            "storage": "browser"
          },
          "filter": false,
          "groupSelection": false,
          "header": true,
          "isUseLocalTime": false,
          "minimizeOutputFormat": "text",
          "padding": 10,
          "persistent": true,
          "saveSelectedGroup": false,
          "saveSelectedGroupKey": "",
          "showGroupTotal": false,
          "showLabel": false,
          "showName": false,
          "showResetButton": false,
          "showTotal": false,
          "statusSort": false,
          "sticky": false,
          "tabsInOrder": true,
          "variable": "rueckblickVar"
        },
        "pluginVersion": "3.6.0",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "Trend Zeitraum in Monaten",
        "transparent": true,
        "type": "volkovlabs-variable-panel"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 46
        },
        "id": 50,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 10,
          "w": 8,
          "x": 0,
          "y": 47
        },
        "id": 181,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "var categoryColors = {\n  //'Info': { 'Web': '#0277BF', 'App': '#a3c8ef' },\n  //'Sport': { 'Web': '#2568b4', 'App': '#abc3ed' },\n  'Hamburg': { 'Web': '#D11426', 'App': '#faaea0' },\n  'Niedersachsen': { 'Web': '#F06600', 'App': '#ffbe96' },\n  'Schleswig-Holstein': { 'Web': '#009AD2', 'App': '#9bd5f3' },\n  'Mecklenburg-Vorpommern': { 'Web': '#009F9F', 'App': '#90dad8' },\n  //'Kultur': { 'Web': '#b63929', 'App': '#f1b09f' },\n};\n\nvar months = {\n  '01': 'Jan. ',\n  '02': 'Feb. ',\n  '03': 'Mär. ',\n  '04': 'Apr. ',\n  '05': 'Mai ',\n  '06': 'Jun. ',\n  '07': 'Jul. ',\n  '08': 'Aug. ',\n  '09': 'Sep. ',\n  '10': 'Okt. ',\n  '11': 'Nov. ',\n  '12': 'Dez. ',\n};\n\n\n// Initialen Daten holen\nconst redaktionField = context.panel.data.series[0].fields.find((f) => f.name === 'redaktion');\nconst kurzField = context.panel.data.series[0].fields.find((f) => f.name === 'kurz');\nconst appField = context.panel.data.series[0].fields.find((f) => f.name === 'App');\nconst webField = context.panel.data.series[0].fields.find((f) => f.name === 'Web');\nconst timeField = context.panel.data.series[0].fields.find((f) => f.name === 'time');\n\nlet redaktion = [];\nlet kurz = [];\nlet app = [];\nlet web = [];\nlet time = [];\n\nredaktion = redaktionField.values.toArray();\nkurz = kurzField.values.toArray();\napp = appField.values.toArray();\nweb = webField.values.toArray();\ntime = timeField.values.toArray();\n\nlet colorIndicator = redaktion[0];\n\nlet formattedTime = [];\ntime.forEach(function (item) {\n  let oldDate = item;\n  let newDate = months[oldDate.slice(5, 7)] + oldDate.slice(0, 4);\n  //let newDate = oldDate.slice(8) + \".\" + oldDate.slice(5, 7) + \".\" + oldDate.slice(0, 4);\n  formattedTime.push(newDate);\n});\n\n\nconst series = [\n  {\n    name: 'App',\n    type: 'line',\n    colorBy: 'series',\n    color: categoryColors[colorIndicator]['App'],\n    data: time.map((t, i) => {\n      const v = app[i];\n      return {\n        value: v,\n        name: t,\n      }\n    }),\n    //smooth: 0.3,\n  },\n  {\n    name: 'Web',\n    type: 'line',\n    colorBy: 'series',\n    color: categoryColors[colorIndicator]['Web'],\n    data: time.map((t, i) => {\n      const v = web[i];\n      return {\n        value: v,\n        name: t,\n      };\n    }),\n    //smooth: 0.1,\n  }\n];\n\nreturn {\n  backgroundColor: 'transparent',\n  title: {\n    text: kurz[0] + ' | Web vs App | ⌀ Visits pro Tag | BRD', //+ colorIndicator,\n    textStyle: {\n      fontSize: 14\n    },\n  },\n  tooltip: {\n    trigger: 'axis',\n    valueFormatter: function (value) {\n      let labelContent = '';\n      let number = value.toFixed(0);\n      let formattedNumber = new Intl.NumberFormat('de-DE').format(number);;\n      labelContent = formattedNumber;\n      return labelContent\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '0',\n  },\n  xAxis: {\n    data: formattedTime,\n    show: true,\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    }\n  },\n  yAxis:\n  {\n    type: 'value',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    }\n  },\n  series,\n  toolbox: {\n    right: 25,\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        show: false,\n      },\n      magicType: {\n        type: ['line', 'bar']\n      },\n      saveAsImage: {}\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '5%',\n    top: 50,\n    bottom: 25,\n    containLabel: true,\n  },\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 0,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheVisits\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    SPLIT(row_text, \"|\")[OFFSET(0)] AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS mWeb,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS mApp,\r\n  FROM split_rows\r\n)\r\nSELECT \r\n  date as time, \r\n  ROUND(mWeb/1000,0)*1000 as Web, \r\n  ROUND(mApp/1000, 0)*1000 as App, \r\n  '$Redaktionen' as redaktion,\r\n  '$RedaktionKurz' as kurz\r\n\r\nFROM parsed_rows\r\n",
            "refId": "Visits Web",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 10,
          "w": 8,
          "x": 8,
          "y": 47
        },
        "id": 178,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "var categoryColors = {\n  //'Info': { 'Web': '#0277BF', 'App': '#a3c8ef' },\n  //'Sport': { 'Web': '#2568b4', 'App': '#abc3ed' },\n  'Hamburg': { 'Web': '#D11426', 'App': '#faaea0' },\n  'Niedersachsen': { 'Web': '#F06600', 'App': '#ffbe96' },\n  'Schleswig-Holstein': { 'Web': '#009AD2', 'App': '#9bd5f3' },\n  'Mecklenburg-Vorpommern': { 'Web': '#009F9F', 'App': '#90dad8' },\n  //'Kultur': { 'Web': '#b63929', 'App': '#f1b09f' },\n};\n\nvar months = {\n  '01': 'Jan. ',\n  '02': 'Feb. ',\n  '03': 'Mär. ',\n  '04': 'Apr. ',\n  '05': 'Mai ',\n  '06': 'Jun. ',\n  '07': 'Jul. ',\n  '08': 'Aug. ',\n  '09': 'Sep. ',\n  '10': 'Okt. ',\n  '11': 'Nov. ',\n  '12': 'Dez. ',\n};\n\n\n// Initialen Daten holen\nconst redaktionField = context.panel.data.series[0].fields.find((f) => f.name === 'redaktion');\nconst kurzField = context.panel.data.series[0].fields.find((f) => f.name === 'kurz');\nconst appField = context.panel.data.series[0].fields.find((f) => f.name === 'App');\nconst webField = context.panel.data.series[0].fields.find((f) => f.name === 'Web');\nconst timeField = context.panel.data.series[0].fields.find((f) => f.name === 'time');\n\nlet redaktion = [];\nlet kurz = [];\nlet app = [];\nlet web = [];\nlet time = [];\n\nredaktion = redaktionField.values.toArray();\nkurz = kurzField.values.toArray();\napp = appField.values.toArray();\nweb = webField.values.toArray();\ntime = timeField.values.toArray();\n\nlet colorIndicator = redaktion[0];\n\nlet formattedTime = [];\ntime.forEach(function (item) {\n  let oldDate = item;\n  let newDate = months[oldDate.slice(5, 7)] + oldDate.slice(0, 4);\n  //let newDate = oldDate.slice(8) + \".\" + oldDate.slice(5, 7) + \".\" + oldDate.slice(0, 4);\n  formattedTime.push(newDate);\n});\n\n\nconst series = [\n  {\n    name: 'App',\n    type: 'line',\n    colorBy: 'series',\n    color: categoryColors[colorIndicator]['App'],\n    data: time.map((t, i) => {\n      const v = app[i];\n      return {\n        value: v,\n        name: t,\n      }\n    }),\n    //smooth: 0.3,\n  },\n  {\n    name: 'Web',\n    type: 'line',\n    colorBy: 'series',\n    color: categoryColors[colorIndicator]['Web'],\n    data: time.map((t, i) => {\n      const v = web[i];\n      return {\n        value: v,\n        name: t,\n      };\n    }),\n    //smooth: 0.1,\n  }\n];\n\nreturn {\n  backgroundColor: 'transparent',\n  title: {\n    text: kurz[0] + ' | Web vs App | ⌀ Wiedergaben pro Tag | BRD',// + colorIndicator,\n    textStyle: {\n      fontSize: 14\n    },\n  },\n  tooltip: {\n    trigger: 'axis',\n    valueFormatter: function (value) {\n      let labelContent = '';\n      let number = value.toFixed(0);\n      let formattedNumber = new Intl.NumberFormat('de-DE').format(number);;\n      labelContent = formattedNumber;\n      return labelContent\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '0',\n  },\n  xAxis: {\n    data: formattedTime,\n    show: true,\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    }\n  },\n  yAxis:\n  {\n    type: 'value',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    }\n  },\n  series,\n  toolbox: {\n    right: 25,\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        show: false,\n      },\n      magicType: {\n        type: ['line', 'bar']\n      },\n      saveAsImage: {}\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '5%',\n    top: 50,\n    bottom: 25,\n    containLabel: true,\n  },\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 0,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheAV\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    SPLIT(row_text, \"|\")[OFFSET(0)] AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS mWeb,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS mApp,\r\n  FROM split_rows\r\n)\r\nSELECT \r\n  date as time, \r\n  ROUND(mWeb/1000,0)*1000 as Web, \r\n  ROUND(mApp/1000, 0)*1000 as App, \r\n  '$Redaktionen' as redaktion,\r\n    '$RedaktionKurz' as kurz\r\n\r\nFROM parsed_rows\r\n",
            "refId": "Visits Web",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 10,
          "w": 8,
          "x": 16,
          "y": 47
        },
        "id": 187,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 689
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "// Check if there is any da\n\n// If there's no data, return an empty object to hide the chart\nvar months = {\n  '01': 'Jan. ',\n  '02': 'Feb. ',\n  '03': 'Mär. ',\n  '04': 'Apr. ',\n  '05': 'Mai ',\n  '06': 'Jun. ',\n  '07': 'Jul. ',\n  '08': 'Aug. ',\n  '09': 'Sep. ',\n  '10': 'Okt. ',\n  '11': 'Nov. ',\n  '12': 'Dez. ',\n};\n\n\n\nconst fbField = context.panel.data.series[0].fields.find((f) => f.name === 'Facebook');\nconst igField = context.panel.data.series[0].fields.find((f) => f.name === 'Instagram');\nconst timeField = context.panel.data.series[0].fields.find((f) => f.name === 'time');\nconst redField = context.panel.data.series[0].fields.find((f) => f.name === 'Redaktion');\n\nif (!igField) {\n  return {};\n}\n\nlet fb = [];\nlet ig = [];\nlet time = [];\n\nfb = fbField.values.toArray();\nig = igField.values.toArray();\ntime = timeField.values.toArray();\nred = redField.values.toArray();\n\nlet formattedTime = [];\ntime.forEach(function (item) {\n  let oldDate = item;\n  //let newDate = oldDate.slice(8) + \".\" + oldDate.slice(5, 7) + \".\" + oldDate.slice(0, 4);\n  let newDate = months[oldDate.slice(5, 7)] + oldDate.slice(0, 4);\n  formattedTime.push(newDate);\n});\n\nconst series = [\n  {\n    name: 'Facebook',\n    type: 'line',\n    colorBy: 'series',\n    color: '#3C69FF',\n    data: time.map((t, i) => {\n      const v = fb[i];\n      return {\n        value: v,\n        name: t,\n      }\n    }),\n    //smooth: 0.3,\n  },\n  {\n    name: 'Instagram',\n    type: 'line',\n    colorBy: 'series',\n    color: '#C400F0',\n    data: time.map((t, i) => {\n      const v = ig[i];\n      return {\n        value: v,\n        name: t,\n      };\n    }),\n    //smooth: 0.3,\n  }\n];\n\nreturn {\n  backgroundColor: 'transparent',\n  title: {\n    text: 'Facebook vs Instagram | ⌀ Interaktionen pro Tag | BRD ',// + red[0],\n    textStyle: {\n      fontSize: 14\n    },\n  },\n  tooltip: {\n    trigger: 'axis',\n    valueFormatter: function (value) {\n      let labelContent = '';\n      let number = value.toFixed(0);\n      let formattedNumber = new Intl.NumberFormat('de-DE').format(number);;\n      labelContent = formattedNumber;\n      return labelContent\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '0',\n  },\n  xAxis: {\n    data: formattedTime,\n    show: true,\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    }\n  },\n  yAxis:\n  {\n    type: 'value',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    }\n  },\n  series,\n  toolbox: {\n    right: 25,\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        show: false,\n      },\n      magicType: {\n        type: ['line', 'bar']\n      },\n      saveAsImage: {}\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '5%',\n    top: 50,\n    bottom: 25,\n    containLabel: true,\n  },\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 0,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheSoMe\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    SPLIT(row_text, \"|\")[OFFSET(0)] AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS INT64) AS Facebook,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS INT64) AS fbDays,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(3)] AS INT64) AS Instagram,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(4)] AS INT64) AS igDays,\r\n  FROM split_rows\r\n)\r\nSELECT \r\n  date as time, \r\n  ROUND((Facebook/fbDays)/100,0)*100 as Facebook, \r\n  ROUND((Instagram/igDays)/100,0)*100 as Instagram, \r\n  '$Redaktionen' as Redaktion\r\nFROM parsed_rows\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 0,
          "y": 57
        },
        "id": 170,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<sub>${textVisits}",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 8,
          "y": 57
        },
        "id": 171,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<sub>${textAV}",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 16,
          "y": 57
        },
        "id": 169,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<sub>${textSocial}",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 10,
          "w": 8,
          "x": 0,
          "y": 59
        },
        "id": 197,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "var categoryColors = {\n  //'Info': { '1930': '#0277BF', '1800': '#a3c8ef' },\n  //'Sport': { '1930': '#2568b4', '1800': '#abc3ed' },\n  'Hamburg': { '1930': '#D11426', '1800': '#faaea0' },\n  'Niedersachsen': { '1930': '#F06600', '1800': '#ffbe96' },\n  'Schleswig-Holstein': { '1930': '#009AD2', '1800': '#9bd5f3' },\n  'Mecklenburg-Vorpommern': { '1930': '#009F9F', '1800': '#90dad8' },\n  //'Kultur': { '1930': '#b63929', '1800': '#f1b09f' },\n};\n\nvar months = {\n  '01': 'Jan. ',\n  '02': 'Feb. ',\n  '03': 'Mär. ',\n  '04': 'Apr. ',\n  '05': 'Mai ',\n  '06': 'Jun. ',\n  '07': 'Jul. ',\n  '08': 'Aug. ',\n  '09': 'Sep. ',\n  '10': 'Okt. ',\n  '11': 'Nov. ',\n  '12': 'Dez. ',\n};\n\n\n// Initialen Daten holen\nconst redaktionField = context.panel.data.series[0].fields.find((f) => f.name === 'redaktion');\nconst appField = context.panel.data.series[0].fields.find((f) => f.name === 'summe1800');\nconst webField = context.panel.data.series[0].fields.find((f) => f.name === 'summe1930');\nconst timeField = context.panel.data.series[0].fields.find((f) => f.name === 'time');\n\nlet redaktion = [];\nlet app = [];\nlet web = [];\nlet time = [];\n\nredaktion = redaktionField.values.toArray();\napp = appField.values.toArray();\nweb = webField.values.toArray();\ntime = timeField.values.toArray();\n\nlet colorIndicator = redaktion[0];\n\nlet formattedTime = [];\ntime.forEach(function (item) {\n  let oldDate = item;\n  let newDate = months[oldDate.slice(5, 7)] + oldDate.slice(2, 4);\n  formattedTime.push(newDate);\n});\n\n\nconst series = [\n  {\n    name: 'TV 18:00',\n    type: 'line',\n    colorBy: 'series',\n    color: categoryColors[colorIndicator]['1800'],\n    data: time.map((t, i) => {\n      const v = app[i];\n      return {\n        value: v,\n        name: t,\n      }\n    }),\n    //smooth: 0.3,\n  },\n  {\n    name: 'TV 19:30',\n    type: 'line',\n    colorBy: 'series',\n    color: categoryColors[colorIndicator]['1930'],\n    data: time.map((t, i) => {\n      const v = web[i];\n      return {\n        value: v,\n        name: t,\n      };\n    }),\n    //smooth: 0.3,\n  }\n];\n\nreturn {\n  backgroundColor: 'transparent',\n  title: {\n    text: 'TV 18:00 vs. 19:30 | ⌀ Seher | BRD',\n    textStyle: {\n      fontSize: 14\n    },\n  },\n  tooltip: {\n    trigger: 'axis',\n    valueFormatter: function (value) {\n      let labelContent = '';\n      let number = value.toFixed(0);\n      let formattedNumber = new Intl.NumberFormat('de-DE').format(number);;\n      labelContent = formattedNumber;\n      return labelContent\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '0',\n  },\n  xAxis: {\n    data: formattedTime,\n    show: true,\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    }\n  },\n  yAxis:\n  {\n    type: 'value',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    }\n  },\n  series,\n  toolbox: {\n    right: 25,\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        show: false,\n      },\n      magicType: {\n        type: ['line', 'bar']\n      },\n      saveAsImage: {}\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '5%',\n    top: 60,\n    bottom: 25,\n    containLabel: true,\n  },\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 0,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheTVBRD\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    SPLIT(row_text, \"|\")[OFFSET(0)] AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS summe1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS summe1930,\r\n  FROM split_rows\r\n)\r\nSELECT \r\n  date as time, \r\n  ROUND(IFNULL(summe1800, 0) * 1000, 0) * 1000 as summe1800,\r\n  ROUND(IFNULL(summe1930, 0) * 1000, 0) * 1000 as summe1930,\r\n  '$Redaktionen' as redaktion\r\n\r\nFROM parsed_rows\r\n",
            "refId": "TV BRD",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 10,
          "w": 8,
          "x": 8,
          "y": 59
        },
        "id": 198,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "var categoryColors = {\n  //'Info': { '1930': '#0277BF', '1800': '#a3c8ef' },\n  //'Sport': { '1930': '#2568b4', '1800': '#abc3ed' },\n  'Hamburg': { '1930': '#D11426', '1800': '#faaea0' },\n  'Niedersachsen': { '1930': '#F06600', '1800': '#ffbe96' },\n  'Schleswig-Holstein': { '1930': '#009AD2', '1800': '#9bd5f3' },\n  'Mecklenburg-Vorpommern': { '1930': '#009F9F', '1800': '#90dad8' },\n  //'Kultur': { '1930': '#b63929', '1800': '#f1b09f' },\n};\n\nvar months = {\n  '01': 'Jan. ',\n  '02': 'Feb. ',\n  '03': 'Mär. ',\n  '04': 'Apr. ',\n  '05': 'Mai ',\n  '06': 'Jun. ',\n  '07': 'Jul. ',\n  '08': 'Aug. ',\n  '09': 'Sep. ',\n  '10': 'Okt. ',\n  '11': 'Nov. ',\n  '12': 'Dez. ',\n};\n\n\n// Initialen Daten holen\nconst redaktionField = context.panel.data.series[0].fields.find((f) => f.name === 'redaktion');\nconst appField = context.panel.data.series[0].fields.find((f) => f.name === 'summe1800');\nconst webField = context.panel.data.series[0].fields.find((f) => f.name === 'summe1930');\nconst timeField = context.panel.data.series[0].fields.find((f) => f.name === 'time');\nconst kurzField = context.panel.data.series[0].fields.find((f) => f.name === 'kurz');\n\nlet redaktion = [];\nlet kurz = [];\nlet app = [];\nlet web = [];\nlet time = [];\n\nredaktion = redaktionField.values.toArray();\nkurz = kurzField.values.toArray();\napp = appField.values.toArray();\nweb = webField.values.toArray();\ntime = timeField.values.toArray();\n\nlet colorIndicator = redaktion[0];\n\nlet formattedTime = [];\ntime.forEach(function (item) {\n  let oldDate = item;\n  let newDate = months[oldDate.slice(5, 7)] + oldDate.slice(2, 4);\n  formattedTime.push(newDate);\n});\n\n\nconst series = [\n  {\n    name: 'TV 18:00',\n    type: 'line',\n    colorBy: 'series',\n    color: categoryColors[colorIndicator]['1800'],\n    data: time.map((t, i) => {\n      const v = app[i];\n      return {\n        value: v,\n        name: t,\n      }\n    }),\n    //smooth: 0.3,\n  },\n  {\n    name: 'TV 19:30',\n    type: 'line',\n    colorBy: 'series',\n    color: categoryColors[colorIndicator]['1930'],\n    data: time.map((t, i) => {\n      const v = web[i];\n      return {\n        value: v,\n        name: t,\n      };\n    }),\n    //smooth: 0.3,\n  }\n];\n\nreturn {\n  backgroundColor: 'transparent',\n  title: {\n    text: 'TV 18:00 vs. 19:30 | ⌀ Seher | ' + kurz[0],\n    textStyle: {\n      fontSize: 14\n    },\n  },\n  tooltip: {\n    trigger: 'axis',\n    valueFormatter: function (value) {\n      let labelContent = '';\n      let number = value.toFixed(0);\n      let formattedNumber = new Intl.NumberFormat('de-DE').format(number);;\n      labelContent = formattedNumber;\n      return labelContent\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '0',\n  },\n  xAxis: {\n    data: formattedTime,\n    show: true,\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    }\n  },\n  yAxis:\n  {\n    type: 'value',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    }\n  },\n  series,\n  toolbox: {\n    right: 25,\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        show: false,\n      },\n      magicType: {\n        type: ['line', 'bar']\n      },\n      saveAsImage: {}\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '5%',\n    top: 60,\n    bottom: 25,\n    containLabel: true,\n  },\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 0,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheTVReg\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    SPLIT(row_text, \"|\")[OFFSET(0)] AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS FLOAT64) AS summe1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS FLOAT64) AS summe1930,\r\n  FROM split_rows\r\n)\r\nSELECT \r\n  date as time, \r\n  ROUND(IFNULL(summe1800, 0) * 1000, 0) * 1000 as summe1800,\r\n  ROUND(IFNULL(summe1930, 0) * 1000, 0) * 1000 as summe1930,\r\n  '$Redaktionen' as redaktion,\r\n    '$RedaktionKurz' as kurz\r\n\r\nFROM parsed_rows\r\n",
            "refId": "TV BRD",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 10,
          "w": 8,
          "x": 16,
          "y": 59
        },
        "id": 192,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "var categoryColors = {\n  'Info': { 'Sendung1800': '#0277BF', 'Sendung1930': '#a3c8ef' },\n  'Sport': { 'Sendung1800': '#2568b4', 'Sendung1930': '#abc3ed' },\n  'Hamburg': { 'Sendung1800': '#D11426', 'Sendung1930': '#faaea0' },\n  'Niedersachsen': { 'Sendung1800': '#F06600', 'Sendung1930': '#ffbe96' },\n  'Schleswig-Holstein': { 'Sendung1800': '#009AD2', 'Sendung1930': '#9bd5f3' },\n  'Mecklenburg-Vorpommern': { 'Sendung1800': '#009F9F', 'Sendung1930': '#90dad8' },\n  'Kultur': { 'Sendung1800': '#b63929', 'Sendung1930': '#f1b09f' },\n};\n\nvar months = {\n  '01': 'Jan. ',\n  '02': 'Feb. ',\n  '03': 'Mär. ',\n  '04': 'Apr. ',\n  '05': 'Mai ',\n  '06': 'Jun. ',\n  '07': 'Jul. ',\n  '08': 'Aug. ',\n  '09': 'Sep. ',\n  '10': 'Okt. ',\n  '11': 'Nov. ',\n  '12': 'Dez. ',\n};\n\n\n// Initialen Daten holen\nconst redaktionField = context.panel.data.series[0].fields.find((f) => f.name === 'redaktion');\nconst s1800Field = context.panel.data.series[0].fields.find((f) => f.name === 'name1800');\nconst s1930Field = context.panel.data.series[0].fields.find((f) => f.name === 'name1930');\nconst appField = context.panel.data.series[0].fields.find((f) => f.name === 'Sendung1930');\nconst webField = context.panel.data.series[0].fields.find((f) => f.name === 'Sendung1800');\nconst timeField = context.panel.data.series[0].fields.find((f) => f.name === 'time');\n\nlet redaktion = [];\nlet s1800 = [];\nlet s1930 = [];\nlet app = [];\nlet web = [];\nlet time = [];\n\nredaktion = redaktionField.values.toArray();\ns1800 = s1800Field.values.toArray();\ns1930 = s1930Field.values.toArray();\napp = appField.values.toArray();\nweb = webField.values.toArray();\ntime = timeField.values.toArray();\n\nlet colorIndicator = redaktion[0];\n\nlet formattedTime = [];\ntime.forEach(function (item) {\n  let oldDate = item;\n  let newDate = months[oldDate.slice(5, 7)] + oldDate.slice(0, 4);\n  //let newDate = oldDate.slice(8) + \".\" + oldDate.slice(5, 7) + \".\" + oldDate.slice(0, 4);\n  formattedTime.push(newDate);\n});\n\n\nconst series = [\n  {\n    name: s1930[0],\n    type: 'line',\n    colorBy: 'series',\n    //color: categoryColors[colorIndicator]['Sendung1930'],\n    color: '#2865BF',\n    data: time.map((t, i) => {\n      const v = app[i];\n      return {\n        value: v,\n        name: t,\n      }\n    }),\n    //data: s1930\n    //smooth: 0.3,\n    lineStyle: {\n      width: 2\n    }\n  },\n  {\n    name: s1800[0],\n    type: 'line',\n    colorBy: 'series',\n    //color: categoryColors[colorIndicator]['Sendung1800'],\n    color: '#9DC1FA',\n    data: time.map((t, i) => {\n      const v = web[i];\n      return {\n        value: v,\n        name: t,\n      };\n    }),\n    //data: s1800\n    //smooth: 0.3,\n    lineStyle: {\n      width: 2\n    }\n  }\n];\n\nreturn {\n  backgroundColor: 'transparent',\n  title: {\n    text: 'MDT | ' + s1800[0] + ' vs. ' + s1930[0] + ' \\n⌀ Wiedergaben pro Tag | BRD',\n    textStyle: {\n      fontSize: 14,\n      lineHeight: 20\n    },\n  },\n  tooltip: {\n    trigger: 'axis',\n    valueFormatter: function (value) {\n      let labelContent = '';\n      let number = value.toFixed(0);\n      let formattedNumber = new Intl.NumberFormat('de-DE').format(number);;\n      labelContent = formattedNumber;\n      return labelContent\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '0',\n  },\n  xAxis: {\n    data: formattedTime,\n    show: true,\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    }\n  },\n  yAxis:\n  {\n    type: 'value',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    }\n  },\n  series,\n  toolbox: {\n    right: 25,\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        show: false,\n      },\n      magicType: {\n        type: ['line', 'bar']\n      },\n      saveAsImage: {}\n    }\n  },\n  /*title: {\n    show: true,\n    text: 'aktuell stehen in Minerva noch \\nkeine Mediatheks-Daten zur \\nVerfügung',\n    textStyle: {\n      fontWeight: 'normal',\n      fontSize: 32,\n      //fontStyle: 'oblique',\n      //color: categoryColors[colorIndicator]['Sendung1930']\n      //color: '#728cb5',\n    },\n    textAlign: 'auto',\n    //padding: [70,200]\n    left: 'center',\n    top: 'middle'\n\n  },*/\n  grid: {\n    left: '2%',\n    right: '5%',\n    top: 60,\n    bottom: 25,\n    containLabel: true,\n  },\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 0,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH data_string AS(\r\n  SELECT \"$datenreiheMed\" AS data\r\n), split_rows AS (\r\n  SELECT TRIM(REPLACE(part, \"(\", \"\"), \")\") AS row_text\r\n  FROM data_string,\r\n  UNNEST(SPLIT(data, \" -ni- \")) AS part\r\n), parsed_rows AS (\r\n  SELECT\r\n    SPLIT(row_text, \"|\")[OFFSET(0)] AS date,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(1)] AS INT64) AS numDays,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(2)] AS STRING) AS name1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(3)] AS INT64) AS Sendung1800,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(4)] AS STRING) AS name1930,\r\n    CAST(SPLIT(row_text, \"|\")[OFFSET(5)] AS INT64) AS Sendung1930,\r\n  FROM split_rows\r\n)\r\nSELECT \r\n  date as time, \r\n  ROUND((Sendung1800/numDays)/100,0)*100 as Sendung1800, \r\n  ROUND((Sendung1930/numDays)/100,0)*100 as Sendung1930, \r\n  name1800,\r\n  name1930,\r\n  '$Redaktionen' as redaktion\r\nFROM parsed_rows\r\nORDER BY time ASC\r\n",
            "refId": "Visits Web",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 0,
          "y": 69
        },
        "id": 172,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<sub>${textTV}",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 8,
          "y": 69
        },
        "id": 173,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<sub>${textTV}",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 16,
          "y": 69
        },
        "id": 174,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<sub>${textMed}",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023I_Niedersachsen"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023II_Niedersachsen"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024I_Niedersachsen"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024II_Niedersachsen"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023I_Hamburg"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023II_Hamburg"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024I_Hamburg"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024II_Hamburg"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023I_SchleswigHolstein"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023II_SchleswigHolstein"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024I_SchleswigHolstein"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024II_SchleswigHolstein"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023I_MecklenburgVorpommern"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023II_MecklenburgVorpommern"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024I_MecklenburgVorpommern"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024II_MecklenburgVorpommern"
              },
              "properties": []
            }
          ]
        },
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 0,
          "y": 71
        },
        "id": 152,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto"
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "var categoryColors = {\n  //'Hamburg': { 'II': '#D11426', 'I': '#faaea0' },\n  'Hamburg': { 'II': '#D11426', 'I': '#D11426' },\n  //'Niedersachsen': { 'II': '#F06600', 'I': '#ffbe96' },\n  'Niedersachsen': { 'II': '#F06600', 'I': '#F06600' },\n  //'Schleswig-Holstein': { 'II': '#009AD2', 'I': '#9bd5f3' },\n  'Schleswig-Holstein': { 'II': '#009AD2', 'I': '#009AD2' },\n  //'Mecklenburg-Vorpommern': { 'II': '#009F9F', 'I': '#90dad8' },\n  'Mecklenburg-Vorpommern': { 'II': '#009F9F', 'I': '#009F9F' },\n};\n\n// Initialen Daten holen\nconst redaktionField = context.panel.data.series[0].fields.find((f) => f.name === 'redaktion');\nconst senderField = context.panel.data.series[0].fields.find((f) => f.name === 'sender');\nconst trwField = context.panel.data.series[0].fields.find((f) => f.name === 'tagesreichweite_brd');\nconst maField = context.panel.data.series[0].fields.find((f) => f.name === 'ma_nummer');\nconst jahrField = context.panel.data.series[0].fields.find((f) => f.name === 'jahr');\n\nlet redaktion = [];\nlet sender = [];\nlet trw = [];\nlet ma = [];\nlet jahr = [];\n\nredaktion = redaktionField.values.toArray();\nsender = senderField.values.toArray();\ntrw = trwField.values.toArray();\nma = maField.values.toArray();\njahr = jahrField.values.toArray();\n\nlet labels = [];\nlet maIndicator = [];\n\nmaIndicator = sender.map((t, i) => {\n  const m = ma[i];\n  const w = redaktion[i];\n  return categoryColors[redaktion[i]][ma[i]]\n});\n\n\nlabels = trw.map((t, i) => {\n  const j = jahr[i];\n  const m = ma[i];\n  return \"ma \" + j + \" Audio \" + m\n});\n\nlet colorIndicator = redaktion[0];\n\n\nconst series = [\n  {\n    //name: 'App',\n    type: 'bar',\n    colorBy: 'data',\n    //color: categoryColors[colorIndicator]['Web'],\n    color: maIndicator,\n    data: trw,\n  },\n];\n\nreturn {\n  backgroundColor: 'transparent',\n  title: {\n    text: sender[0] + ' | Tagesreichweite Mo-Fr Radio | BRD',\n    textStyle: {\n      fontSize: 14\n    },\n  },\n  tooltip: {\n    trigger: 'item',\n    valueFormatter: function (value) {\n      let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n      return formattedNumber\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    show: true\n    //bottom: '0',\n  },\n  xAxis: {\n    data: labels,\n    show: true,\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    }\n  },\n  yAxis:\n  {\n    type: 'value',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    }\n  },\n  series,\n  toolbox: {\n    right: 25,\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        show: false\n      },\n      saveAsImage: {}\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '5%',\n    top: 50,\n    bottom: 25,\n    containLabel: true,\n  },\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\r\nSELECT ROUND(trw_brd,0) as tagesreichweite_brd, jahr, ma_nummer, sender, \"$Redaktionen\" as redaktion\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_radio_trw`\r\nWHERE jahr >= (${Jahr} - 2) AND jahr <= ${Jahr}\r\nAND sender = \"${radioWelle}\"\r\nORDER BY jahr, ma_nummer ASC",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023I_Niedersachsen"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023II_Niedersachsen"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024I_Niedersachsen"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024II_Niedersachsen"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023I_Hamburg"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023II_Hamburg"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024I_Hamburg"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024II_Hamburg"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023I_SchleswigHolstein"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023II_SchleswigHolstein"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024I_SchleswigHolstein"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024II_SchleswigHolstein"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023I_MecklenburgVorpommern"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2023II_MecklenburgVorpommern"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024I_MecklenburgVorpommern"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "maaudio2024II_MecklenburgVorpommern"
              },
              "properties": []
            }
          ]
        },
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 8,
          "y": 71
        },
        "id": 151,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto"
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "var categoryColors = {\n  //'Hamburg': { 'II': '#D11426', 'I': '#faaea0' },\n  'Hamburg': { 'II': '#D11426', 'I': '#D11426' },\n  //'Niedersachsen': { 'II': '#F06600', 'I': '#ffbe96' },\n  'Niedersachsen': { 'II': '#F06600', 'I': '#F06600' },\n  //'Schleswig-Holstein': { 'II': '#009AD2', 'I': '#9bd5f3' },\n  'Schleswig-Holstein': { 'II': '#009AD2', 'I': '#009AD2' },\n  //'Mecklenburg-Vorpommern': { 'II': '#009F9F', 'I': '#90dad8' },\n  'Mecklenburg-Vorpommern': { 'II': '#009F9F', 'I': '#009F9F' },\n};\n\n// Initialen Daten holen\nconst redaktionField = context.panel.data.series[0].fields.find((f) => f.name === 'redaktion');\nconst senderField = context.panel.data.series[0].fields.find((f) => f.name === 'sender');\nconst trwField = context.panel.data.series[0].fields.find((f) => f.name === 'tagesreichweite_bundesland');\nconst maField = context.panel.data.series[0].fields.find((f) => f.name === 'ma_nummer');\nconst jahrField = context.panel.data.series[0].fields.find((f) => f.name === 'jahr');\n\nlet redaktion = [];\nlet sender = [];\nlet trw = [];\nlet ma = [];\nlet jahr = [];\n\nredaktion = redaktionField.values.toArray();\nsender = senderField.values.toArray();\ntrw = trwField.values.toArray();\nma = maField.values.toArray();\njahr = jahrField.values.toArray();\n\nlet labels = [];\nlet maIndicator = [];\n\nmaIndicator = sender.map((t, i) => {\n  const m = ma[i];\n  const w = redaktion[i];\n  return categoryColors[redaktion[i]][ma[i]]\n});\n\nlabels = trw.map((t, i) => {\n  const j = jahr[i];\n  const m = ma[i];\n  return \"ma \" + j + \" Audio \" + m\n});\n\nlet colorIndicator = redaktion[0];\n\nconst series = [\n  {\n    //name: 'App',\n    type: 'bar',\n    colorBy: 'data',\n    //symbol: 'rect',\n    //symbolSize: 30,\n    //color: categoryColors[colorIndicator]['I'],\n    color: maIndicator,\n    data: trw,\n    //showBackground: true,\n  },\n];\n\nreturn {\n  backgroundColor: 'transparent',\n  title: {\n    text: sender[0] + ' | Tagesreichweite Mo-Fr Radio | ' + colorIndicator,\n    textStyle: {\n      fontSize: 14\n    },\n  },\n  tooltip: {\n    trigger: 'item',\n    valueFormatter: function (value) {\n      let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n      return formattedNumber\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: '0',\n  },\n  xAxis: {\n    data: labels,\n    show: true,\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    },\n    //color: categoryColors[colorIndicator][maIndicator],\n  },\n  yAxis:\n  {\n    type: 'value',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    }\n  },\n  series,\n  toolbox: {\n    right: 25,\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        show: false\n      },\n      saveAsImage: {}\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '5%',\n    top: 50,\n    bottom: 25,\n    containLabel: true,\n  },\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "svg",
          "themeEditor": {
            "config": "{}",
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\r\nSELECT ROUND(trw_bundesland,0) as tagesreichweite_bundesland, jahr, ma_nummer, sender, '$Redaktionen' as redaktion \r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_radio_trw`\r\nWHERE jahr >= (${Jahr} - 2) AND jahr <= ${Jahr}\r\nAND sender = \"${radioWelle}\"\r\nORDER BY jahr, ma_nummer ASC",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 80
        },
        "id": 147,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      }
    ],
    "preload": true,
    "refresh": false,
    "schemaVersion": 40,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "text": "NDR",
            "value": "NDR"
          },
          "hide": 2,
          "includeAll": false,
          "name": "LRA",
          "options": [
            {
              "selected": true,
              "text": "NDR",
              "value": "NDR"
            }
          ],
          "query": "NDR",
          "type": "custom"
        },
        {
          "current": {
            "text": "Hamburg",
            "value": "Hamburg"
          },
          "includeAll": false,
          "label": "LFH",
          "name": "Redaktionen",
          "options": [
            {
              "selected": true,
              "text": "Hamburg",
              "value": "Hamburg"
            },
            {
              "selected": false,
              "text": "Niedersachsen",
              "value": "Niedersachsen"
            },
            {
              "selected": false,
              "text": "Schleswig-Holstein",
              "value": "Schleswig-Holstein"
            },
            {
              "selected": false,
              "text": "Mecklenburg-Vorpommern",
              "value": "Mecklenburg-Vorpommern"
            }
          ],
          "query": "Hamburg, Niedersachsen, \t\nSchleswig-Holstein, Mecklenburg-Vorpommern",
          "type": "custom"
        },
        {
          "current": {
            "text": "2025",
            "value": "2025"
          },
          "includeAll": false,
          "name": "Jahr",
          "options": [
            {
              "selected": false,
              "text": "2024",
              "value": "2024"
            },
            {
              "selected": true,
              "text": "2025",
              "value": "2025"
            }
          ],
          "query": "2024 : 2024, 2025 : 2025",
          "type": "custom"
        },
        {
          "current": {
            "text": "81784",
            "value": "81784"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "profile_ID_FB",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$Redaktionen\"\n   WHEN \"Info\" THEN \"26568\"\n   WHEN \"Sport\" THEN \"46842\"\n   WHEN \"Hamburg\" THEN \"81784\"\n   WHEN \"Niedersachsen\" THEN \"26036\"\n   WHEN \"Schleswig-Holstein\" THEN \"106580\"\n   WHEN \"Mecklenburg-Vorpommern\" THEN \"81780\"\n   WHEN \"Kultur\" THEN \"26569\"\nEND\n--IF (('$Redaktionen' = 'NJOY') OR ('$Redaktionen' = 'Kultur')) THEN (\n--  SELECT facebookID FROM `ndr-code-bi-dashboard.Quintly.profiles`\n--  WHERE profile = \"${Redaktionen}\"\n--);\n--ELSE (SELECT facebookID FROM `ndr-code-bi-dashboard.Quintly.profiles`\n--WHERE profile = \"NDR ${Redaktionen}\");\n--END IF",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "400977",
            "value": "400977"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "profile_ID_INSTA",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$Redaktionen\"\n   WHEN \"Info\" THEN \"404008\"\n   WHEN \"Sport\" THEN \"0\"\n   WHEN \"Hamburg\" THEN \"400977\"\n   WHEN \"Niedersachsen\" THEN \"396752\"\n   WHEN \"Schleswig-Holstein\" THEN \"409406\"\n   WHEN \"Mecklenburg-Vorpommern\" THEN \"403292\"\n   WHEN \"Kultur\" THEN \"0\"\nEND\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "nachrichten",
            "value": "nachrichten"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "web_redaktionen",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$Redaktionen\"\nWHEN \"Info\" THEN \"nachrichten\"\nWHEN \"Hamburg\" THEN \"nachrichten\"\nWHEN \"Niedersachsen\" THEN \"nachrichten\"\nWHEN \"Schleswig-Holstein\" THEN \"nachrichten\"\nWHEN \"Mecklenburg-Vorpommern\" THEN \"nachrichten\"\nWHEN \"Sport\" THEN \"sport\"\nWHEN \"Kultur\" THEN \"kultur\"\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "hamburg",
            "value": "hamburg"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Unterkapitel",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$Redaktionen\"\nWHEN \"Info\" THEN \"info\"\nWHEN \"Hamburg\" THEN \"hamburg\"\nWHEN \"Niedersachsen\" THEN \"niedersachsen\"\nWHEN \"Schleswig-Holstein\" THEN \"schleswig-holstein\"\nWHEN \"Mecklenburg-Vorpommern\" THEN \"mecklenburg-vorpommern\"\nWHEN \"Sport\" THEN \"Alle Kapitel 2\"\nWHEN \"Kultur\" THEN \"Alle Kapitel 2\"\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Apr.",
            "value": "Apr."
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Monat_abkuerzung",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\nCASE  CAST($Monat as INT64)\nWHEN 1 THEN \"Jan.\"\nWHEN 2 THEN \"Feb.\"\nWHEN 3 THEN \"März\"\nWHEN 4 THEN \"Apr.\"\nWHEN 5 THEN \"Mai\"\nWHEN 6 THEN \"Juni\"\nWHEN 7 THEN \"Juli\"\nWHEN 8 THEN \"Aug.\"\nWHEN 9 THEN \"Sep.\"\nWHEN 10 THEN \"Okt.\"\nWHEN 11 THEN \"Nov.\"\nWHEN 12 THEN \"Dez.\"\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "hh-app",
            "value": "hh-app"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "app_name",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\nSELECT CASE \"${Redaktionen}\"\n  WHEN \"Info\" THEN \"ndrinfo-app\"\n  WHEN \"Sport\" THEN \"ndr.de\"\n  WHEN \"Hamburg\" THEN \"hh-app\"\n  WHEN \"Niedersachsen\" THEN \"nds-app\"\n  WHEN \"Schleswig-Holstein\" THEN \"sh-app\"\n  WHEN \"Mecklenburg-Vorpommern\" THEN \"mv-app\"\n  WHEN \"NJOY\" THEN \"n-joy-app\"\n  WHEN \"Kultur\" THEN \"kultur-app\"\nEND\n\n-- radio-app, orchester-app, hh-app, kultur-app, sesamstraßen-app, ndrinfo-app, sh-app, nds-app, n-joy-app, mv-app",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Alle Kapitel 1",
            "value": "Alle Kapitel 1"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "page_chapter1",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$Redaktionen\"\n  WHEN \"Sport\" THEN \"sport\"\n  ELSE \"Alle Kapitel 1\"\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Quintly_final_2025_1",
            "value": "Quintly_final_2025_1"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN LAST_DAY(DATE($Jahr,$Monat,1)) <= DATE(2023,05,31) THEN \"Quintly\"\r\nWHEN CURRENT_DATE() > DATE_ADD(DATE($Jahr,$Monat,7),INTERVAL 1 MONTH) THEN CONCAT(\"Quintly_final_\",CAST($Jahr AS STRING),\"_\", CAST($Monat AS STRING))\r\nWHEN CURRENT_DATE() < DATE_ADD(DATE($Jahr,$Monat,7),INTERVAL 1 MONTH) THEN \"Quintly\"\r\nWHEN $Jahr < 2021 THEN \"Quintly\"\r\nELSE \"Quintly\" END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Hamburg",
            "value": "Hamburg"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "webColor",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${Redaktionen}\"\r\n  WHEN \"Info\" THEN \"Info\"\r\n  WHEN \"Sport\" THEN \"Sport\"\r\n  WHEN \"Hamburg\" THEN \"Hamburg\"\r\n  WHEN \"Niedersachsen\" THEN \"Niedersachsen\"\r\n  WHEN \"Schleswig-Holstein\" THEN \"SchleswigHolstein\"\r\n  WHEN \"Mecklenburg-Vorpommern\" THEN \"MecklenburgVorpommern\"\r\n  WHEN \"Kultur\" THEN \"Kultur\"\r\n  WHEN \"NJOY\" THEN \"NJOY\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "HH",
            "value": "HH"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "RedaktionKurz",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${Redaktionen}\"\r\n  WHEN \"Hamburg\" THEN \"HH\"\r\n  WHEN \"Niedersachsen\" THEN \"NDS\"\r\n  WHEN \"Schleswig-Holstein\" THEN \"SH\"\r\n  WHEN \"Mecklenburg-Vorpommern\" THEN \"MV\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "(Monat LIKE \"4\" OR Monat LIKE LPAD(\"4\",2,\"0\"))  and Jahr LIKE \"2025\"",
            "value": "(Monat LIKE \"4\" OR Monat LIKE LPAD(\"4\",2,\"0\"))  and Jahr LIKE \"2025\""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "zeitraumTV",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT '(Monat LIKE $Monat OR Monat LIKE LPAD($Monat,2,\"0\"))  and Jahr LIKE \"$Jahr\"'\r\n--'logical_month LIKE \"$Monat\" and year LIKE \"$Jahr\"'",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "(Monat = \"03\" OR Monat = \"3\") AND  Jahr = \"2025\"",
            "value": "(Monat = \"03\" OR Monat = \"3\") AND  Jahr = \"2025\""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "vergleichsZeitraumTV",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \r\nWHEN $Monat = '1' THEN 'Monat = \"12\" AND  Jahr = CAST((EXTRACT(YEAR FROM DATE_SUB(DATE($Jahr, CAST($Monat AS INT64), 1), INTERVAL 1 MONTH))) as STRING)'\r\nWHEN $Monat = '2' THEN '(Monat = \"01\" OR Monat = \"1\") AND  Jahr = \"$Jahr\"'\r\nWHEN $Monat = '3' THEN '(Monat = \"02\" OR Monat = \"2\") AND  Jahr = \"$Jahr\"'\r\nWHEN $Monat = '4' THEN '(Monat = \"03\" OR Monat = \"3\") AND  Jahr = \"$Jahr\"'\r\nWHEN $Monat = '5' THEN '(Monat = \"04\" OR Monat = \"4\") AND  Jahr = \"$Jahr\"'\r\nWHEN $Monat = '6' THEN '(Monat = \"05\" OR Monat = \"5\") AND  Jahr = \"$Jahr\"'\r\nWHEN $Monat = '7' THEN '(Monat = \"06\" OR Monat = \"6\") AND  Jahr = \"$Jahr\"'\r\nWHEN $Monat = '8' THEN '(Monat = \"07\" OR Monat = \"7\") AND  Jahr = \"$Jahr\"'\r\nWHEN $Monat = '9' THEN '(Monat = \"08\" OR Monat = \"8\") AND  Jahr = \"$Jahr\"'\r\nWHEN $Monat = '10' THEN '(Monat = \"09\" OR Monat = \"9\") AND  Jahr = \"$Jahr\"'\r\nWHEN $Monat = '11' THEN 'Monat = \"10\" AND  Jahr = \"$Jahr\"'\r\nWHEN $Monat = '12' THEN 'Monat = \"11\" AND  Jahr = \"$Jahr\"'\r\nEND\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "NDR_landesfunkhaeuser_regional_standard_f",
            "value": "NDR_landesfunkhaeuser_regional_standard_f"
          },
          "definition": "",
          "hide": 2,
          "name": "quotaTable",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \"NDR_landesfunkhaeuser_regional_standard_f\"\r\n--\"NDR_landesfunkhaeuser_regional_standard_monthly_r\"\r\n--\"ndr_zielgruppen_facts_native\"",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "NDR_landesfunkhaeuser_regional_kanal_f",
            "value": "NDR_landesfunkhaeuser_regional_kanal_f"
          },
          "definition": "",
          "hide": 2,
          "name": "quotaTableBRD",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \"NDR_landesfunkhaeuser_regional_kanal_f\"\r\n--\"ndr_zielgruppen_facts_native\"",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Hamburg Journal 18:00",
            "value": "Hamburg Journal 18:00"
          },
          "definition": "",
          "hide": 2,
          "name": "Sendung1800",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$Redaktionen'\r\nWHEN 'Hamburg' THEN 'Hamburg Journal 18:00'\r\nWHEN 'Schleswig-Holstein' THEN 'Schleswig Holstein 18:00'\r\nWHEn 'Niedersachsen' THEN 'Niedersachsen 18:00'\r\nWHEN 'Mecklenburg-Vorpommern' THEN 'Nordmagazin Land & Leute'\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Hamburg Journal 18:00 Uhr",
            "value": "Hamburg Journal 18:00 Uhr"
          },
          "definition": "",
          "hide": 2,
          "name": "medSendung1800",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$Redaktionen'\r\nWHEN 'Hamburg' THEN 'Hamburg Journal 18:00 Uhr'\r\nWHEN 'Schleswig-Holstein' THEN 'Schleswig-Holstein 18:00'\r\nWHEn 'Niedersachsen' THEN 'Niedersachsen 18.00'\r\nWHEN 'Mecklenburg-Vorpommern' THEN 'Nordmagazin - Land und Leute'\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "NDR 90,3",
            "value": "NDR 90,3"
          },
          "definition": "",
          "hide": 2,
          "name": "radioWelle",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$Redaktionen'\r\nWHEN 'Hamburg' THEN 'NDR 90,3'\r\nWHEN 'Schleswig-Holstein' THEN 'NDR 1 Welle Nord'\r\nWHEn 'Niedersachsen' THEN 'NDR 1 Niedersachsen'\r\nWHEN 'Mecklenburg-Vorpommern' THEN 'NDR 1 Radio MV'\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Hamburg Journal",
            "value": "Hamburg Journal"
          },
          "definition": "",
          "hide": 2,
          "name": "Sendung1930",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$Redaktionen'\r\nWHEN 'Hamburg' THEN 'Hamburg Journal'\r\nWHEN 'Schleswig-Holstein' THEN 'Schleswig-Holstein Magazin'\r\nWHEn 'Niedersachsen' THEN 'Hallo Niedersachsen'\r\nWHEN 'Mecklenburg-Vorpommern' THEN 'Nordmagazin'\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "(CONTAINS_SUBSTR(sendungs_id,'Hamburg Journal') OR CONTAINS_SUBSTR(sendungs_id,'NDR 90,3 Aktuell')) AND bi_av_broadcasting_type = 'ondemand'",
            "value": "(CONTAINS_SUBSTR(sendungs_id,'Hamburg Journal') OR CONTAINS_SUBSTR(sendungs_id,'NDR 90,3 Aktuell')) AND bi_av_broadcasting_type = 'ondemand'"
          },
          "definition": "",
          "hide": 2,
          "name": "webAVFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  CASE\r\n    \"$Redaktionen\"\r\n    WHEN \"Hamburg\" THEN \"(CONTAINS_SUBSTR(sendungs_id,'Hamburg Journal') OR CONTAINS_SUBSTR(sendungs_id,'NDR 90,3 Aktuell')) AND bi_av_broadcasting_type = 'ondemand'\"\r\n    WHEN \"Niedersachsen\" THEN \"bi_av_broadcasting_type = 'ondemand' AND  (CONTAINS_SUBSTR(sendungs_id,'Regional Lüneburg') OR CONTAINS_SUBSTR(sendungs_id,'Regional Oldenburg') OR CONTAINS_SUBSTR(sendungs_id,'Regional Osnabrück') OR CONTAINS_SUBSTR(sendungs_id,'Regional Braunschweig') OR CONTAINS_SUBSTR(sendungs_id,'Regional Hannover') OR CONTAINS_SUBSTR(sendungs_id,'Niedersachsen 18.00') OR CONTAINS_SUBSTR(sendungs_id,'Hallo Niedersachsen'))\"\r\n    WHEN \"Schleswig-Holstein\" THEN \"bi_av_broadcasting_type = 'ondemand' AND (CONTAINS_SUBSTR(sendungs_id,'Regionalnachrichten aus dem Studio Kiel')\tOR\tCONTAINS_SUBSTR(sendungs_id,'Regionalnachrichten aus dem Studio Flensburg')\tOR\tCONTAINS_SUBSTR(sendungs_id,'Regionalnachrichten aus dem Studio Lübeck')\tOR\tCONTAINS_SUBSTR(sendungs_id,'Regionalnachrichten aus dem Studio Heide')\tOR\tCONTAINS_SUBSTR(sendungs_id,'Regionalnachrichten aus dem Studio Norderstedt')\tOR\tCONTAINS_SUBSTR(sendungs_id,'Nachrichten für Schleswig-Holstein')\tOR\tCONTAINS_SUBSTR(sendungs_id,'Schleswig-Holstein Magazin') OR \tCONTAINS_SUBSTR(sendungs_id,'Schleswig-Holstein 18:00')) \"\r\n    WHEN \"Mecklenburg-Vorpommern\" THEN \"bi_av_broadcasting_type = 'ondemand' AND (sendungs_id LIKE 'NDR MV Live'\tOR\tCONTAINS_SUBSTR(sendungs_id,'Nordmagazin') OR CONTAINS_SUBSTR(sendungs_id,'Nachrichten aus Mecklenburg-Vorpommern')\tOR CONTAINS_SUBSTR(sendungs_id,'Regionalnachrichten aus Neubrandenburg') \tOR \tCONTAINS_SUBSTR(sendungs_id,'Regionalnachrichten aus Greifswald') \tOR \tCONTAINS_SUBSTR(sendungs_id,'Regionalnachrichten aus Rostock') \tOR \tCONTAINS_SUBSTR(sendungs_id,'Regionalnachrichten aus Schwerin') ) \"\r\n\r\n  END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Web AV on-demand umfasst AV Beiträge, die mit Titel Hamburg Journal und NDR 903 Aktuell beginnen; Web Seiten nach Tracking ausgewertet; App Seiten umfasst die gesamte App Nutzung; App AV on-demand berücksichtigt anders als für Web nicht nur die nachrichtlichen Angebote, sondern alle AV-Angebote",
            "value": "Web AV on-demand umfasst AV Beiträge, die mit Titel Hamburg Journal und NDR 903 Aktuell beginnen; Web Seiten nach Tracking ausgewertet; App Seiten umfasst die gesamte App Nutzung; App AV on-demand berücksichtigt anders als für Web nicht nur die nachrichtlichen Angebote, sondern alle AV-Angebote"
          },
          "definition": "",
          "hide": 2,
          "name": "hinweisWeb",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$Redaktionen'\r\n--WHEN 'Hamburg' THEN '* Web AV on-demand umfasst AV Beiträge, die mit Titel Hamburg Journal und NDR 903 Aktuell beginnen; \\n\\n* Web Seiten nach Tracking ausgewertet; \\n\\n* App Seiten umfasst die gesamte App Nutzung; \\n\\n* App AV on-demand berücksichtigt anders als für Web nicht nur die nachrichtlichen Angebote, sondern alle AV-Angebote'\r\nWHEN 'Hamburg' THEN 'Web AV on-demand umfasst AV Beiträge, die mit Titel Hamburg Journal und NDR 903 Aktuell beginnen; Web Seiten nach Tracking ausgewertet; App Seiten umfasst die gesamte App Nutzung; App AV on-demand berücksichtigt anders als für Web nicht nur die nachrichtlichen Angebote, sondern alle AV-Angebote'\r\nWHEN 'Niedersachsen' THEN 'Web AV on-demand umfasst Nachrichten verortet im Bereich Nachrichten Niedersachsen, Niedersachsen 18.00, Hallo Niedersachsen und Regionalnachrichten (aus Braunschweig, Hannover, Hannover, Oldenburg, Lüneburg, Osnabrück); Web Seiten nach Tracking ausgewertet; App Seiten umfasst die gesamte App Nutzung; App AV on-demand berücksichtigt anders als für Web nicht nur die nachrichtlichen Angebote, sondern alle AV-Angebote;'\r\nWHEN 'Schleswig-Holstein' THEN 'Web AV on-demand umfasst Nachrichten aus Schleswig-Holstein, Schleswig-Holstein 18:00, Schleswig-Holstein Magazin, Regionalnachrichten (aus Flensburg, Heide, Kiel, Lübeck und Norderstedt); Web Seiten nach Tracking ausgewertet; App Seiten umfasst die gesamte App Nutzung; App AV on-demand berücksichtigt anders als für Web nicht nur die nachrichtlichen Angebote, sondern alle AV-Angebote;'\r\nWHEN 'Mecklenburg-Vorpommern' THEN 'Web AV on-demand umfasst Nachrichten aus Mecklenburg-Vorpommern, Nordmagazin, MV Live on-demand, Regionalnachrichten (aus Neubrandenburg, Greifswald, Rostock und Schwerin); Web Seiten nach Tracking ausgewertet; App Seiten umfasst die gesamte App Nutzung; App AV on-demand berücksichtigt anders als für Web nicht nur die nachrichtlichen Angebote, sondern alle AV-Angebote;'\r\nELSE ''\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "FALSE",
            "value": "FALSE"
          },
          "definition": "",
          "hide": 2,
          "name": "ndsFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$Redaktionen\"\r\nWHEN \"Niedersachsen\" THEN \"bi_av_broadcasting_type = 'ondemand' AND bi_av_page_chapter1 = 'nachrichten' AND bi_av_page_chapter2 = 'niedersachsen' AND 'N/A' IN UNNEST(sendungs_id_tags)\"\r\n--WHEN \"Niedersachsen\" THEN \"(bi_av_broadcasting_type = 'ondemand' AND bi_av_page_chapter1 = 'nachrichten' AND bi_av_page_chapter2 = 'niedersachsen' AND bi_av_show = 'N/A')\"\r\nELSE \"FALSE\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "site_level2 = \"ndr.de\" AND bundesland = \"Hamburg\"",
            "value": "site_level2 = \"ndr.de\" AND bundesland = \"Hamburg\""
          },
          "definition": "",
          "hide": 2,
          "name": "webFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECt 'site_level2 = \"ndr.de\" AND bundesland = \"$Redaktionen\"'",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "site_level2 = \"hh-app\"",
            "value": "site_level2 = \"hh-app\""
          },
          "definition": "",
          "hide": 2,
          "name": "appFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT 'site_level2 = \"${app_name}\"'--'site_level2 = \"${app_name}\"     AND page_chapter1 = \"Alle Kapitel 1\"     AND page_chapter2 = \"Alle Kapitel 2\"     AND sendungs_id = \"Alle Sendungs-ID\"'",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "site_level2 = 'hh-app'     AND (objekt_typ LIKE 'audio' OR objekt_typ LIKE 'video')",
            "value": "site_level2 = 'hh-app'     AND (objekt_typ LIKE 'audio' OR objekt_typ LIKE 'video')"
          },
          "definition": "",
          "hide": 2,
          "name": "appAVFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \"site_level2 = '$app_name'     AND (objekt_typ LIKE 'audio' OR objekt_typ LIKE 'video')\"",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "FALSE",
            "value": "FALSE"
          },
          "definition": "",
          "hide": 2,
          "name": "ndsVerortung",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \r\nWHEN '$Redaktionen' = 'Niedersachsen' THEN \"bi_av_broadcasting_type = 'ondemand' AND CONTAINS_SUBSTR(bi_av_url, 'ndr.de/nachrichten/niedersachsen') AND 'N/A' IN UNNEST(sendungs_id_tags)\"\r\nELSE \"FALSE\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "12",
            "value": "12"
          },
          "description": "",
          "hide": 2,
          "label": "Trend",
          "name": "rueckblickVar",
          "options": [
            {
              "selected": true,
              "text": "12 Monate",
              "value": "12"
            },
            {
              "selected": false,
              "text": "18 Monate",
              "value": "18"
            },
            {
              "selected": false,
              "text": "24 Monate",
              "value": "24"
            }
          ],
          "query": "12 Monate : 12, 18 Monate : 18, 24 Monate : 24",
          "type": "custom"
        },
        {
          "current": {
            "text": "EXTRACT(month from date) =  CAST(\"4\" as INT64) AND EXTRACT(year from date) = 2025",
            "value": "EXTRACT(month from date) =  CAST(\"4\" as INT64) AND EXTRACT(year from date) = 2025"
          },
          "definition": "",
          "hide": 2,
          "name": "date",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT 'EXTRACT(month from date) =  CAST($Monat as INT64) AND EXTRACT(year from date) = $Jahr'\r\n--'date BETWEEN DATE($Jahr, CAST($Monat as INT64), 01) AND LAST_DAY(DATE($Jahr, CAST($Monat as INT64), 01))'",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "EXTRACT(month from date) = EXTRACT(MONTH FROM DATE_SUB(DATE(2024,1,1), INTERVAL 1 MONTH)) AND EXTRACT(year from date) = EXTRACT(YEAR FROM DATE_SUB(DATE(2024,1,1), INTERVAL 1 MONTH))",
            "value": "EXTRACT(month from date) = EXTRACT(MONTH FROM DATE_SUB(DATE(2024,1,1), INTERVAL 1 MONTH)) AND EXTRACT(year from date) = EXTRACT(YEAR FROM DATE_SUB(DATE(2024,1,1), INTERVAL 1 MONTH))"
          },
          "definition": "",
          "hide": 2,
          "name": "lastMonthdate",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT 'EXTRACT(month from date) = EXTRACT(MONTH FROM DATE_SUB(DATE($Jahr, CAST($Monat as INT64),1), INTERVAL 1 MONTH)) AND EXTRACT(year from date) = EXTRACT(YEAR FROM DATE_SUB(DATE($Jahr, CAST($Monat as INT64),1), INTERVAL 1 MONTH))''",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "(CONTAINS_SUBSTR(bi_av_show,\"NDR 90,3 Aktuell\") OR CONTAINS_SUBSTR(bi_av_show,\"Hamburg Journal\") OR bi_av_show = \"FALLBACK_HH\")",
            "value": "(CONTAINS_SUBSTR(bi_av_show,\"NDR 90,3 Aktuell\") OR CONTAINS_SUBSTR(bi_av_show,\"Hamburg Journal\") OR bi_av_show = \"FALLBACK_HH\")"
          },
          "definition": "",
          "hide": 2,
          "name": "content",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$Redaktionen'\r\nWHEN 'Niedersachsen' THEN '(CONTAINS_SUBSTR(bi_av_show,\"Regional Lüneburg\") OR CONTAINS_SUBSTR(bi_av_show,\"Regional Oldenburg\") OR CONTAINS_SUBSTR(bi_av_show,\"Regional Osnabrück\") OR CONTAINS_SUBSTR(bi_av_show,\"Regional Braunschweig\")  OR CONTAINS_SUBSTR(bi_av_show,\"Regional Hannover\") OR CONTAINS_SUBSTR(bi_av_show,\"Niedersachsen 18.00\") OR CONTAINS_SUBSTR(bi_av_show,\"Hallo Niedersachsen\") OR bi_av_show = \"FALLBACK_NDS\")'\r\nWHEN 'Mecklenburg-Vorpommern' THEN '(CONTAINS_SUBSTR(bi_av_show,\"NDR MV Live\") OR CONTAINS_SUBSTR(bi_av_show,\"Nordmagazin\") OR CONTAINS_SUBSTR(bi_av_show,\"Nachrichten aus Mecklenburg-Vorpommern\") OR CONTAINS_SUBSTR(bi_av_show,\"Regionalnachrichten aus Neubrandenburg\")  OR CONTAINS_SUBSTR(bi_av_show,\"Regionalnachrichten aus Greifswald\") OR CONTAINS_SUBSTR(bi_av_show,\"Regionalnachrichten aus Rostock\") OR CONTAINS_SUBSTR(bi_av_show,\"Regionalnachrichten aus Schwerin\") OR bi_av_show = \"FALLBACK_MV\")'\r\nWHEN 'Schleswig-Holstein' THEN '(CONTAINS_SUBSTR(bi_av_show,\"Regionalnachrichten aus dem Studio Kiel\") OR CONTAINS_SUBSTR(bi_av_show,\"Regionalnachrichten aus dem Studio Flensburg\") OR CONTAINS_SUBSTR(bi_av_show,\"Regionalnachrichten aus dem Studio Lübeck\") OR CONTAINS_SUBSTR(bi_av_show,\"Regionalnachrichten aus dem Studio Heide\") OR CONTAINS_SUBSTR(bi_av_show,\"Regionalnachrichten aus dem Studio Norderstedt\") OR CONTAINS_SUBSTR(bi_av_show,\"Nachrichten für Schleswig-Holstein\") OR CONTAINS_SUBSTR(bi_av_show,\"Schleswig-Holstein Magazin\")OR CONTAINS_SUBSTR(bi_av_show,\"Schleswig-Holstein 18:00\") OR bi_av_show = \"FALLBACK_SH\")'\r\nWHEN 'Hamburg' THEN '(CONTAINS_SUBSTR(bi_av_show,\"NDR 90,3 Aktuell\") OR CONTAINS_SUBSTR(bi_av_show,\"Hamburg Journal\") OR bi_av_show = \"FALLBACK_HH\")'\r\nELSE 'FALSE'\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "bi_av_broadcasting_type = 'ondemand' AND site_level2 = 'ndr.de'",
            "value": "bi_av_broadcasting_type = 'ondemand' AND site_level2 = 'ndr.de'"
          },
          "definition": "",
          "hide": 2,
          "name": "generalAVFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \"bi_av_broadcasting_type = 'ondemand' AND site_level2 = 'ndr.de'\"",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "FALSE",
            "value": "FALSE"
          },
          "definition": "",
          "hide": 2,
          "name": "additionalFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \r\n  WHEN ($Jahr = 2024 AND ($Monat = 9 OR $Monat = 10)) THEN \r\n    CASE '$Redaktionen'\r\n      WHEN 'Hamburg' THEN '((bi_av_show = \"Hamburg\" AND (bi_av_channel = \"ndr903\" OR bi_av_channel = \"ndrtv\")) OR (bi_av_show = \"Mecklenburg-Vorpommern\" AND bi_av_channel = \"ndr903\") OR (bi_av_show = \"niedersachsen\" AND bi_av_channel = \"ndr903\") OR (bi_av_show = \"Schleswig-Holstein\" AND bi_av_channel = \"ndr903\") AND CONTAINS_SUBSTR(bi_av_content_id, \"hamj\"))'\r\n    ELSE 'FALSE'\r\n    END\r\n  ELSE 'FALSE'\r\n  END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Piano.NDR_av",
            "value": "Piano.NDR_av"
          },
          "definition": "",
          "hide": 2,
          "name": "webAVTable",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE\r\n  WHEN ($Jahr = 2024 AND ($Monat = 9 OR $Monat = 10)) THEN \"$fallback\"\r\n  ELSE \"`ndr-code-bi-dashboard.Piano.NDR_av`\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "0",
            "value": "0"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "fallbackValue",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF($Jahr = 2024 AND (CAST($Monat AS INT64)=9 OR CAST($Monat AS INT64)=10))\r\nTHEN (SELECT\r\n IFNULL(SAFE_CAST(m_av_playbacks AS STRING),'0')\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_av_FALLBACK_CONTENT` \r\nWHERE bi_av_show LIKE 'FALLBACK_${RedaktionKurz}' AND  month = CAST($Monat AS INT64) );\r\nELSE (\r\n  SELECT '0'\r\n);\r\nENd IF;\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "0",
            "value": "0"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "fallbackValueVerortung",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF($Jahr = 2024 AND ($Monat=9 OR $Monat=10) AND '$Redaktionen' = 'Niedersachsen')\r\nTHEN (SELECT\r\n IFNULL(SAFE_CAST(m_av_playbacks AS STRING),'0')\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_av_FALLBACK_VERORTUNG` \r\nWHERE bi_av_show LIKE 'FALLBACK_${RedaktionKurz}' AND  month = $Monat );\r\nELSE (\r\n  SELECT '0'\r\n);\r\nENd IF;\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "0",
            "value": "0"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "fallbackValueLastMonth",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF($Jahr = 2024 AND ( CAST($Monat as INT64)=10 OR  CAST($Monat as INT64)=11))\r\nTHEN (SELECT\r\n IFNULL(SAFE_CAST(m_av_playbacks AS STRING),'0')\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_av_FALLBACK_CONTENT` \r\nWHERE bi_av_show LIKE 'FALLBACK_${RedaktionKurz}' AND  month = EXTRACT(MONTH FROM DATE_SUB(DATE($Jahr, CAST($Monat as INT64),1),INTERVAL 1 MONTH)) );\r\nELSE (\r\n  SELECT '0'\r\n);\r\nENd IF;\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "0",
            "value": "0"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "fallbackValueLastMonthVerortung",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF($Jahr = 2024 AND ( CAST($Monat as INT64)=10 OR  CAST($Monat as INT64)=11) AND '$Redaktionen' = 'Niedersachsen')\r\nTHEN (SELECT\r\n IFNULL(SAFE_CAST(m_av_playbacks AS STRING),'0')\r\nFROM `ndr-code-bi-dashboard.Crossmedia.NDR_av_FALLBACK_VERORTUNG` \r\nWHERE bi_av_show LIKE 'FALLBACK_${RedaktionKurz}' AND  month = EXTRACT(MONTH FROM DATE_SUB(DATE($Jahr, CAST($Monat as INT64),1),INTERVAL 1 MONTH)) );\r\nELSE (\r\n  SELECT '0'\r\n);\r\nENd IF;\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "11",
            "value": "11"
          },
          "definition": "",
          "hide": 2,
          "name": "rueckblick",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "Select CAST($rueckblickVar-1 as STRING)",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "definition": "",
          "hide": 2,
          "name": "textVisits",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE\r\nWHEN DATE_SUB(DATE($Jahr, CAST($Monat AS INT64), 1), INTERVAL $rueckblick MONTH) < DATE(2023,08,01) THEN '*Langzeit Daten stehen erst ab August 2023 zur Verfügung.'\r\nELSE ''\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "definition": "",
          "hide": 2,
          "name": "textAV",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE\r\nWHEN DATE_SUB(DATE($Jahr, CAST($Monat AS INT64), 1), INTERVAL $rueckblick MONTH) < DATE(2023,05,01) THEN '*Langzeit Daten stehen erst ab Mai 2023 zur Verfügung.'\r\nELSE ''\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "definition": "",
          "hide": 2,
          "name": "textSocial",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE\r\nWHEN DATE_SUB(DATE($Jahr, CAST($Monat AS INT64), 1), INTERVAL $rueckblick MONTH) < DATE(2023,07,01) THEN '*Langzeit Daten stehen erst ab Juli 2023 zur Verfügung.'\r\nELSE ''\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "definition": "",
          "hide": 2,
          "name": "textTV",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE\r\nWHEN DATE_SUB(DATE($Jahr, CAST($Monat AS INT64), 1), INTERVAL $rueckblick MONTH) < DATE(2023,11,01) THEN '*Langzeit Daten stehen erst ab November 2023 zur Verfügung.'\r\nELSE ''\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "definition": "",
          "hide": 2,
          "name": "textMed",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE\r\nWHEN DATE_SUB(DATE($Jahr, CAST($Monat AS INT64), 1), INTERVAL $rueckblick MONTH) < DATE(2022,1,01) THEN '*Langzeit Daten stehen erst ab Januar 2022 zur Verfügung.'\r\nELSE ''\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "April",
            "value": "April"
          },
          "definition": "",
          "label": "Monat",
          "name": "MonatPicker",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH months AS(\r\n  SELECT 'Januar' AS month_name, 1 AS month_value, DATE($Jahr,02,07) AS min_date\r\n  UNION ALL\r\n  SELECT 'Februar', 2, DATE($Jahr,03,07)\r\n  UNION ALL\r\n  SELECT 'März', 3, DATE($Jahr,04,07)\r\n  UNION ALL\r\n  SELECT 'April', 4, DATE($Jahr,05,07)\r\n  UNION ALL\r\n  SELECT 'Mai', 5, DATE($Jahr,06,07)\r\n  UNION ALL\r\n  SELECT 'Juni', 6, DATE($Jahr,07,07)\r\n  UNION ALL\r\n  SELECT 'Juli', 7, DATE($Jahr,08,07)\r\n  UNION ALL\r\n  SELECT 'August', 8, DATE($Jahr,09,07)\r\n  UNION ALL\r\n  SELECT 'September', 9, DATE($Jahr,10,07)\r\n  UNION ALL\r\n  SELECT 'Oktober', 10, DATE($Jahr,11,07)\r\n  UNION ALL\r\n  SELECT 'November', 11, DATE($Jahr,12,07)\r\n  UNION ALL\r\n  SELECT 'Dezember', 12, DATE($Jahr+1,01,07)\r\n)\r\nSELECT month_name\r\nFROM months\r\nWHERE CURRENT_DATE >= min_date\r\n--ORDER BY CASE WHEN month_value = (SELECT MAX(month_value) FROM months WHERE CURRENT_DATE() >= min_date AND month_value <= 12) THEN 0ELSE 1 END, month_value ASC\r\nORDER BY month_value ASC\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "\"4\"",
            "value": "\"4\""
          },
          "definition": "",
          "hide": 2,
          "name": "Monat",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT('\"',CAST(number AS STRING),'\"') FROM (\r\nSELECT\r\nCASE \"$MonatPicker\"\r\nWHEN \"Januar\" THEN 1\r\nWHEN \"Februar\" THEN 2\r\nWHEN \"März\" THEN 3\r\nWHEN \"April\" THEN 4\r\nWHEN \"Mai\" THEN 5\r\nWHEN \"Juni\" THEN 6\r\nWHEN \"Juli\" THEN 7\r\nWHEN \"August\" THEN 8\r\nWHEN \"September\" THEN 9\r\nWHEN \"Oktober\" THEN 10\r\nWHEN \"November\" THEN 11\r\nWHEN \"Dezember\" THEN 12\r\nEND as number)",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "(2024-05-01|19674.65|9190.81) -ni- (2024-06-01|21112.93|9076.27) -ni- (2024-07-01|20244.32|9538.45) -ni- (2024-08-01|19000.77|9742.45) -ni- (2024-09-01|14699.10|7804.53) -ni- (2024-10-01|14906.32|7393.94) -ni- (2024-11-01|16271.27|8616.43) -ni- (2024-12-01|15523.06|7414.55) -ni- (2025-01-01|20647.39|9218.97) -ni- (2025-02-01|21957.89|9036.75) -ni- (2025-03-01|17580.90|8433.35) -ni- (2025-04-01|20994.13|8746.00)",
            "value": "(2024-05-01|19674.65|9190.81) -ni- (2024-06-01|21112.93|9076.27) -ni- (2024-07-01|20244.32|9538.45) -ni- (2024-08-01|19000.77|9742.45) -ni- (2024-09-01|14699.10|7804.53) -ni- (2024-10-01|14906.32|7393.94) -ni- (2024-11-01|16271.27|8616.43) -ni- (2024-12-01|15523.06|7414.55) -ni- (2025-01-01|20647.39|9218.97) -ni- (2025-02-01|21957.89|9036.75) -ni- (2025-03-01|17580.90|8433.35) -ni- (2025-04-01|20994.13|8746.00)"
          },
          "definition": "",
          "hide": 2,
          "name": "datenreiheAV",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (  \r\n  with fallback as (\r\n    with raw as (\r\n    SELECT 470996 as m_av_playbacks, '2024-09-01' as date, 'Mecklenburg-Vorpommern' as LFH\r\n    UNION ALL\r\n    SELECT 675171, '2024-10-01', 'Mecklenburg-Vorpommern'\r\n     UNION ALL\r\n    SELECT 632194, '2024-09-01', 'Schleswig-Holstein'\r\n     UNION ALL\r\n    SELECT 516346, '2024-10-01', 'Schleswig-Holstein'\r\n     UNION ALL\r\n    SELECT 975729, '2024-09-01', 'Niedersachsen'\r\n     UNION ALL\r\n    SELECT 714753, '2024-10-01', 'Niedersachsen'\r\n     UNION ALL\r\n    SELECT 440973, '2024-09-01', 'Hamburg'\r\n     UNION ALL\r\n    SELECT 462096, '2024-10-01', 'Hamburg')\r\n    SELECT m_av_playbacks, CONCAT(LEFT(CAST(timestamp(date) AS STRING), 7), '-01') as date, EXTRACT( DAY from LAST_DAY(DATE(date))) as numDays, '$Redaktionen' as Redaktion\r\n    FROM raw WHERE \r\n    DATE(date) BETWEEN DATE(\r\n        EXTRACT(\r\n          YEAR\r\n          from\r\n            DATE_SUB(\r\n              LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n              INTERVAL $rueckblick MONTH\r\n            )\r\n        ),\r\n        EXTRACT(\r\n          MONTH\r\n          from\r\n            DATE_SUB(\r\n              LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n              INTERVAL $rueckblick MONTH\r\n            )\r\n        ),\r\n        1\r\n      )\r\n      AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH)\r\n      AND LFH = '$Redaktionen'\r\n  ),\r\n  content as (\r\n    SELECT \r\n      SUM(m_av_playbacks) as playbacks,\r\n      CONCAT(LEFT(CAST(timestamp(date) AS STRING), 7), '-01') as date,\r\n      COUNT(DISTINCT(date)) as numDays\r\n      --COUNT(EXTRACT( DAY FROM LAST_DAY(date))) as numDays\r\n    FROM `ndr-code-bi-dashboard.Piano.NDR_av` \r\n    WHERE date BETWEEN DATE(\r\n        EXTRACT(\r\n          YEAR\r\n          from\r\n            DATE_SUB(\r\n              LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n              INTERVAL $rueckblick MONTH\r\n            )\r\n        ),\r\n        EXTRACT(\r\n          MONTH\r\n          from\r\n            DATE_SUB(\r\n              LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n              INTERVAL $rueckblick MONTH\r\n            )\r\n        ),\r\n        1\r\n      )\r\n      AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH)\r\n      AND NOT (EXTRACT(MONTH from date) = 9 AND EXTRACT(YEAR from date) = 2024)\r\n      AND NOT (EXTRACT(MONTH from date) = 10 AND EXTRACT(YEAR from date) = 2024)\r\n      AND $content \r\n      AND $generalAVFilter\r\nGROUP by\r\n      date\r\n    ORDER by\r\n      date ASC\r\n  ),\r\n  verortung as (\r\n    SELECT \r\n      SUM(m_av_playbacks) as playbacks,\r\n      CONCAT(LEFT(CAST(timestamp(date) AS STRING), 7), '-01') as date,\r\n    FROM `ndr-code-bi-dashboard.Piano.NDR_av` \r\n    WHERE\r\n      date BETWEEN DATE(\r\n        EXTRACT(\r\n          YEAR\r\n          from\r\n            DATE_SUB(\r\n              LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n              INTERVAL $rueckblick MONTH\r\n            )\r\n        ),\r\n        EXTRACT(\r\n          MONTH\r\n          from\r\n            DATE_SUB(\r\n              LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n              INTERVAL $rueckblick MONTH\r\n            )\r\n        ),\r\n        1\r\n      )\r\n      AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH)\r\n      AND NOT (EXTRACT(MONTH from date) = 9 AND EXTRACT(YEAR from date) = 2024)\r\n      AND NOT (EXTRACT(MONTH from date) = 10 AND EXTRACT(YEAR from date) = 2024)\r\n      AND CONTAINS_SUBSTR(bi_av_url, 'ndr.de/nachrichten/niedersachsen/')\r\n      AND $generalAVFilter\r\n      AND (bi_av_show = 'Niedersachsen' \r\n        OR bi_av_show = '' \r\n        OR bi_av_show = '-'\r\n        OR bi_av_show = 'N/A' \r\n        OR bi_av_channel = 'N/A'\r\n        OR bi_av_show = 'Hamburg' \r\n        OR bi_av_show = 'Mecklenburg-Vorpommern' \r\n        OR bi_av_show = 'Schleswig-Holstein')\r\n        GROUP by\r\n      date\r\n    ORDER by\r\n      date ASC\r\n  )\r\n  SELECT \r\n  CASE WHEN '$Redaktionen' = 'Niedersachsen' THEN IFNULL(content.playbacks,0) + IFNULL(verortung.playbacks,0) \r\n  ELSE IFNULL(content.playbacks,0) \r\n  END as summe_web, \r\n  IFNULL(content.date,verortung.date) as date, \r\n  numDays, \r\n  '$Redaktionen' as redaktion\r\n  FROM content FULL JOIN verortung ON content.date = verortung.date \r\n  UNION aLL \r\n  SELECT * FROM fallback\r\n),\r\napp as (\r\n  SELECT\r\n    SUM(IFNULL(m_playbutton, 0)) as summe_app,\r\n    CONCAT(LEFT(CAST(timestamp(date) AS STRING), 7), '-01') as time,\r\n    COUNT(DISTINCT(date)) as numDays\r\n  FROM\r\n    `Piano.NDR_av_daily`\r\n  WHERE\r\n    $appAVFilter\r\n    AND date BETWEEN DATE(\r\n      EXTRACT(\r\n        YEAR\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr, CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      EXTRACT(\r\n        MONTH\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      1\r\n    )\r\n    AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH) -- AND EXTRACT(MONTH from date) = $Monat AND EXTRACT(YEAR from date) = $Jahr\r\n  GROUP BY\r\n    time\r\n  ORDER BY\r\n    time ASC\r\n),\r\ndata as (\r\nSELECT\r\n  (SUM(summe_web) / avg(web.numDays)) as Web,\r\n  (SUM(summe_app) / avg(app.numDays)) as App,\r\n  web.date as time,\r\n  '$Redaktionen' as redaktion\r\nfrom\r\n  web\r\n  join app on web.date = app.time\r\n  GROUP by time, redaktion\r\norder by\r\n  time asc),\r\ninput_string AS(\r\nSELECT STRING_AGG(\r\n  FORMAT(\"(%t|%.2f|%.2f)\",time, Web, App),\r\n  \" -ni- \"\r\n) AS final_string\r\nFROM data)\r\nSELECT * FROM input_string\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "(2024-05-01|122924.52|55968.35) -ni- (2024-06-01|157919.20|54541.23) -ni- (2024-07-01|119206.84|55226.16) -ni- (2024-08-01|125089.71|58858.97) -ni- (2024-09-01|108061.10|54846.53) -ni- (2024-10-01|113772.61|49831.19) -ni- (2024-11-01|105846.17|54136.63) -ni- (2024-12-01|137974.13|53330.39) -ni- (2025-01-01|141436.87|55956.19) -ni- (2025-02-01|191272.36|61799.46) -ni- (2025-03-01|158747.90|57051.26) -ni- (2025-04-01|153475.10|55303.93)",
            "value": "(2024-05-01|122924.52|55968.35) -ni- (2024-06-01|157919.20|54541.23) -ni- (2024-07-01|119206.84|55226.16) -ni- (2024-08-01|125089.71|58858.97) -ni- (2024-09-01|108061.10|54846.53) -ni- (2024-10-01|113772.61|49831.19) -ni- (2024-11-01|105846.17|54136.63) -ni- (2024-12-01|137974.13|53330.39) -ni- (2025-01-01|141436.87|55956.19) -ni- (2025-02-01|191272.36|61799.46) -ni- (2025-03-01|158747.90|57051.26) -ni- (2025-04-01|153475.10|55303.93)"
          },
          "definition": "",
          "hide": 2,
          "name": "datenreiheVisits",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  with by_day as (\r\n  SELECT MAX(m_visits) as m_visits, date,  bundesland, site_level2\r\n  FROM `ndr-code-bi-dashboard.Piano.NDR_total_visits_bundesland`\r\n  WHERE\r\n    $webFilter\r\n    AND date BETWEEN DATE(EXTRACT(YEAR from DATE_SUB(LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH), INTERVAL $rueckblick MONTH)), EXTRACT(MONTH from DATE_SUB(LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH), INTERVAL $rueckblick MONTH)), 1)\r\n    AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH)\r\n  GROUP BY date, bundesland, site_level2\r\n)\r\n  SELECT\r\n    SUM(IFNULL(m_visits, 0)) as summe_web,\r\n    CONCAT(LEFT(CAST(timestamp(date) AS STRING), 7),'-01') as date,\r\n    COUNT(DISTINCT(date)) as numDays,\r\n    '$Redaktionen' as redaktion\r\n  FROM\r\n    by_day\r\n   -- AND EXTRACT(MONTH from date) = $Monat AND EXTRACT(YEAR from date) = $Jahr\r\n  GROUP BY\r\n    date\r\n  ORDER BY\r\n    date ASC\r\n),\r\napp as (\r\n  with by_day as (\r\n  SELECT MAX(m_visits) as m_visits, date, site_level2\r\n  FROM Piano.NDR_total_visits_site\r\n  WHERE\r\n    $appFilter\r\n    AND date BETWEEN DATE(EXTRACT(YEAR from DATE_SUB(LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH), INTERVAL $rueckblick MONTH)), EXTRACT(MONTH from DATE_SUB(LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH), INTERVAL $rueckblick MONTH)), 1)\r\n    AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH)\r\n    GROUP BY date, site_level2\r\n)\r\n  SELECT\r\n    SUM(COALESCE(m_visits, 0)) as visits_app,\r\n    COUNT(DISTINCT(date)) as numDays,\r\n    CONCAT(LEFT(CAST(timestamp(date) AS STRING), 7),'-01') as time\r\n  FROM\r\n    by_day\r\n  \r\n  GROUP BY\r\n    time\r\n  ORDER BY\r\n    time ASC\r\n),\r\ndata as (\r\nSELECT\r\n  (SUM(summe_web) / avg(web.numDays)) as Web,\r\n  (SUM(visits_app) / avg(app.numDays)) as App,\r\n  web.date as time,\r\n  '$Redaktionen' as redaktion\r\nfrom\r\n  web\r\n  join app on web.date = app.time\r\n  GROUP by time, redaktion\r\norder by\r\n  time asc),\r\ninput_string AS(\r\nSELECT STRING_AGG(\r\n  FORMAT(\"(%t|%.2f|%.2f)\",time, Web, App),\r\n  \" -ni- \"\r\n) AS final_string\r\nFROM data)\r\nSELECT * FROM input_string\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "(2024-05-01|258364|31|461476|31) -ni- (2024-06-01|252451|30|472567|30) -ni- (2024-07-01|195159|31|405341|31) -ni- (2024-08-01|189882|31|297435|31) -ni- (2024-09-01|166049|30|334134|30) -ni- (2024-10-01|198992|31|246354|31) -ni- (2024-11-01|207217|30|429876|30) -ni- (2024-12-01|195955|31|402163|31) -ni- (2025-01-01|225934|31|545487|31) -ni- (2025-02-01|224701|28|489359|28) -ni- (2025-03-01|339009|31|691077|31) -ni- (2025-04-01|293612|30|359422|30)",
            "value": "(2024-05-01|258364|31|461476|31) -ni- (2024-06-01|252451|30|472567|30) -ni- (2024-07-01|195159|31|405341|31) -ni- (2024-08-01|189882|31|297435|31) -ni- (2024-09-01|166049|30|334134|30) -ni- (2024-10-01|198992|31|246354|31) -ni- (2024-11-01|207217|30|429876|30) -ni- (2024-12-01|195955|31|402163|31) -ni- (2025-01-01|225934|31|545487|31) -ni- (2025-02-01|224701|28|489359|28) -ni- (2025-03-01|339009|31|691077|31) -ni- (2025-04-01|293612|30|359422|30)"
          },
          "definition": "",
          "hide": 2,
          "name": "datenreiheSoMe",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with fb as (\r\n  SELECT\r\n    interactions,\r\n    --CONCAT(LEFT(CAST(time AS STRING), 7),'-01') as time,\r\n    CAST(DATE(jahr, monat, 1) AS STRING) as time,\r\n    anzahlTage as numDays,\r\n  FROM\r\n    `ndr-code-bi-dashboard.Quintly_frozen.facebook_metrics` \r\n  WHERE\r\n    profileId = $profile_ID_FB\r\n    AND DATE(jahr, monat, 1) BETWEEN DATE(EXTRACT(YEAR from DATE_SUB(LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH), INTERVAL $rueckblick MONTH)), EXTRACT(MONTH from DATE_SUB(LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH), INTERVAL $rueckblick MONTH)), 1)\r\n    AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH)\r\n    AND DATE(jahr, monat, 1) >= DATE(2023, 7,1)\r\n    AND monat >= 1 AND monat <= 12 \r\n  ORDER BY\r\n    time ASC\r\n),\r\nig as (\r\n  SELECT\r\n    interactions,\r\n    --CONCAT(LEFT(CAST(time AS STRING), 7),'-01') as time,\r\n    CAST(DATE(jahr, monat, 1) AS STRING) as time,\r\n    anzahltage as numDays,\r\n  FROM\r\n    `ndr-code-bi-dashboard.Quintly_frozen.instagram_metrics` \r\n  WHERE\r\n    profileId = $profile_ID_INSTA\r\n    AND DATE(jahr, monat, 1) BETWEEN DATE(EXTRACT(YEAR from DATE_SUB(LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH), INTERVAL $rueckblick MONTH)), EXTRACT(MONTH from DATE_SUB(LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH), INTERVAL $rueckblick MONTH)), 1)\r\n    AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH)\r\n    AND monat >= 1 AND monat <= 12 \r\n  ORDER BY\r\n    time ASC\r\n),\r\ndata as (\r\nSELECT\r\n  fb.interactions as Facebook,\r\n  ig.interactions as Instagram,\r\n  fb.time as time,\r\n  fb.numDays as fb_days, \r\n  ig.numDays as ig_days,\r\n  '$Redaktionen' as redaktion\r\nfrom fb join ig on fb.time=ig.time\r\norder by\r\n  time asc),\r\ninput_string AS(\r\nSELECT STRING_AGG(\r\n  FORMAT(\"(%t|%d|%d|%d|%d)\",time, Facebook, fb_days, Instagram, ig_days),\r\n  \" -ni- \"\r\n) AS final_string\r\nFROM data)\r\nSELECT * FROM input_string\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "(2024-05-01|31|Hamburg Journal 18:00 Uhr|14345|Hamburg Journal|290888) -ni- (2024-06-01|30|Hamburg Journal 18:00 Uhr|14462|Hamburg Journal|257969) -ni- (2024-07-01|31|Hamburg Journal 18:00 Uhr|15358|Hamburg Journal|250662) -ni- (2024-08-01|31|Hamburg Journal 18:00 Uhr|13552|Hamburg Journal|244205) -ni- (2024-09-01|30|Hamburg Journal 18:00 Uhr|13752|Hamburg Journal|235225) -ni- (2024-10-01|31|Hamburg Journal 18:00 Uhr|10047|Hamburg Journal|256890) -ni- (2024-11-01|30|Hamburg Journal 18:00 Uhr|11333|Hamburg Journal|258941) -ni- (2024-12-01|31|Hamburg Journal 18:00 Uhr|11670|Hamburg Journal|312337) -ni- (2025-01-01|31|Hamburg Journal 18:00 Uhr|11585|Hamburg Journal|316746) -ni- (2025-02-01|28|Hamburg Journal 18:00 Uhr|14054|Hamburg Journal|235522) -ni- (2025-03-01|31|Hamburg Journal 18:00 Uhr|13696|Hamburg Journal|264718) -ni- (2025-04-01|30|Hamburg Journal 18:00 Uhr|11304|Hamburg Journal|235084)",
            "value": "(2024-05-01|31|Hamburg Journal 18:00 Uhr|14345|Hamburg Journal|290888) -ni- (2024-06-01|30|Hamburg Journal 18:00 Uhr|14462|Hamburg Journal|257969) -ni- (2024-07-01|31|Hamburg Journal 18:00 Uhr|15358|Hamburg Journal|250662) -ni- (2024-08-01|31|Hamburg Journal 18:00 Uhr|13552|Hamburg Journal|244205) -ni- (2024-09-01|30|Hamburg Journal 18:00 Uhr|13752|Hamburg Journal|235225) -ni- (2024-10-01|31|Hamburg Journal 18:00 Uhr|10047|Hamburg Journal|256890) -ni- (2024-11-01|30|Hamburg Journal 18:00 Uhr|11333|Hamburg Journal|258941) -ni- (2024-12-01|31|Hamburg Journal 18:00 Uhr|11670|Hamburg Journal|312337) -ni- (2025-01-01|31|Hamburg Journal 18:00 Uhr|11585|Hamburg Journal|316746) -ni- (2025-02-01|28|Hamburg Journal 18:00 Uhr|14054|Hamburg Journal|235522) -ni- (2025-03-01|31|Hamburg Journal 18:00 Uhr|13696|Hamburg Journal|264718) -ni- (2025-04-01|30|Hamburg Journal 18:00 Uhr|11304|Hamburg Journal|235084)"
          },
          "definition": "",
          "hide": 2,
          "name": "datenreiheMed",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with m1800 as (\r\n  SELECT\r\n    Wiedergaben as w1800,\r\n    CONCAT(\r\n      Jahr,\r\n      '-',\r\n      LPAD(CAST(Monat as STRING), 2, '0'),\r\n      '-01'\r\n    ) as date,\r\n    '$Redaktionen' as redaktion\r\n  FROM\r\n    `ndr-code-bi-dashboard.Crossmedia.NDR_mediathek_wiedergaben`\r\n  WHERE\r\n    --Jahr BETWEEN EXTRACT(YEAR from DATE_SUB(CURRENT_DATE(), INTERVAL 18 MONTH))\r\n    --AND EXTRACT(YEAR from CURRENT_DATE) -- AND EXTRACT(MONTH from date) = $Monat AND EXTRACT(YEAR from date) = $Jahr\r\n    DATE(Jahr, Monat, 1) BETWEEN DATE(\r\n      EXTRACT(\r\n        YEAR\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      EXTRACT(\r\n        MONTH\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      1\r\n    )\r\n    AND LAST_DAY(DATE($Jahr, CAST($Monat as INT64), 1), MONTH)\r\n    AND Sendung = '$medSendung1800'\r\n  ORDER BY\r\n    date ASC\r\n),\r\nm1930 as (\r\n  SELECT\r\n    Wiedergaben as w1930,\r\n    CONCAT(\r\n      Jahr,\r\n      '-',\r\n      LPAD(CAST(Monat as STRING), 2, '0'),\r\n      '-01'\r\n    ) as date,\r\n    '$Redaktionen' as redaktion\r\n  FROM\r\n    `ndr-code-bi-dashboard.Crossmedia.NDR_mediathek_wiedergaben`\r\n  WHERE\r\n    --Jahr BETWEEN EXTRACT(YEAR from DATE('${__from:date}'))\r\n    --AND EXTRACT(YEAR from DATE('${__to:date}')) -- AND EXTRACT(MONTH from date) = $Monat AND EXTRACT(YEAR from date) = $Jahr\r\n    DATE(Jahr, Monat, 1) BETWEEN DATE(\r\n      EXTRACT(\r\n        YEAR\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      EXTRACT(\r\n        MONTH\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      1\r\n    )\r\n    AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH)\r\n    AND Sendung = '$Sendung1930'\r\n  ORDER BY\r\n    date ASC\r\n),\r\ndata as (\r\nSELECT\r\n  w1800  as Sendung1800,\r\n  w1930  as Sendung1930,\r\n  m1800.date as time,\r\n  EXTRACT(DAY FROM LAST_DAY(DATE(m1800.date))) as numDays,\r\n  '$Redaktionen' as redaktion,\r\n  '$medSendung1800' as name1800,\r\n  '$Sendung1930' as name1930\r\nfrom\r\n  m1800\r\n  join m1930 on m1800.date = m1930.date\r\norder by\r\n  time asc),\r\ninput_string AS(\r\nSELECT STRING_AGG(\r\n  FORMAT(\"(%t|%d|%s|%d|%s|%d)\",time, numDays, name1800, Sendung1800, name1930, Sendung1930),\r\n  \" -ni- \"\r\n) AS final_string\r\nFROM data)\r\nSELECT * FROM input_string\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "(2024-05-01|0.067192|0.264781) -ni- (2024-06-01|0.066361|0.250053) -ni- (2024-07-01|0.070377|0.249524) -ni- (2024-08-01|0.071877|0.250820) -ni- (2024-09-01|0.094221|0.277875) -ni- (2024-10-01|0.097698|0.299832) -ni- (2024-11-01|0.092415|0.305571) -ni- (2024-12-01|0.103299|0.291878) -ni- (2025-01-01|0.124708|0.309586) -ni- (2025-02-01|0.105940|0.304866) -ni- (2025-03-01|0.086640|0.282258) -ni- (2025-04-01|0.079235|0.247244)",
            "value": "(2024-05-01|0.067192|0.264781) -ni- (2024-06-01|0.066361|0.250053) -ni- (2024-07-01|0.070377|0.249524) -ni- (2024-08-01|0.071877|0.250820) -ni- (2024-09-01|0.094221|0.277875) -ni- (2024-10-01|0.097698|0.299832) -ni- (2024-11-01|0.092415|0.305571) -ni- (2024-12-01|0.103299|0.291878) -ni- (2025-01-01|0.124708|0.309586) -ni- (2025-02-01|0.105940|0.304866) -ni- (2025-03-01|0.086640|0.282258) -ni- (2025-04-01|0.079235|0.247244)"
          },
          "definition": "",
          "hide": 2,
          "name": "datenreiheTVBRD",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with tv1800 as (\r\n  SELECT\r\n    Seher as summe1800,\r\n    DATE(CAST(Jahr as INT64), CAST(Monat AS INT64), 1) as date,\r\n    '$Redaktionen' as redaktion\r\n  FROM\r\n    `ndr-code-bi-dashboard.Crossmedia.$quotaTableBRD`\r\n  WHERE\r\n    Region = \"BRD gesamt\"\r\n    and Show = 'NDR Regional 18:00'\r\n    and Sender = 'NDR Fernsehen ${Redaktionen}'\r\n    AND DATE(CAST(Jahr as INT64), CAST(Monat AS INT64), 1) BETWEEN DATE(\r\n      EXTRACT(\r\n        YEAR\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      EXTRACT(\r\n        MONTH\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      1\r\n    )\r\n    AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH) -- AND EXTRACT(MONTH from date) = $Monat AND EXTRACT(YEAR from date) = $Jahr\r\n  ORDER BY\r\n    date ASC\r\n),\r\ntv1930 as (\r\n  SELECT\r\n    Seher as summe1930,\r\n    DATE(CAST(Jahr as INT64), CAST(Monat AS INT64), 1) as date,\r\n    '$Redaktionen' as redaktion\r\n  FROM\r\n    `ndr-code-bi-dashboard.Crossmedia.$quotaTableBRD`\r\n  WHERE\r\n    Region = \"BRD gesamt\"\r\n    and show = 'NDR Regional 19:30'\r\n    and Sender = 'NDR Fernsehen ${Redaktionen}'\r\n    AND DATE(CAST(Jahr as INT64), CAST(Monat AS INT64), 1) BETWEEN DATE(\r\n      EXTRACT(\r\n        YEAR\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      EXTRACT(\r\n        MONTH\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      1\r\n    )\r\n    AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH) -- AND EXTRACT(MONTH from date) = $Monat AND EXTRACT(YEAR from date) = $Jahr\r\n  ORDER BY\r\n    date ASC\r\n),\r\ndata as (\r\nSELECT\r\n   summe1800,\r\n   summe1930,\r\n  tv1800.date as time,\r\n  --'$Redaktionen' as redaktion\r\nfrom\r\n  tv1800\r\n  JOIN tv1930 ON tv1800.date = tv1930.date\r\norder by\r\n  time asc),\r\ninput_string AS(\r\nSELECT STRING_AGG(\r\n  FORMAT(\"(%t|%f|%f)\",time, summe1800, summe1930),\r\n  \" -ni- \"\r\n) AS final_string\r\nFROM data)\r\nSELECT * FROM input_string\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "(2024-05-01|0.030016|0.163202) -ni- (2024-06-01|0.032784|0.163121) -ni- (2024-07-01|0.041839|0.151146) -ni- (2024-08-01|0.048504|0.154722) -ni- (2024-09-01|0.055762|0.176347) -ni- (2024-10-01|0.055245|0.196463) -ni- (2024-11-01|0.050882|0.195140) -ni- (2024-12-01|0.047480|0.178297) -ni- (2025-01-01|0.051900|0.175839) -ni- (2025-02-01|0.045957|0.182477) -ni- (2025-03-01|0.037552|0.181767) -ni- (2025-04-01|0.026086|0.145437)",
            "value": "(2024-05-01|0.030016|0.163202) -ni- (2024-06-01|0.032784|0.163121) -ni- (2024-07-01|0.041839|0.151146) -ni- (2024-08-01|0.048504|0.154722) -ni- (2024-09-01|0.055762|0.176347) -ni- (2024-10-01|0.055245|0.196463) -ni- (2024-11-01|0.050882|0.195140) -ni- (2024-12-01|0.047480|0.178297) -ni- (2025-01-01|0.051900|0.175839) -ni- (2025-02-01|0.045957|0.182477) -ni- (2025-03-01|0.037552|0.181767) -ni- (2025-04-01|0.026086|0.145437)"
          },
          "definition": "",
          "hide": 2,
          "name": "datenreiheTVReg",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "EU",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with tv1800 as (\r\n  SELECT\r\n    IFNULL(Seher, 0) as summe1800,\r\n    DATE(CAST(Jahr as INT64), CAST(Monat AS INT64), 1) as date,\r\n    '$Redaktionen' as redaktion\r\n  FROM\r\n    `ndr-code-bi-dashboard.Crossmedia.$quotaTable`\r\n  WHERE\r\n    Region LIKE '$Redaktionen'\r\n    and show LIKE 'NDR Regional 18:00'\r\n    AND DATE(CAST(Jahr as INT64), CAST(Monat AS INT64), 1) BETWEEN DATE(\r\n      EXTRACT(\r\n        YEAR\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      EXTRACT(\r\n        MONTH\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      1\r\n    )\r\n    AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH) -- AND EXTRACT(MONTH from date) = $Monat AND EXTRACT(YEAR from date) = $Jahr\r\n  ORDER BY\r\n    date ASC\r\n),\r\ntv1930 as (\r\n  SELECT\r\n    IFNULL(Seher, 0) as summe1930,\r\n    DATE(CAST(Jahr as INT64), CAST(Monat AS INT64), 1) as date,\r\n    '$Redaktionen' as redaktion\r\n  FROM\r\n    `ndr-code-bi-dashboard.Crossmedia.$quotaTable`\r\n  WHERE\r\n    Region LIKE '$Redaktionen'\r\n    and show LIKE 'NDR Regional 19:30'\r\n    AND DATE(CAST(Jahr as INT64), CAST(Monat AS INT64), 1) BETWEEN DATE(\r\n      EXTRACT(\r\n        YEAR\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      EXTRACT(\r\n        MONTH\r\n        from\r\n          DATE_SUB(\r\n            LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH),\r\n            INTERVAL $rueckblick MONTH\r\n          )\r\n      ),\r\n      1\r\n    )\r\n    AND LAST_DAY(DATE($Jahr,  CAST($Monat as INT64), 1), MONTH) -- AND EXTRACT(MONTH from date) = $Monat AND EXTRACT(YEAR from date) = $Jahr\r\n  ORDER BY\r\n    date ASC\r\n),\r\ndata as (\r\nSELECT\r\n   summe1800,\r\n   summe1930,\r\n  tv1800.date as time,\r\n  --'$Redaktionen' as redaktion\r\nfrom\r\n  tv1800\r\n  JOIN tv1930 ON tv1800.date = tv1930.date\r\norder by\r\n  time asc),\r\ninput_string AS(\r\nSELECT STRING_AGG(\r\n  FORMAT(\"(%t|%f|%f)\",time, summe1800, summe1930),\r\n  \" -ni- \"\r\n) AS final_string\r\nFROM data)\r\nSELECT * FROM input_string\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "9",
            "value": "9"
          },
          "hide": 2,
          "name": "filled_size",
          "options": [
            {
              "selected": true,
              "text": "9",
              "value": "9"
            }
          ],
          "query": "9",
          "type": "custom"
        },
        {
          "current": {
            "text": "10",
            "value": "10"
          },
          "hide": 2,
          "name": "filled_size_small",
          "options": [
            {
              "selected": true,
              "text": "10",
              "value": "10"
            }
          ],
          "query": "10",
          "type": "custom"
        },
        {
          "current": {
            "text": "44",
            "value": "44"
          },
          "hide": 2,
          "name": "filled_size_headline",
          "options": [
            {
              "selected": true,
              "text": "44",
              "value": "44"
            }
          ],
          "query": "44",
          "type": "custom"
        },
        {
          "current": {
            "text": "16",
            "value": "16"
          },
          "hide": 2,
          "name": "filled_size_headline_small",
          "options": [
            {
              "selected": true,
              "text": "16",
              "value": "16"
            }
          ],
          "query": "16",
          "type": "custom"
        }
      ]
    },
    "time": {
      "from": "now-2y",
      "to": "now"
    },
    "timepicker": {
      "hidden": true,
      "refresh_intervals": []
    },
    "timezone": "browser",
    "title": "LFH Crossmedia Dashboard Prototype",
    "uid": "IEVqyRJIz",
    "version": 398,
    "weekStart": ""
  }
}
