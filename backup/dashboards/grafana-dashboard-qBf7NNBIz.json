{
  "meta": {
    "type": "db",
    "canSave": true,
    "canEdit": true,
    "canAdmin": true,
    "canStar": true,
    "canDelete": true,
    "slug": "wip-webandapp-dashboard-fester-zeitraum",
    "url": "/d/qBf7NNBIz/wip-webandapp-dashboard-fester-zeitraum",
    "expires": "0001-01-01T00:00:00Z",
    "created": "2024-06-20T11:48:10Z",
    "updated": "2024-08-15T14:52:27Z",
    "updatedBy": "bernd kuch dev",
    "createdBy": "Anonymous",
    "version": 6,
    "hasAcl": false,
    "isFolder": false,
    "folderId": 1185,
    "folderUid": "folder-eyYMKsQIk",
    "folderTitle": "Archive_delete_30-09-2024",
    "folderUrl": "/dashboards/f/folder-eyYMKsQIk/archive-delete-30-09-2024",
    "provisioned": false,
    "provisionedExternalId": "",
    "annotationsPermissions": {
      "dashboard": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      },
      "organization": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      }
    }
  },
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 871,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 6,
        "panels": [],
        "title": "Verlaufsdiagramme",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 1
        },
        "id": 2,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const categoryColors = {\n  'A': '#82E0BB',\n  'B': '#0062A9'\n}\n\nlet sAxis = 'time';\nlet sType = 'line';\nlet sGap = true;\n\nconst series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.name === 'm_visits').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.name === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  const sName = s.fields.find((f) => f.name === 'Zeitraum').values.buffer\n\n  if (sName[0] == 'Letztes Wochenende' || sName[0] == 'Vorletztes Wochenende') {\n    sAxis = 'category';\n    sGap = false;\n  };\n\n  return {\n    name: sName[0],\n    type: 'line',\n    showSymbol: false,\n    smooth: true,\n    areaStyle: {\n      opacity: 0.5,\n    },\n    lineStyle: {\n      width: 2,\n    },\n    itemStyle: {\n      color: categoryColors[s.refId] || '#000',\n      opacity: 0.9, // Standardfarbe, falls keine Kategorie vorhanden ist\n    },\n    data: sData.map((d, i) => [sTime[i], d]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    //extraCssText: 'text-align: justify;',\n    formatter: function (params) {\n      let prettyClock = '';\n      let dateString = params[0].value[0].toString();\n      let day = dateString.substr(8, 2);\n      let month = dateString.substr(5, 2);\n      let year = dateString.substr(0, 4);\n      if (params[0].seriesName == 'Heute' || params[0].seriesName == 'Gestern') {\n        prettyClock = dateString.substr(11, 5);\n      };\n      let newDate = day + '.' + month + '.' + year;\n      let tooltipContent = '<span style=\"font-weight:bold;\">' + newDate + ' ' + prettyClock + '</span><br/>';\n      params.forEach(function (item) {\n        let number = item.value[1];\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n        tooltipContent += item.marker + item.seriesName + ': <span style=\"font-weight:bold;\">' + formattedNumber + '</span><br/>';\n      });\n      return tooltipContent\n    },\n    //formatter: '{a0}: {b0}<br/> {a1}: '\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    //data: ,\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: \"time\",\n    min: 'dataMin', \n    //data: sData,\n  },\n  yAxis: {\n    type: 'value',\n    min: 10,\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    },\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '10%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          }
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "dataset": "Piano",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with now as (\r\n  With A as (\r\n    SELECT\r\n      CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 7 Tage' THEN 0\r\n        ELSE m_visits\r\n      END as m_visits,\r\n      $fevergranularity as time,\r\n      date\r\n    FROM\r\n      `ndr-code-bi-dashboard.Piano.total_visits${table_fever_curve}`\r\n    WHERE\r\n      $webFilter\r\n      AND DATE(tmstp) >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH)\r\n      AND DATE(tmstp) <= CURRENT_DATE()\r\n      AND CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 30 Tage' THEN DATE(tmstp) < DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\r\n        ELSe TRUE\r\n        END\r\n  ),\r\n  B as (\r\n    SELECT\r\n      CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 7 Tage' THEN MAX(m_visits)\r\n        WHEN 'Letzte 30 Tage' THEN MAX(m_visits)\r\n        ELSE 0\r\n      END as m_visits,\r\n      date as time,\r\n      date\r\n    FROM\r\n      `ndr-code-bi-dashboard.Piano.total_visits_today_append`\r\n    WHERE\r\n      $webFilter\r\n      AND CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 30 Tage' THEN date = CURRENT_DATE()\r\n        OR date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\r\n        ELSE TRUE\r\n      END\r\n    GROUP BY\r\n      date\r\n  )\r\n  SELECT\r\n    *\r\n  FROM\r\n    A\r\n  UNION\r\n  ALL\r\n  SELECt\r\n    *\r\n  FROM\r\n    B\r\n),\r\ndata as (\r\n  SELECT\r\n    sum(m_visits) as m_visits,\r\n    $granularity as time,\r\n    '${Zeitraum:text}' as Zeitraum\r\n  FROM\r\n    now\r\n  WHERE\r\n    $Zeitraum\r\n    AND $newZeitraum\r\n  GROUP BY\r\n    time\r\n)\r\nSELECT\r\n  CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte 30 Tage' THEN DATE_SUB(time, INTERVAL 1 DAY)\r\n    ELSE time\r\n    END AS time,\r\n  Zeitraum,\r\n  CASE\r\n    '${Zeitraum:text}'\r\n    WHEN 'Heute' THEN IF(\r\n      (\r\n        m_visits - LAG(m_visits) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      ) < 0,\r\n      0,\r\n      (\r\n        m_visits - LAG(m_visits) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      )\r\n    )\r\n    WHEN 'Gestern' THEN IF(\r\n      (\r\n        m_visits - LAG(m_visits) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      ) < 0,\r\n      0,\r\n      (\r\n        m_visits - LAG(m_visits) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      )\r\n    )\r\n    ELSE IF(m_visits < 0, 0, m_visits)\r\n  ENd as m_visits\r\nFROM\r\n  data\r\n  WHERE m_visits > 0\r\nORDER BY\r\n  time ASC",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "*",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "898a98b9-cdef-4012-b456-718f0afd79be": {
                    "properties": {
                      "field": "site_level2",
                      "operator": "equal",
                      "value": [
                        "$LRA"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "99988abb-4567-489a-bcde-f18f0b1b484d": {
                    "properties": {
                      "field": "page_chapter2",
                      "operator": "equal",
                      "value": [
                        "$Unterkapitel"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "a999aba9-0123-4456-b89a-b18f0b1bb814": {
                    "properties": {
                      "field": "sendungs_id",
                      "operator": "equal",
                      "value": [
                        "$Sendung"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "abb8a88a-89ab-4cde-b012-318f0b1b20fb": {
                    "properties": {
                      "field": "page_chapter1",
                      "operator": "equal",
                      "value": [
                        "$Redaktionen"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b988b9bb-0123-4456-b89a-b18f0afd79be",
                "type": "group"
              },
              "whereString": "(site_level2 = '$LRA' AND page_chapter1 = '$Redaktionen' AND page_chapter2 = '$Unterkapitel' AND sendungs_id = '$Sendung')"
            },
            "table": "total_visits"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with past as (\r\n  SELECT\r\n    m_visits,\r\n    datetime_add(\r\n      datetime($fevergranularity),\r\n      INTERVAL $Tage $Einheit\r\n    ) as time,\r\n    date_ADD(date, INTERVAL $Tage $Einheit) as date\r\n  FROM\r\n    `ndr-code-bi-dashboard.Piano.total_visits${table_fever_curve}`\r\n  WHERE\r\n    $webFilter --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n),\r\ndata as (\r\n  SELECT\r\n    sum(m_visits) as m_visits,\r\n    $granularity as time,\r\n    '${Vergleichszeitraum:text}' as Zeitraum\r\n  FROM\r\n    past\r\n  WHERE\r\n    CASE\r\n      '${Zeitraum:text}'\r\n      WHEN 'Letzte 7 Tage' THEN date <= DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\r\n      ELSE $Zeitraum\r\n    END\r\n    AND $newZeitraum\r\n  GROUP BY\r\n    time\r\n)\r\nSELECT\r\n  CASE\r\n    '${Zeitraum:text}'\r\n    WHEN 'Letzte 7 Tage' THEN DATE_SUB(time, INTERVAL 1 DAY)\r\n    ELSE time\r\n  END as time,\r\n  Zeitraum,\r\n  CASE\r\n    '${Zeitraum:text}'\r\n    WHEN 'Heute' THEN IF(\r\n      (\r\n        m_visits - LAG(m_visits) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      ) < 0,\r\n      0,\r\n      (\r\n        m_visits - LAG(m_visits) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      )\r\n    )\r\n    WHEN 'Gestern' THEN IF(\r\n      (\r\n        m_visits - LAG(m_visits) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      ) < 0,\r\n      0,\r\n      (\r\n        m_visits - LAG(m_visits) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      )\r\n    )\r\n    ELSE IF(m_visits < 0, 0, m_visits)\r\n  ENd as m_visits\r\nFROM\r\n  data\r\nORDER BY\r\n  time ASC\r\n",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Visits - Web - Verlaufsdiagramm",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 1
        },
        "id": 3,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 550
          },
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const categoryColors = {\n  'A': '#82E0BB',\n  'B': '#0062A9'\n}\nlet sAxis = 'time';\nlet sType = 'line';\n\nconst series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.name === 'm_av_playbacks').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.name === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  const sName = s.fields.find((f) => f.name === 'Zeitraum').values.buffer;\n\n  if (sName[0] == 'Heute' || sName[0] == 'Gestern' || sName[0] == 'Vorgestern') {\n    sType = 'bar';\n    sAxis = 'category';\n  };\n\n  return {\n    name: sName[0],\n    type: sType,\n    smooth: true,\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.5,\n    },\n    lineStyle: {\n      width: 2,\n    },\n    itemStyle: {\n      color: categoryColors[s.refId] || '#000',\n      opacity: 0.9, // Standardfarbe, falls keine Kategorie vorhanden ist\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    //extraCssText: 'text-align: justify;',\n    formatter: function (params) {\n      let dateString = params[0].value[0].toString();\n      let day = dateString.substr(8, 2);\n      let month = dateString.substr(5, 2);\n      let year = dateString.substr(0, 4);\n      let newDate = day + '.' + month + '.' + year;\n      let tooltipContent = '<span style=\"font-weight:bold;\">' + newDate + '</span><br/>';\n      params.forEach(function (item) {\n        let number = item.value[1];\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n        tooltipContent += item.marker + item.seriesName + ': <span style=\"font-weight:bold;\">' + formattedNumber + '</span><br/>';\n      });\n      return tooltipContent\n    },\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    //data: ,\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: sAxis,\n  },\n  yAxis: {\n    type: 'value',\n    //min: 'dataMin',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    },\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '10%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          }
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "dataset": "Piano",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with now as \r\n(SELECT sum(m_av_playbacks) as m_av_playbacks, datetime(tmstp) as time\r\nFROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\nWHERE \r\n  ($avwebFilter\r\n  --AND sendungs_id = '$Sendung'\r\n  )\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  GROUP BY time \r\n)\r\nSELECT m_av_playbacks, date(time) as time, '${Zeitraum:text}' as Zeitraum\r\nFROM now \r\nWHERE $Zeitraum\r\nORDER BY time",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "898a98b9-cdef-4012-b456-718f0afd79be": {
                    "properties": {
                      "value": [],
                      "valueSrc": []
                    },
                    "type": "rule"
                  }
                },
                "id": "b988b9bb-0123-4456-b89a-b18f0afd79be",
                "type": "group"
              }
            },
            "table": "av"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with old as \r\n(SELECT sum(m_av_playbacks) as m_av_playbacks, DATETIME_ADD(datetime(tmstp), INTERVAL $Tage $Einheit) as time\r\nFROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\nWHERE \r\n  ($avwebFilter  )\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  GROUP BY time \r\n)\r\nSELECT m_av_playbacks, \r\ndate(time) as time,\r\n '${Vergleichszeitraum:text}' as Zeitraum\r\nFROM old \r\nWHERE $Zeitraum\r\nORDER BY time",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Wiedergaben - Web - Verlaufsdiagramm",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 2,
          "w": 12,
          "x": 0,
          "y": 7
        },
        "id": 11,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 2,
          "w": 9,
          "x": 14,
          "y": 7
        },
        "id": 9,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "#### AV Daten aktuell nur für MDR Apps verfügbar\n##### ${hinweis_zeitraum}\n",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 9
        },
        "id": 10,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 10
        },
        "id": 4,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 1604
          },
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const categoryColors = {\n  'A': '#A8DAD2',\n  'B': '#0D9685'\n}\n\nconst series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.name === 'm_visits').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.name === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  const sName = s.fields.find((f) => f.name === 'Zeitraum').values.buffer\n\n  return {\n    name: sName[0],\n    type: 'line',\n    showSymbol: false,\n    smooth: true,\n    areaStyle: {\n      opacity: 0,\n    },\n    lineStyle: {\n      width: 2,\n    },\n    itemStyle: {\n      color: categoryColors[s.refId] || '#000',\n      opacity: 0.9, // Standardfarbe, falls keine Kategorie vorhanden ist\n    },\n    data: sData.map((d, i) => [sTime[i], d]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    formatter: function (params) {\n      let dateString = params[0].value[0].toString();\n      let day = dateString.substr(8, 2);\n      let month = dateString.substr(5, 2);\n      let year = dateString.substr(0, 4);\n      let newDate = day + '.' + month + '.' + year;\n      let tooltipContent = '<span style=\"font-weight:bold;\">' + newDate + '</span><br/>';\n      params.forEach(function (item) {\n        let number = item.value[1];\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n        tooltipContent += item.marker + item.seriesName + ': <span style=\"font-weight:bold;\">' + formattedNumber + '</span><br/>';\n      });\n      return tooltipContent\n    },\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    //data: ,\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    //min: 'dataMin',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    },\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '10%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          }
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "dataset": "Piano",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with now as (\r\n  WITH A AS (\r\n    SELECT\r\n      CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 7 Tage' THEN 0\r\n        ELSE m_visits\r\n      END as m_visits,\r\n      DATETIME($fevergranularity) as time,\r\n      date\r\n    FROM\r\n      `ndr-code-bi-dashboard.Piano.total_visits${table_fever_curve}`\r\n    WHERE\r\n      ($webFilter)\r\n      AND CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 30 Tage' THEN DATE(tmstp) < DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\r\n        ELSe TRUE\r\n      END\r\n  ),\r\n  B as (\r\n    SELECT\r\n      CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 7 Tage' THEN MAX(m_visits)\r\n        WHEN 'Letzte 30 Tage' THEN MAX(m_visits)\r\n        ELSE 0\r\n      END as m_visits,\r\n      date as time,\r\n      date\r\n    FROM\r\n      `ndr-code-bi-dashboard.Piano.total_visits_today_append`\r\n    WHERE\r\n      $webFilter\r\n      AND CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 30 Tage' THEN date = CURRENT_DATE()\r\n        OR date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\r\n        ELSE TRUE\r\n      END\r\n    GROUP BY\r\n      date\r\n  )\r\n  SELECT\r\n    *\r\n  FROM\r\n    A\r\n  UNION\r\n  ALL\r\n  SELECt\r\n    *\r\n  FROM\r\n    B\r\n),\r\ndata as (\r\n  SELECT\r\n    sum(m_visits) as m_visits,\r\n    $granularity as time,\r\n    'Web' as Zeitraum\r\n  FROM\r\n    now --WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n  WHERE\r\n    $Zeitraum\r\n    AND $newZeitraum\r\n  GROUP BY\r\n    time\r\n)\r\nSELECT\r\n  CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte 30 Tage' THEN DATE_SUB(time, INTERVAL 1 DAY)\r\n    ELSE time\r\n    END AS time,\r\n  Zeitraum,\r\n  CASE\r\n    '${Zeitraum:text}'\r\n    WHEN 'Heute' THEN IF(\r\n      (\r\n        IFNULL(m_visits, 0) - LAG(IFNULL(m_visits, 0)) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      ) < 0,\r\n      0,\r\n      (\r\n        IFNULL(m_visits, 0) - LAG(IFNULL(m_visits, 0)) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      )\r\n    )\r\n    WHEN 'Gestern' THEN IF(\r\n      (\r\n        IFNULL(m_visits, 0) - LAG(IFNULL(m_visits, 0)) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      ) < 0,\r\n      0,\r\n      (\r\n        IFNULL(m_visits, 0) - LAG(IFNULL(m_visits, 0)) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      )\r\n    )\r\n    ELSE IF(IFNULL(m_visits, 0) < 0, 0, IFNULL(m_visits, 0))\r\n  ENd as m_visits\r\nFROM\r\n  data\r\nWHERE m_visits >0\r\nORDER BY\r\n  time ASC",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "*",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "898a98b9-cdef-4012-b456-718f0afd79be": {
                    "properties": {
                      "field": "site_level2",
                      "operator": "equal",
                      "value": [
                        "$LRA"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "99988abb-4567-489a-bcde-f18f0b1b484d": {
                    "properties": {
                      "field": "page_chapter2",
                      "operator": "equal",
                      "value": [
                        "$Unterkapitel"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "a999aba9-0123-4456-b89a-b18f0b1bb814": {
                    "properties": {
                      "field": "sendungs_id",
                      "operator": "equal",
                      "value": [
                        "$Sendung"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "abb8a88a-89ab-4cde-b012-318f0b1b20fb": {
                    "properties": {
                      "field": "page_chapter1",
                      "operator": "equal",
                      "value": [
                        "$Redaktionen"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b988b9bb-0123-4456-b89a-b18f0afd79be",
                "type": "group"
              },
              "whereString": "(site_level2 = '$LRA' AND page_chapter1 = '$Redaktionen' AND page_chapter2 = '$Unterkapitel' AND sendungs_id = '$Sendung')"
            },
            "table": "total_visits"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with now as (\r\n  WITH A AS (\r\n    SELECT\r\n      CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 7 Tage' THEN 0\r\n        ELSE m_visits\r\n      END as m_visits,\r\n      DATETIME($fevergranularity) as time,\r\n      date\r\n    FROM\r\n      `ndr-code-bi-dashboard.Piano.total_visits${table_fever_curve}`\r\n    WHERE\r\n      ($appFilter)\r\n      AND CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 30 Tage' THEN DATE(tmstp) < DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\r\n        ELSe TRUE\r\n      END\r\n  ),\r\n  B AS (\r\n    SELECT\r\n      CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 7 Tage' THEN MAX(m_visits)\r\n        WHEN 'Letzte 30 Tage' THEN MAX(m_visits)\r\n        ELSE 0\r\n      END as m_visits,\r\n      date as time,\r\n      date\r\n    FROM\r\n      `ndr-code-bi-dashboard.Piano.total_visits_today_append`\r\n    WHERE\r\n      $appFilter\r\n      AND CASE\r\n        '${Zeitraum:text}'\r\n        WHEN 'Letzte 30 Tage' THEN date = CURRENT_DATE()\r\n        OR date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\r\n        ELSE TRUE\r\n      END\r\n    GROUP BY\r\n      date\r\n  )\r\n  SELECT\r\n    *\r\n  FROM\r\n    A\r\n  UNION\r\n  ALL\r\n  SELECt\r\n    *\r\n  FROM\r\n    B\r\n),\r\ndata as (\r\n  SELECT\r\n    DISTINCT(sum(m_visits)) as m_visits,\r\n    $granularity as time,\r\n    'App' as Zeitraum\r\n  FROM\r\n    now --WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n  WHERE\r\n    $Zeitraum\r\n    AND $newZeitraum\r\n  GROUP BY\r\n    time\r\n)\r\nSELECT\r\n  CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte 30 Tage' THEN DATE_SUB(time, INTERVAL 1 DAY)\r\n    ELSE time\r\n    END AS time,\r\n  Zeitraum,\r\n  CASE\r\n    '${Zeitraum:text}'\r\n    WHEN 'Heute' THEN IF(\r\n      (\r\n        IFNULL(m_visits, 0) - LAG(IFNULL(m_visits, 0)) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      ) < 0,\r\n      0,\r\n      (\r\n        IFNULL(m_visits, 0) - LAG(IFNULL(m_visits, 0)) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      )\r\n    )\r\n    WHEN 'Gestern' THEN IF(\r\n      (\r\n        IFNULL(m_visits, 0) - LAG(IFNULL(m_visits, 0)) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      ) < 0,\r\n      0,\r\n      (\r\n        IFNULL(m_visits, 0) - LAG(IFNULL(m_visits, 0)) OVER (\r\n          PARTITION BY Zeitraum\r\n          ORDER BY\r\n            time ASC\r\n        )\r\n      )\r\n    )\r\n    ELSE IF(IFNULL(m_visits, 0) < 0, 0, IFNULL(m_visits, 0))\r\n  ENd as m_visits\r\nFROM\r\n  data\r\n  WHERE m_visits >0\r\nORDER BY\r\n  time ASC",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Visits Web&App | ${Zeitraum:text}",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "Daten nur für MDR Apps verfügbar",
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 10
        },
        "id": 7,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 693
          },
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const categoryColors = {\n  'A': '#A8DAD2',\n  'B': '#0D9685'\n};\n\nlet sAxis = 'time';\nlet sType = 'line';\n\nconst series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.name === 'm_av_playbacks').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.name === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  const sName = s.fields.find((f) => f.name === 'Zeitraum').values.buffer\n  const sTypeArray = s.fields.find((f) => f.name === 'Darstellung').values.buffer || s.fields.find((f) => f.name === 'Darstellung').values;\n\n  if (sTypeArray[0] == 'Heute' || sTypeArray[0] == 'Gestern' || sTypeArray[0] == 'Vorgestern') {\n    sType = 'bar';\n    sAxis = 'category';\n  };\n\n  return {\n    name: sName[0],\n    //type: 'line',\n    type: sType,\n    showSymbol: false,\n    smooth: true,\n    areaStyle: {\n      opacity: 0,\n    },\n    lineStyle: {\n      width: 2,\n    },\n    itemStyle: {\n      color: categoryColors[s.refId] || '#000',\n      opacity: 0.9, // Standardfarbe, falls keine Kategorie vorhanden ist\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    formatter: function (params) {\n      let dateString = params[0].value[0].toString();\n      let day = dateString.substr(8, 2);\n      let month = dateString.substr(5, 2);\n      let year = dateString.substr(0, 4);\n      let newDate = day + '.' + month + '.' + year;\n      let tooltipContent = '<span style=\"font-weight:bold;\">' + newDate + '</span><br/>';\n      params.forEach(function (item) {\n        let number = item.value[1];\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n        tooltipContent += item.marker + item.seriesName + ': <span style=\"font-weight:bold;\">' + formattedNumber + '</span><br/>';\n      });\n      return tooltipContent\n    },\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    //data: ,\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    //type: 'time',\n    type: sAxis,\n  },\n  yAxis: {\n    type: 'value',\n    //min: 'dataMin',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    },\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '10%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          }
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "dataset": "Piano",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with data as (\r\n  SELECT sum(m_av_playbacks) as m_av_playbacks, \r\n  datetime(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE ($avwebFilter) \r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  GROUP BY time \r\n)\r\nSELECT \r\n  m_av_playbacks, \r\n  date(time) as time, \r\n  'Web' as Zeitraum, \r\n  '${Zeitraum:text}' as Darstellung\r\nFROM data \r\n--WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\nWHERE $Zeitraum\r\nORDER BY time",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "*",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "898a98b9-cdef-4012-b456-718f0afd79be": {
                    "properties": {
                      "field": "site_level2",
                      "operator": "equal",
                      "value": [
                        "$LRA"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "99988abb-4567-489a-bcde-f18f0b1b484d": {
                    "properties": {
                      "field": "page_chapter2",
                      "operator": "equal",
                      "value": [
                        "$Unterkapitel"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "a999aba9-0123-4456-b89a-b18f0b1bb814": {
                    "properties": {
                      "field": "sendungs_id",
                      "operator": "equal",
                      "value": [
                        "$Sendung"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "abb8a88a-89ab-4cde-b012-318f0b1b20fb": {
                    "properties": {
                      "field": "page_chapter1",
                      "operator": "equal",
                      "value": [
                        "$Redaktionen"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b988b9bb-0123-4456-b89a-b18f0afd79be",
                "type": "group"
              },
              "whereString": "(site_level2 = '$LRA' AND page_chapter1 = '$Redaktionen' AND page_chapter2 = '$Unterkapitel' AND sendungs_id = '$Sendung')"
            },
            "table": "total_visits"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with app as (\r\n  SELECT sum(m_av_playbacks) as m_av_playbacks, datetime(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE ${av_condition}\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n     GROUP BY time \r\n)\r\nSELECT m_av_playbacks, DATE(time) as time, 'App' as Zeitraum, '${Zeitraum:text}' as Darstellung\r\nFROM app \r\nWHERE $Zeitraum\r\n--GROUP BY time\r\nORDER BY time\r\n",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Wiedergaben Web&App | ${Zeitraum:text}",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 16
        },
        "id": 49,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 18
        },
        "id": 14,
        "panels": [],
        "title": "KPI Boxes",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 19
        },
        "id": 19,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Visits",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 4,
          "y": 19
        },
        "id": 20,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 40
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Pageviews / Visits",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 9,
          "y": 19
        },
        "id": 21,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 40
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Time spent  /  Visit in s",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 14,
          "y": 19
        },
        "id": 22,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 40
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Audio- & Videostarts",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 19,
          "y": 19
        },
        "id": 23,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 40
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 4,
          "x": 0,
          "y": 22
        },
        "id": 16,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 54
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 3,
          "x": 4,
          "y": 22
        },
        "id": 24,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\nwith w as (\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n    WHERE $webFilter AND $newZeitraum),\r\na as (\r\n  SELECT  SUM(m_visits) as m_visits, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${table_fever_curve}` \r\n  WHERE $appFilter AND $newZeitraum\r\n  GROUP BY site_level2, tmstp\r\n  ORDER BY m_visits DESC\r\n  LIMIT 1)\r\n\r\n\r\nSELECT  w.m_visits + a.m_visits as Zeitraum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 7,
          "y": 22
        },
        "id": 25,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 18
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM (\r\n      SELECT DATE_ADD(date, INTERVAL ${Tage} ${Einheit}) as date, m_visits\r\n      FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n      WHERE $webFilter \r\n    )\r\n    WHERE $newZeitraum\r\n),\r\na as (\r\n  SELECT  SUM(m_visits) as m_visits, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${table_fever_curve}` \r\n  WHERE $appFilter AND $newZeitraum\r\n  GROUP BY site_level2, tmstp\r\n  ORDER BY m_visits DESC\r\n  LIMIT 1\r\n    )\r\nSELECT  w.m_visits + a.m_visits as Zeitraum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n\r\n\r\n\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 3,
          "x": 9,
          "y": 22
        },
        "id": 31,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\nwith w as (\r\n  SELECT m_visits, date, m_page_loads, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE \r\n    ($webFilter\r\n    AND $newZeitraum \r\n    ) \r\n),\r\na as (\r\n  SELECT m_visits, date, m_page_loads, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE $appFilter\r\n  AND $newZeitraum \r\n)\r\nSELECT REPLACE( CAST(ROUND(SUM(w.m_page_loads+a.m_page_loads)/SUM(w.m_visits + a.m_visits),2) as string), '.', ',') as Zeitraum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 12,
          "y": 22
        },
        "id": 32,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 18
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\nwith w as (\r\n  SELECT SUM(m_visits) as m_visits, sum(m_page_loads) as m_page_loads, 1 as id\r\n  FROM (\r\n      SELECT m_visits, datetime_add(datetime(date), INTERVAL ${Tage} ${Einheit}) as date, m_page_loads \r\n      FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n      WHERE \r\n        $webFilter\r\n      ) \r\n  --WHERE $Zeitraum\r\n  WHERE $newZeitraum  \r\n  ),\r\na as (\r\n  SELECT SUM(m_visits) as m_visits, 1 as id,sum(m_page_loads) as m_page_loads\r\n  FROM(\r\n    SELECT datetime_add(datetime(date), INTERVAL ${Tage} ${Einheit}) as date, m_visits, m_page_loads\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n    WHERE $appFilter)\r\n  WHERE $newZeitraum  \r\n  )\r\n\r\nSELECT REPLACE( CAST(ROUND(SUM(w.m_page_loads+a.m_page_loads)/SUM(w.m_visits + a.m_visits),2) as string), '.', ',') as Zeitraum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 3,
          "x": 14,
          "y": 22
        },
        "id": 38,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n    --Select 'N/A' as Zeitraum\r\n  with now as (SELECT m_time_spent_per_visits, m_visits, date--time(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE $webFilter \r\n  )\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM now \r\n  --WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n  WHERE $newZeitraum\r\n),\r\na as(\r\n    --Select 'N/A' as Zeitraum\r\n\r\n  with now as (SELECT m_time_spent_per_visits, m_visits, date--time(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE \r\n    ($appFilter\r\n    --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    ) \r\n  )\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM now \r\n  --WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n   WHERE $newZeitraum\r\n)\r\nSELECT  CONCAT(REPLACE(CAST(ROUND((a.time_spent + w.time_spent)/(a.visits + w.visits),1) as STRING), '.', ','), ' Sek.') as Zeitraum\r\nFROM w \r\nJOIN a ON w.id = a.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 17,
          "y": 22
        },
        "id": 33,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 18
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n    --Select 'N/A' as Zeitraum\r\n  with now as (SELECT m_time_spent_per_visits, m_visits, DATE_ADD(date, INTERVAL $Tage $Einheit) as date--time(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE $webFilter \r\n  )\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM now \r\n  --WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n  WHERE $newZeitraum\r\n),\r\na as(\r\n    --Select 'N/A' as Zeitraum\r\n\r\n  with now as (SELECT m_time_spent_per_visits, m_visits, DATE_ADD(datetime(date), INTERVAL $Tage $Einheit) as date--time(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE \r\n    ($appFilter\r\n    --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    ) \r\n  )\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM now \r\n  --WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n   WHERE $newZeitraum\r\n)\r\nSELECT  CONCAT(REPLACE(CAST(ROUND((a.time_spent + w.time_spent)/(a.visits + w.visits),1) as STRING), '.', ','), ' Sek.') as Zeitraum\r\nFROM w \r\nJOIN a ON w.id = a.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 3,
          "x": 19,
          "y": 22
        },
        "id": 39,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as \r\n(\r\n  SELECT \r\n    sum(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`  \r\n  WHERE $newZeitraum AND $avwebFilter\r\n),\r\napp as (\r\n  SELECT \r\n    SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`  \r\n  WHERE ${av_condition} AND $newZeitraum \r\n )\r\nSELECT SUM(web.Zeitraum) + SUM(app.Zeitraum) as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 22,
          "y": 22
        },
        "id": 34,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 18
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with data_web as \r\n(\r\n  SELECT sum(m_av_playbacks) as m_av_playbacks, DATE_ADD(datetime(date), INTERVAL $Tage $Einheit) as date\r\n  FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n  WHERE $avwebFilter\r\n  AND date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    GROUP BY date \r\n),\r\nweb as (\r\n  SELECT \r\n  sum(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_web\r\n  WHERE $newZeitraum),\r\ndata_app as (\r\n  SELECT m_av_playbacks, DATE_ADD(datetime(date), INTERVAL $Tage $Einheit) as date\r\n  FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n  WHERE ${av_condition}\r\n  AND date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n),\r\napp as (\r\n  SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_app \r\n  WHERE $newZeitraum\r\n)\r\nSELECT web.Zeitraum + app.Zeitraum as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Differenz"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 7,
          "y": 26
        },
        "id": 26,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 18
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\nwith w as (\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n    WHERE $webFilter AND $newZeitraum),\r\na as (\r\n  SELECT  SUM(m_visits) as m_visits, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${table_fever_curve}` \r\n  WHERE $appFilter AND $newZeitraum\r\n  GROUP BY site_level2, tmstp\r\n  ORDER BY m_visits DESC\r\n  LIMIT 1),\r\n\r\nnew_data as (SELECT  w.m_visits + a.m_visits as Zeitraum, 2 as id\r\nFROM w \r\nJOIN a ON w.id = a.id),\r\n--Select 'N/A' as Zeitraum\r\nw_old as (\r\n    SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM (\r\n      SELECT DATE_ADD(date, INTERVAL ${Tage} ${Einheit}) as date, m_visits\r\n      FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n      WHERE $webFilter \r\n    )\r\n    WHERE $newZeitraum),\r\na_old as (\r\n  SELECT  SUM(m_visits) as m_visits, 1 as id\r\n    FROM (\r\n      SELECT DATE_ADD(date, INTERVAL ${Tage} ${Einheit}) as date, m_visits, site_level2, tmstp\r\n      FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n      WHERE $appFilter\r\n    )\r\n    WHERE $newZeitraum \r\n    GROUP BY site_level2, tmstp\r\n  ORDER BY m_visits DESC\r\n  LIMIT 1),\r\nold_data as (SELECT  w_old.m_visits + a_old.m_visits as Zeitraum, 2 as id\r\nFROM w_old\r\nJOIN a_old ON w_old.id = a_old.id)\r\nSELECT CONCAT(IF(ROUND(((new_data.Zeitraum / old_data.Zeitraum )-1)*100,1)>0, '+', ''),REPLACE(CAST(ROUND(((new_data.Zeitraum / old_data.Zeitraum )-1)*100,1) as STRING), '.', ','),' %') as Differenz\r\nFROM new_data\r\nJOIN old_data\r\nON new_data.id = old_data.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Differenz"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 12,
          "y": 26
        },
        "id": 35,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 18
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\nwith w as (\r\n  SELECT m_visits, date, m_page_loads, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE \r\n    ($webFilter\r\n    AND $newZeitraum \r\n    ) \r\n),\r\na as (\r\n  SELECT m_visits, date, m_page_loads, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE $appFilter\r\n  AND $newZeitraum \r\n),\r\nnew_data as (SELECT SUM(w.m_page_loads+a.m_page_loads)/SUM(w.m_visits + a.m_visits) as Zeitraum, 2 as id\r\nFROM w \r\nJOIN a ON w.id = a.id),\r\n--Select 'N/A' as Zeitraum\r\nw_old as (\r\n  SELECT SUM(m_visits) as m_visits, sum(m_page_loads) as m_page_loads, 1 as id\r\n  FROM (\r\n      SELECT m_visits, datetime_add(datetime(date), INTERVAL ${Tage} ${Einheit}) as date, m_page_loads \r\n      FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n      WHERE \r\n        $webFilter\r\n      ) \r\n  --WHERE $Zeitraum\r\n  WHERE $newZeitraum  \r\n  ),\r\na_old as (\r\n  SELECT SUM(m_visits) as m_visits, 1 as id,sum(m_page_loads) as m_page_loads\r\n  FROM(\r\n    SELECT datetime_add(datetime(date), INTERVAL ${Tage} ${Einheit}) as date, m_visits, m_page_loads\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n    WHERE $appFilter)\r\n  WHERE $newZeitraum  \r\n  ),\r\nold_data as (SELECT  ROUND((w_old.m_page_loads+a_old.m_page_loads)/(w_old.m_visits + a_old.m_visits),6) as Zeitraum, 2 as id\r\nFROM w_old\r\nJOIN a_old ON w_old.id = a_old.id)\r\nSELECT CONCAT(IF(ROUND(((new_data.Zeitraum / old_data.Zeitraum )-1)*100,2)>0, '+', ''),REPLACE(CAST(ROUND(((new_data.Zeitraum / old_data.Zeitraum )-1)*100,2) as STRING), '.', ','),' %') as Differenz\r\nFROM new_data\r\nJOIN old_data\r\nON new_data.id = old_data.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Differenz"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 17,
          "y": 26
        },
        "id": 36,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 18
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n    --Select 'N/A' as Zeitraum\r\n  with now as (SELECT m_time_spent_per_visits, m_visits, DATE_ADD(date, INTERVAL $Tage $Einheit) as date--time(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE $webFilter \r\n  )\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM now \r\n  --WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n  WHERE $newZeitraum\r\n),\r\na as(\r\n    --Select 'N/A' as Zeitraum\r\n\r\n  with now as (SELECT m_time_spent_per_visits, m_visits, DATE_ADD(datetime(date), INTERVAL $Tage $Einheit) as date--time(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE \r\n    ($appFilter\r\n    ) \r\n  )\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM now \r\n   WHERE $newZeitraum\r\n),\r\ndata_old as (SELECT  ((w.time_spent + a.time_spent)/(w.visits + a.visits)) as Zeitraum, 2 as id\r\nFROM w \r\nJOIN a ON w.id = a.id),\r\nw_new as (\r\n    --Select 'N/A' as Zeitraum\r\n  with now as (SELECT m_time_spent_per_visits, m_visits, date--time(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE $webFilter \r\n  )\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM now \r\n  --WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n  WHERE $newZeitraum\r\n),\r\na_new as(\r\n    --Select 'N/A' as Zeitraum\r\n\r\n  with now as (SELECT m_time_spent_per_visits, m_visits, date--time(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE \r\n    ($appFilter\r\n    --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    ) \r\n  )\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM now \r\n  --WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n   WHERE $newZeitraum\r\n),\r\ndata_new as (\r\n  SELECT  ((w_new.time_spent + a_new.time_spent)/(w_new.visits + a_new.visits)) as Zeitraum, 2 as id\r\n  FROM w_new \r\n  JOIN a_new ON w_new.id = a_new.id)\r\n\r\nSELECT CONCAT(IF(ROUND(((data_new.Zeitraum/data_old.Zeitraum)-1)*100,2)>0, '+',''),REPLACE(CAST(ROUND(((data_new.Zeitraum/data_old.Zeitraum)-1)*100,2) as STRING), '.', ','), '%') as Differenz\r\nfrom data_old\r\njoin data_new\r\non data_old.id = data_new.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 22,
          "y": 26
        },
        "id": 37,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 18
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with old as (with data_web as \r\n  (SELECT sum(m_av_playbacks) as m_av_playbacks, DATETIME(DATE_ADD(date(date), INTERVAL $Tage $Einheit)) as date, \r\n  FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n  WHERE \r\n    ($avwebFilter\r\n    )\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    GROUP BY date \r\n  ),\r\n  web as (\r\n    SELECT \r\n    sum(m_av_playbacks) as Zeitraum, 1 as id\r\n    FROM data_web\r\n    WHERE $newZeitraum),\r\n  data_app as (SELECT m_av_playbacks, DATETIME(DATE_ADD(date(date), INTERVAL $Tage $Einheit)) as date, \r\n  FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n  WHERE ${av_condition}\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  ),\r\n  app as (SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_app \r\n  WHERE $newZeitraum )\r\n  SELECT SUM(web.Zeitraum) + SUM(app.Zeitraum) as Zeitraum, 2 as id\r\n  FROM web\r\n  JOIN app\r\n  ON web.id = app.id\r\n),\r\nnew_data as (\r\n    with data_web as \r\n  (SELECT sum(m_av_playbacks) as m_av_playbacks, datetime(date) as date\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE \r\n    $avwebFilter\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    GROUP BY date \r\n  ),\r\n  web as (\r\n    SELECT \r\n    sum(m_av_playbacks) as Zeitraum, 1 as id\r\n    FROM data_web\r\n    WHERE $newZeitraum ),\r\n  data_app as (SELECT m_av_playbacks, DATETIME(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE ${av_condition}\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  ),\r\n  app as (SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_app \r\n  WHERE $Zeitraum )\r\n  SELECT SUM(web.Zeitraum) + SUM(app.Zeitraum) as Zeitraum, 2 as id\r\n  FROM web\r\n  JOIN app\r\n  ON web.id = app.id\r\n\r\n\r\n\r\n)\r\nSELECT CONCAT(IF(ROUND(((new_data.Zeitraum / old.Zeitraum)-1)*100,1)>0, '+', ''),REPLACE(CAST(ROUND(((new_data.Zeitraum / old.Zeitraum)-1)*100,1) as string), '.', ','), ' %') as Zeitraum\r\nFROM old\r\nJOIN new_data\r\nON old.id = new_data.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 30
        },
        "id": 17,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 54
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 30
        },
        "id": 60,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\n--with now as (\r\n--  SELECT m_visits, datetime(tmstp) as time\r\n--  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n--  WHERE \r\n--    ($webFilter)\r\n--   AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n--  )\r\n--SELECT  SUM(m_visits) as Zeitraum\r\n--FROM now \r\n--WHERE $Zeitraum\r\n\r\nSELECT  SUM(COALESCE(m_visits,0))\r\nFROM `ndr-code-bi-dashboard.Piano.total_visits` \r\nWHERE $webFilter AND $newZeitraum\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 2,
          "x": 7,
          "y": 30
        },
        "id": 30,
        "options": {
          "displayLabels": [],
          "legend": {
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true,
            "values": []
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\nwith w as (\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n    WHERE $webFilter AND $newZeitraum),\r\na as (\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n    WHERE $appFilter AND $newZeitraum\r\n)\r\n\r\nSELECT  a.m_visits/(w.m_visits+a.m_visits)*100 as App, w.m_visits/(w.m_visits+a.m_visits)*100 as Web\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n\r\n",
            "refId": "a",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 9,
          "y": 30
        },
        "id": 40,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\nwith w as (SELECT m_visits, date, m_page_loads\r\nFROM `ndr-code-bi-dashboard.Piano.total_visits` \r\nWHERE \r\n  ($webFilter\r\n  AND $newZeitraum \r\n  --AND sendungs_id = '$Sendung'\r\n  ) \r\n)\r\nSELECT  REPLACE(CAST(ROUND(SUM(m_page_loads)/SUM(m_visits),2) as string),'.',',') as Zeitraum\r\nFROM w \r\n--WHERE $Zeitraum\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "decimals": 2,
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 2,
          "x": 12,
          "y": 30
        },
        "id": 97,
        "options": {
          "displayMode": "gradient",
          "minVizHeight": 10,
          "minVizWidth": 0,
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "text": {}
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\nwith w as (\r\n  SELECT SUM(m_page_loads)/SUM(m_visits) as m_visits, 1 as id\r\n  FROM (\r\n      SELECT m_visits, date, m_page_loads\r\n      FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n      WHERE \r\n        $webFilter\r\n        --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n        --AND sendungs_id = '$Sendung'\r\n    )  \r\n  WHERE $newZeitraum),\r\na as (\r\n  SELECT SUM(m_page_loads)/SUM(m_visits) as m_visits, 1 as id\r\n  FROM(\r\n    SELECT m_visits, date, m_page_loads\r\n      FROM `ndr-code-bi-dashboard.Piano.total_visits`\r\n    WHERE ($appFilter)\r\n    --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  )\r\n  WHERE $newZeitraum  )\r\n\r\nSELECT  w.m_visits as Web, a.m_visits as App\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 14,
          "y": 30
        },
        "id": 41,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\nwith now as (SELECT m_time_spent_per_visits as m_time_spent, m_visits, date--time(tmstp) as time\r\nFROM `ndr-code-bi-dashboard.Piano.total_visits` \r\nWHERE \r\n  ($webFilter \r\n  --AND sendungs_id = '$Sendung'\r\n  ) \r\n  --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n)\r\n--SELECT  CONCAT(REPLACE(CAST(ROUND(SUM(m_time_spent) / SUM(m_visits)/1000,1) AS STRING),'.',','), ' Sek.') as Zeitraum\r\nSELECT CONCAT(REPLACE(CAST(ROUND(SUM(m_visits * m_time_spent/1000) / SUM(m_visits),1) AS STRING),'.',','), ' Sek.') as Zeitraum\r\nFROM now \r\n--WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n WHERE $newZeitraum",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 2,
          "x": 17,
          "y": 30
        },
        "id": 98,
        "options": {
          "displayMode": "gradient",
          "minVizHeight": 10,
          "minVizWidth": 0,
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "text": {}
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  with now as (SELECT m_time_spent_per_visits as m_time_spent, m_visits, date--time(tmstp) as time\r\nFROM `ndr-code-bi-dashboard.Piano.total_visits` \r\nWHERE \r\n  ($webFilter   ) \r\n)\r\nSELECT ROUND(SUM(m_visits * m_time_spent/1000) / SUM(m_visits),1) as Zeitraum, 2 as id\r\nFROM now \r\n WHERE $newZeitraum\r\n),\r\na as(\r\n    --Select 'N/A' as Zeitraum\r\n\r\n  with now as (SELECT m_time_spent_per_visits, m_visits, date--time(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE \r\n    ($appFilter\r\n    --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    ) \r\n  )\r\n  SELECT  (SUM(m_time_spent_per_visits/1000 * m_visits))/SUM(m_visits) as Zeitraum, 2 as id\r\n  FROM now \r\n  --WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n   WHERE $newZeitraum\r\n)\r\nSELECT  w.Zeitraum as Web, a.Zeitraum as App\r\nFROM w \r\nJOIN a ON w.id = a.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 19,
          "y": 30
        },
        "id": 42,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  sum(m_av_playbacks) as Zeitraum\r\nFROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`  \r\n--WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\nWHERE $newZeitraum AND $avwebFilter",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "percentunit"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 2,
          "x": 22,
          "y": 30
        },
        "id": 48,
        "options": {
          "legend": {
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as \r\n(\r\n  SELECT \r\n    sum(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`  \r\n  WHERE $newZeitraum AND $avwebFilter\r\n),\r\napp as (\r\n  SELECT \r\n    SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`  \r\n  WHERE ${av_condition} AND $newZeitraum \r\n )\r\n  SELECT SUM(web.Zeitraum)/(SUM(app.Zeitraum) + SUM(web.Zeitraum)) as Web, SUM(app.Zeitraum)/(SUM(app.Zeitraum) + SUM(web.Zeitraum)) as App\r\n  FROM web\r\n  JOIN app\r\n  ON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 33
        },
        "id": 18,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 54
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 33
        },
        "id": 27,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\r\n\r\nSELECT  SUM(m_visits) as summe\r\nFROM `ndr-code-bi-dashboard.Piano.total_visits${table_fever_curve}` \r\nWHERE $appFilter AND $newZeitraum\r\nGROUP BY site_level2, tmstp\r\nORDER BY summe DESC\r\nLIMIT 1\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 9,
          "y": 33
        },
        "id": 43,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with app as (SELECT m_visits, date, m_page_loads\r\nFROM `ndr-code-bi-dashboard.Piano.total_visits` \r\nWHERE \r\n  ( $appFilter\r\n  --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n) \r\n)\r\nSELECT REPLACE(CAST(ROUND(SUM(m_page_loads)/SUM(m_visits),2) as string),'.',',') as Zeitraum\r\nFROM app \r\nWHERE $newZeitraum \r\n--WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 14,
          "y": 33
        },
        "id": 44,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--Select 'N/A' as Zeitraum\r\n\r\nwith now as (\r\n  SELECT m_time_spent_per_visits, m_visits, date--time(tmstp) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits` \r\n  WHERE \r\n    ($appFilter\r\n    --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    ) \r\n)\r\nSELECT  CONCAT(REPLACE(CAST(ROUND(SUM(m_time_spent_per_visits/1000 * m_visits) / SUM(m_visits),1) AS STRING),'.',','), ' Sek.') as Zeitraum\r\nFROM now \r\n--WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\n WHERE $newZeitraum",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 19,
          "y": 33
        },
        "id": 45,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT SUM(m_av_playbacks) as Zeitraum\r\nFROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`  \r\nWHERE ${av_condition} AND $newZeitraum ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 36
        },
        "id": 84,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 38
        },
        "id": 51,
        "panels": [],
        "title": "Top Artikel",
        "type": "row"
      },
      {
        "color": "#006965",
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Sophora ID"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "visits_web"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Web"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "visits_app"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "App"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "page_views"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Page V."
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "page_web"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Web"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "page_app"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "App"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Artikel"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 455
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "title": "${__data.fields.url}",
                      "url": "${__data.fields.url}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora ID"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 328
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Visits"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 98
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 91
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 85
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Page V."
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 95
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Datum"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 251
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "url"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Visits"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "page_views"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 39
        },
        "id": 62,
        "options": {
          "footer": {
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Visits"
            }
          ]
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  SELECT   \r\n    ANY_VALUE(publishing_date) as publishing_date,\r\n    ANY_VALUE(content_id_sophora) as content_id_sophora, \r\n    ANY_VALUE(content_titel) as content_titel,\r\n    ANY_VALUE(url) as url,\r\n    IFNULL(SUM(m_visits),0) as m_visits,\r\n    IFNULL(SUM(m_page_loads),0) as m_page_loads, \r\n    uuid--,DATETIME(tmstp) as date\r\n  from `ndr-code-bi-dashboard.Piano.articles${articleTable}` \r\n  WHERE \r\n    $listwebFilter \r\n    --AND \"$page_chapter1\" IN UNNEST(page_chapter1_tags) \r\n    --AND \"$page_chapter2\" IN UNNEST(page_chapter2_tags)\r\n    --AND \"Alle Sendungs-ID\" IN UNNEST(sendungs_id_tags)\r\n    AND $newZeitraum \r\n    AND objekt_typ NOT LIKE 'indexPage'\r\n  GROUP BY uuid\r\n\r\n),\r\napp as (\r\n  SELECT \r\n    IFNULL(SUM(m_visits),0) as m_visits, \r\n    ANY_VALUE(publishing_date) as publishing_date,\r\n    ANY_VALUE(content_id_sophora) as content_id_sophora, \r\n    ANY_VALUE(content_titel) as content_titel,\r\n    ANY_VALUE(url) as url,\r\n    IFNULL(SUM(m_page_loads),0) as m_page_loads, \r\n    ANY_VALUE(page_chapter1) as Kapitel,\r\n    uuid\r\n  from `ndr-code-bi-dashboard.Piano.articles${articleTable}` \r\n  WHERE CONTAINS_SUBSTR(site_level2, '$app_name')\r\n  AND $newZeitraum\r\n  AND content_id_sophora NOT LIKE '%index%'\r\n  AND content_id_sophora NOT LIKE '%N/A%'\r\n  GROUP BY uuid\r\n  ),\r\nsum_raw as (\r\n  SELECT \r\n  IFNULL(web.publishing_date, app.publishing_date) as publishing_date,\r\n  IFNULL(web.content_titel, app.content_titel) as content_titel, \r\n  IFNULL(web.content_id_sophora,app.content_id_sophora) as content_id_sophora, \r\n  IFNULL(web.url, app.url) as url,\r\n  web.uuid as uuid,\r\n  IFNULL(web.m_visits,0) as visits_web, \r\n  IFNULL(app.m_visits,0) as visits_app, \r\n  IFNULL(web.m_page_loads,0) as page_web, \r\n  IFNULL(app.m_page_loads,0) as page_app, \r\n  Kapitel\r\n  FROM web\r\n  FULL JOIN app \r\n  ON web.uuid = app.uuid\r\n)\r\nSELECT \r\n  IF(LENGTH(MAX(publishing_date)) > 4,FORMAT_DATETIME('%d.%m.%Y | %R Uhr', DATETIME(MAX(publishing_date))),MAX(publishing_date)) as Datum, \r\n  content_titel as Artikel, \r\n  content_id_sophora as Sophora, \r\n  ANY_VALUE(url HAVING MAX LENGTH(url)) as url, \r\n  SUM(visits_web) + SUM(visits_app) as Visits, \r\n  SUM(visits_web) as visits_web, \r\n  SUM(visits_app) as visits_app, \r\n  SUM(page_web) + SUM(page_app) as page_views, \r\n  SUM(page_web) as page_web, \r\n  SUM(page_app) as page_app, \r\n  ANY_VALUE(Kapitel) as Kapitel\r\nFROM sum_raw\r\nGROUP BY content_titel,  content_id_sophora, uuid--, publishing_date,\r\nORDER BY Visits DESC\r\nLIMIT 100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top Artikel",
        "type": "table"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 52
        },
        "id": 85,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 54
        },
        "id": 53,
        "panels": [],
        "title": "AV KPI",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 55
        },
        "id": 67,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 54
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Video - Wiedergaben",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 10,
          "x": 4,
          "y": 55
        },
        "id": 68,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 54
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Audio - Wiedergaben",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 10,
          "x": 14,
          "y": 55
        },
        "id": 69,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 54
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 4,
          "x": 0,
          "y": 58
        },
        "id": 64,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 54
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 5,
          "x": 4,
          "y": 58
        },
        "id": 71,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with data_web as \r\n(\r\n  SELECT sum(IFNULL(m_av_playbacks,0)) as m_av_playbacks, datetime(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE \r\n    $avwebFilter\r\n    AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n    --AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  GROUP BY time \r\n),\r\nweb as (\r\n  SELECT \r\n  sum(IFNULL(m_av_playbacks,0)) as Zeitraum, 1 as id\r\n  FROM data_web\r\n  WHERE $Zeitraum \r\n),\r\ndata_app as (\r\n  SELECT m_av_playbacks, DATETIME(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE ${av_condition}\r\n    AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n),\r\napp as (\r\n  SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_app \r\n  WHERE $Zeitraum \r\n)\r\n\r\nSELECT IFNULL(SUM(web.Zeitraum),0) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 9,
          "y": 58
        },
        "id": 72,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with data_web as \r\n(\r\n  SELECT sum(m_av_playbacks) as m_av_playbacks, DATE_ADD(datetime(date), INTERVAL $Tage $Einheit) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n  WHERE \r\n    $avwebFilter\r\n    AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  GROUP BY time \r\n),\r\nweb as (\r\n  SELECT \r\n  sum(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_web\r\n  WHERE $Zeitraum\r\n),\r\ndata_app as (\r\n  SELECT m_av_playbacks, DATE_ADD(datetime(date), INTERVAL $Tage $Einheit) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n  WHERE ${av_condition}\r\n  AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n),\r\napp as (\r\n  SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_app \r\n  WHERE $Zeitraum\r\n)\r\nSELECT SUM(web.Zeitraum) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 5,
          "x": 14,
          "y": 58
        },
        "id": 77,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with data_web as \r\n(\r\n  SELECT sum(m_av_playbacks) as m_av_playbacks, datetime(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE \r\n    $avwebFilter\r\n    AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n  GROUP BY time \r\n),\r\nweb as (\r\n  SELECT \r\n  sum(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_web\r\n  WHERE $Zeitraum \r\n),\r\ndata_app as (\r\n  SELECT m_av_playbacks, DATETIME(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE ${av_condition}\r\n    AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n),\r\napp as (\r\n  SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_app \r\n  WHERE $Zeitraum \r\n)\r\n\r\nSELECT SUM(web.Zeitraum) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 19,
          "y": 58
        },
        "id": 78,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with data_web as \r\n(\r\n  SELECT sum(m_av_playbacks) as m_av_playbacks, DATE_ADD(datetime(date), INTERVAL $Tage $Einheit) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n  WHERE \r\n    $avwebFilter\r\n    AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  GROUP BY time \r\n),\r\nweb as (\r\n  SELECT \r\n  sum(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_web\r\n  WHERE $Zeitraum\r\n),\r\ndata_app as (\r\n  SELECT m_av_playbacks, DATE_ADD(datetime(date), INTERVAL $Tage $Einheit) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n  WHERE ${av_condition}\r\n  AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n),\r\napp as (\r\n  SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_app \r\n  WHERE $Zeitraum\r\n)\r\nSELECT SUM(web.Zeitraum) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 2,
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 9,
          "y": 62
        },
        "id": 73,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with old as (\r\n  with data_web as \r\n  (\r\n    SELECT sum(m_av_playbacks) as m_av_playbacks, DATE_ADD(datetime(date), INTERVAL $Tage $Einheit) as time\r\n    FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n    WHERE \r\n      $avwebFilter\r\n      AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n      AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    GROUP BY time \r\n  ),\r\n  web as (\r\n    SELECT \r\n    sum(m_av_playbacks) as Zeitraum, 1 as id\r\n    FROM data_web\r\n    WHERE $Zeitraum\r\n  ),\r\n  data_app as (\r\n    SELECT m_av_playbacks, DATE_ADD(datetime(date), INTERVAL $Tage $Einheit) as time\r\n    FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n    WHERE ${av_condition}\r\n    AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  ),\r\n  app as (\r\n    SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n    FROM data_app \r\n    WHERE $Zeitraum\r\n  )\r\n  SELECT SUM(web.Zeitraum) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum, 2 as id\r\n  FROM web\r\n  JOIN app\r\n  ON web.id = app.id\r\n\r\n),\r\nnew_data as (\r\n  with data_web as \r\n(\r\n  SELECT sum(m_av_playbacks) as m_av_playbacks, datetime(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE \r\n    $avwebFilter\r\n    AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  GROUP BY time \r\n),\r\nweb as (\r\n  SELECT \r\n  sum(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_web\r\n  WHERE $Zeitraum \r\n),\r\ndata_app as (\r\n  SELECT m_av_playbacks, DATETIME(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n  WHERE ${av_condition}\r\n    AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n),\r\napp as (\r\n  SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_app \r\n  WHERE $Zeitraum \r\n)\r\n\r\nSELECT IFNULL(SUM(web.Zeitraum),0) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum, 2 as id\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n\r\n)\r\nSELECT CONCAT(IF(ROUND(((new_data.Zeitraum / old.Zeitraum)-1)*100,2)>0,'+',''),REPLACE(CAST(ROUND(((new_data.Zeitraum / old.Zeitraum)-1)*100,2) as string), '.', ','), ' %') as Zeitraum\r\nFROM old\r\nJOIN new_data\r\nON old.id = new_data.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 19,
          "y": 62
        },
        "id": 79,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with old as (\r\n  with data_web as \r\n  (\r\n    SELECT sum(m_av_playbacks) as m_av_playbacks, DATETIME(DATE_ADD(date(date), INTERVAL $Tage $Einheit)) as time, \r\n    FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n    WHERE \r\n      $avwebFilter\r\n      AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n      AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    GROUP BY time \r\n  ),\r\n  web as (\r\n    SELECT \r\n    sum(m_av_playbacks) as Zeitraum, 1 as id\r\n    FROM data_web\r\n    WHERE $Zeitraum\r\n  ),\r\n  data_app as (\r\n    SELECT m_av_playbacks, DATETIME(DATE_ADD(date(date), INTERVAL $Tage $Einheit)) as time, \r\n    FROM `ndr-code-bi-dashboard.Piano.av_joined_daily` \r\n    WHERE ${av_condition}\r\n    AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  ),\r\n  app as (\r\n    SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n    FROM data_app \r\n    WHERE $Zeitraum \r\n  )\r\n  SELECT SUM(web.Zeitraum) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum, 2 as id\r\n  FROM web\r\n  JOIN app\r\n  ON web.id = app.id\r\n),\r\nnew_data as (\r\n  with data_web as (\r\n    SELECT sum(m_av_playbacks) as m_av_playbacks, datetime(date) as time\r\n    FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n    WHERE \r\n      $avwebFilter\r\n      AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n      AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    GROUP BY time \r\n    ),\r\n  web as (\r\n    SELECT sum(m_av_playbacks) as Zeitraum, 1 as id\r\n    FROM data_web\r\n    WHERE $Zeitraum \r\n  ),\r\n  data_app as (\r\n    SELECT m_av_playbacks, DATETIME(date) as time\r\n    FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n    WHERE ${av_condition}\r\n      AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n      AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  ),\r\n  app as (\r\n    SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n    FROM data_app \r\n    WHERE $Zeitraum \r\n  )\r\n  SELECT SUM(web.Zeitraum) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum, 2 as id\r\n  FROM web\r\n  JOIN app\r\n  ON web.id = app.id\r\n)\r\nSELECT CONCAT(IF(ROUND(((new_data.Zeitraum / old.Zeitraum)-1)*100,2)>0,'+',''),REPLACE(CAST(ROUND(((new_data.Zeitraum / old.Zeitraum)-1)*100,2) as string), '.', ','), ' %') as Zeitraum\r\nFROM old\r\nJOIN new_data\r\nON old.id = new_data.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 66
        },
        "id": 65,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 54
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 66
        },
        "id": 74,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with data as \r\n(SELECT sum(m_av_playbacks) as m_av_playbacks, datetime(date) as time\r\nFROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\nWHERE \r\n  ($avwebFilter\r\n  AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  )\r\n  GROUP BY time \r\n)\r\nSELECT \r\n  IFNULL(sum(m_av_playbacks),0) as Zeitraum\r\nFROM data \r\n--WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\nWHERE $Zeitraum",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 7,
          "x": 7,
          "y": 66
        },
        "id": 76,
        "options": {
          "displayLabels": [],
          "legend": {
            "displayMode": "table",
            "placement": "right",
            "showLegend": true,
            "values": [
              "percent"
            ]
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  with data_web as \r\n  (SELECT sum(m_av_playbacks) as m_av_playbacks, datetime(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE \r\n    ($avwebFilter)\r\n    AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    GROUP BY time \r\n  ),\r\n  web as (\r\n    SELECT \r\n    sum(m_av_playbacks) as Zeitraum, 1 as id\r\n    FROM data_web\r\n    WHERE $Zeitraum),\r\n  data_app as (SELECT m_av_playbacks, DATETIME(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE ${av_condition}\r\n  AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  ),\r\n  app as (SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_app \r\n  WHERE $Zeitraum)\r\n  SELECT SUM(web.Zeitraum) as Web, SUM(app.Zeitraum) as App\r\n  FROM web\r\n  JOIN app\r\n  ON web.id = app.id\r\n\r\n",
            "refId": "a",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 14,
          "y": 66
        },
        "id": 81,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with data as \r\n(SELECT sum(m_av_playbacks) as m_av_playbacks, datetime(date) as time\r\nFROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\nWHERE \r\n  ($avwebFilter\r\n  AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  )\r\n  GROUP BY time \r\n)\r\nSELECT \r\n  sum(m_av_playbacks) as Zeitraum\r\nFROM data \r\n--WHERE time BETWEEN DATE('${__from:date}', \"Europe/Berlin\") AND DATE('${__to:date}', \"Europe/Berlin\")\r\nWHERE $Zeitraum",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 7,
          "x": 17,
          "y": 66
        },
        "id": 80,
        "options": {
          "displayLabels": [],
          "legend": {
            "displayMode": "list",
            "placement": "right",
            "showLegend": true,
            "values": [
              "percent"
            ]
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  with data_web as \r\n  (SELECT sum(m_av_playbacks) as m_av_playbacks, datetime(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE \r\n    ($avwebFilter)\r\n    AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n    AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n    GROUP BY time \r\n  ),\r\n  web as (\r\n    SELECT \r\n    sum(m_av_playbacks) as Zeitraum, 1 as id\r\n    FROM data_web\r\n    WHERE $Zeitraum),\r\n  data_app as (SELECT m_av_playbacks, DATETIME(date) as time\r\n  FROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\n  WHERE ${av_condition}\r\n  AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n  ),\r\n  app as (SELECT SUM(m_av_playbacks) as Zeitraum, 1 as id\r\n  FROM data_app \r\n  WHERE $Zeitraum)\r\n  SELECT SUM(web.Zeitraum) as Web, SUM(app.Zeitraum) as App\r\n  FROM web\r\n  JOIN app\r\n  ON web.id = app.id\r\n\r\n",
            "refId": "a",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text"
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 69
        },
        "id": 66,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 54
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 69
        },
        "id": 75,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with app as (SELECT m_av_playbacks, DATETIME(date) as time\r\nFROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\nWHERE ${av_condition}\r\n  AND (av_content_type LIKE 'video' OR av_content_type LIKE 'Video')\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n)\r\nSELECT SUM(m_av_playbacks) as Zeitraum\r\nFROM app \r\nWHERE $Zeitraum ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4"
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 14,
          "y": 69
        },
        "id": 82,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with app as (SELECT m_av_playbacks, DATETIME(date) as time\r\nFROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}` \r\nWHERE ${av_condition}\r\n  AND (av_content_type LIKE 'audio' OR av_content_type LIKE 'Audio')\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE()\r\n)\r\nSELECT SUM(m_av_playbacks) as Zeitraum\r\nFROM app \r\nWHERE $Zeitraum ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 72
        },
        "id": 12,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 74
        },
        "id": 55,
        "panels": [],
        "title": "Top AV on Demand",
        "type": "row"
      },
      {
        "color": "#006965",
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Sophora ID"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "playbacks_web"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Web"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "playbacks_app"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "App"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Titel"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 606
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "targetBlank": true,
                      "title": "${__data.fields.url}",
                      "url": "${__data.fields.url}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora ID"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 326
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "url"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "playbacks"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "Wiederg."
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "av_content_duration"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "dthms"
                },
                {
                  "id": "displayName",
                  "value": "Länge"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "av_content_type"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Typ"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Datum"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 257
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Wiederg."
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 100
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 107
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 97
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 75
        },
        "id": 87,
        "options": {
          "footer": {
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Wiederg."
            }
          ]
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web_raw as (\r\n  SELECT\r\n    --DATETIME(tmstp) as time,  \r\n    MAX(bi_av_publication_date) as bi_av_publication_date,\r\n    SUM(m_av_playbacks) as m_av_playbacks,\r\n    MAX(av_content_duration) as av_content_duration,\r\n    bi_av_content_id,\r\n    ANY_VALUE(bi_av_content HAVING MAX bi_av_publication_date) as bi_av_content,\r\n    ANY_VALUE(bi_av_url HAVING MAX bi_av_publication_date) as url,\r\n    ANY_VALUE(av_content_type) as av_content_type\r\n  from\r\n    `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`\r\n  WHERE\r\n    $avwebFilter\r\n    AND $avzeitraumListe\r\n    AND bi_av_broadcasting_type LIKE 'ondemand'\r\n    AND bi_av_content_id NOT LIKE '%index%'\r\n  GROUP By\r\n    --bi_av_content,\r\n    bi_av_content_id\r\n),\r\nweb as (\r\n  select\r\n    bi_av_publication_date,\r\n    m_av_playbacks,\r\n    bi_av_content_id,\r\n    bi_av_content as content_titel,\r\n    url,\r\n    av_content_duration,\r\n    av_content_type\r\n  FROM\r\n    web_raw\r\n),\r\napp_raw as (\r\n  SELECT\r\n    MAX(av_content_duration) as av_content_duration,\r\n    bi_av_content_id,\r\n    SUM(m_av_playbacks) as m_av_playbacks,\r\n    bi_av_content,\r\n    ANY_VALUE(bi_av_url) as url,\r\n    ANY_VALUE(av_content_type) as av_content_type,\r\n    MAX(bi_av_publication_date) as bi_av_publication_date\r\n  from\r\n    `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`\r\n  WHERE\r\n    ${av_condition}\r\n    AND bi_av_content_id NOT LIKE '%index%'\r\n    AND bi_av_broadcasting_type LIKE 'ondemand'\r\n    AND $avzeitraumListe\r\n  GROUP BY\r\n    bi_av_content,\r\n    bi_av_content_id\r\n  ORDER BY\r\n    m_av_playbacks DESC\r\n),\r\napp as (\r\n  SELECT\r\n    m_av_playbacks,\r\n    bi_av_content_id,\r\n    av_content_duration,\r\n    bi_av_content,\r\n    url,\r\n    av_content_type,\r\n    bi_av_publication_date\r\n  FROM\r\n    app_raw\r\n),\r\nsum_raw as (\r\n  SELECT\r\n    IFNULL(\r\n      web.bi_av_publication_date,\r\n      app.bi_av_publication_date\r\n    ) as bi_av_publication_date,\r\n    IFNULL(content_titel, app.bi_av_content) as content_titel,\r\n    IFNULL(web.av_content_duration, app.av_content_duration) as av_content_duration,\r\n    IFNULL(web.bi_av_content_id, app.bi_av_content_id) as bi_av_content_id,\r\n    IFNULL(web.url, app.url) as url,\r\n    IFNULL(web.m_av_playbacks, 0) as playbacks_web,\r\n    IFNULL(app.m_av_playbacks, 0) as playbacks_app,\r\n    IFNULL(web.av_content_type, app.av_content_type) as av_content_type\r\n  FROM\r\n    web FULL\r\n    JOIN app ON web.bi_av_content_id = app.bi_av_content_id\r\n)\r\nSELECT\r\n  *\r\nFROM\r\n  (\r\n    SELECT\r\n      IF(\r\n        LENGTH(MAX(bi_av_publication_date)) > 4,\r\n        FORMAT_DATETIME(\r\n          '%d.%m.%Y | %R Uhr',\r\n          DATETIME(MAX(bi_av_publication_date))\r\n        ),\r\n        MAX(bi_av_publication_date)\r\n      ) as Datum,\r\n      content_titel as Titel,\r\n      bi_av_content_id as Sophora,\r\n      url,\r\n      SUM(\r\n        IFNULL(playbacks_web, 0) + IFNULL(playbacks_app, 0)\r\n      ) as playbacks,\r\n      SUM(IFNULL(playbacks_web, 0)) as playbacks_web,\r\n      SUM(IFNULL(playbacks_app, 0)) as playbacks_app,\r\n      IFNULL(av_content_duration, 0) / 1000 as av_content_duration,\r\n      IFNULL(av_content_type, 'N/A') as av_content_type\r\n    FROM\r\n      sum_raw\r\n    GROUP BY\r\n      bi_av_content_id,\r\n      content_titel,\r\n      bi_av_publication_date,\r\n      url,\r\n      av_content_duration,\r\n      av_content_type\r\n  )\r\nWHERE\r\n  playbacks > 0\r\nORDER BY\r\n  playbacks DESC\r\nLIMIT\r\n  100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top AV on Demand",
        "type": "table"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 88
        },
        "id": 90,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 90
        },
        "id": 57,
        "panels": [],
        "title": "Top AV Livestream",
        "type": "row"
      },
      {
        "color": "#006965",
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Sophora ID"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "playbacks_web"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Web"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "playbacks_app"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "App"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Titel"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 606
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "targetBlank": true,
                      "title": "${__data.fields.url}",
                      "url": "${__data.fields.url}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora ID"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 235
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "url"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "playbacks"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "Wiederg."
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "av_content_duration"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "dthms"
                },
                {
                  "id": "displayName"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "av_content_type"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Typ"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Datum"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 257
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Wiederg."
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 100
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 107
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 97
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 91
        },
        "id": 89,
        "options": {
          "footer": {
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Wiederg."
            }
          ]
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web_raw as (\r\n  SELECT\r\n    DATETIME(date) as time,\r\n    bi_av_publication_date,\r\n    m_av_playbacks,\r\n    av_content_duration,\r\n    bi_av_content_id,\r\n    bi_av_content,\r\n    bi_av_url as url,\r\n    av_content_type\r\n  from\r\n    `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`\r\n  WHERE\r\n    $avwebFilter\r\n    AND (\r\n      bi_av_broadcasting_type LIKE 'live'\r\n      OR bi_av_broadcasting_type LIKE 'Live'\r\n    )\r\n    AND $avzeitraumListe\r\n),\r\nweb as (\r\n  select\r\n    MAX(bi_av_publication_date) as bi_av_publication_date,\r\n    SUM(m_av_playbacks) as m_av_playbacks,\r\n    bi_av_content_id,\r\n    bi_av_content as content_titel,\r\n    ANY_VALUE(url) as url,\r\n    ANY_VALUE(av_content_duration) as av_content_duration,\r\n    ANY_VALUE(av_content_type) as av_content_type,\r\n  FROM\r\n    web_raw\r\n  GROUP BY\r\n    bi_av_content_id,\r\n    bi_av_content\r\n),\r\napp_raw as (\r\n  SELECT\r\n    DATETIME(date) as time,\r\n    bi_av_publication_date,\r\n    av_content_duration,\r\n    bi_av_content_id,\r\n    IFNULL(m_av_playbacks, 0) as m_av_playbacks,\r\n    bi_av_content,\r\n    bi_av_url as url,\r\n    av_content_type\r\n  from\r\n    `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`\r\n  WHERE\r\n    ${av_condition}\r\n    AND (\r\n      bi_av_broadcasting_type LIKE 'live'\r\n      OR bi_av_broadcasting_type LIKE 'Live'\r\n    )\r\n    AND bi_av_content_id NOT LIKE '%index%'\r\n    AND $avzeitraumListe\r\n),\r\napp as (\r\n  SELECT\r\n    SUM(IFNULL(m_av_playbacks, 0)) as m_av_playbacks,\r\n    bi_av_content_id,\r\n    bi_av_content,\r\n    ANY_VALUE(bi_av_publication_date) as bi_av_publication_date,\r\n    ANY_VALUE(url) as url,\r\n    MAX(av_content_duration) as av_content_duration,\r\n    ANY_VALUE(av_content_type) as av_content_type\r\n  FROM\r\n    app_raw\r\n  GROUP BY\r\n    bi_av_content_id,\r\n    bi_av_content\r\n),\r\nsum_raw as (\r\n  SELECT\r\n    IFNULL(\r\n      web.bi_av_publication_date,\r\n      app.bi_av_publication_date\r\n    ) as bi_av_publication_date,\r\n    IFNULL(web.content_titel, app.bi_av_content) as content_titel,\r\n    IFNULL(web.av_content_duration, app.av_content_duration) as av_content_duration,\r\n    IFNULL(web.bi_av_content_id, app.bi_av_content_id) as bi_av_content_id,\r\n    IFNULL(web.url, app.url) as url,\r\n    IFNULL(web.m_av_playbacks, 0) as playbacks_web,\r\n    IFNULL(app.m_av_playbacks, 0) as playbacks_app,\r\n    IFNULL(web.av_content_type, app.av_content_type) as av_content_type\r\n  FROM\r\n    web FULL\r\n    JOIN app ON web.bi_av_content_id = app.bi_av_content_id\r\n)\r\nSELECT\r\n  *\r\nFROM\r\n  (\r\n    SELECT\r\n      IF(\r\n        LENGTH(bi_av_publication_date) > 3,\r\n        FORMAT_DATETIME(\r\n          '%d.%m.%Y | %R Uhr',\r\n          DATETIME(bi_av_publication_date)\r\n        ),\r\n        bi_av_publication_date\r\n      ) as Datum,\r\n      content_titel as Titel,\r\n      bi_av_content_id as Sophora,\r\n      url,\r\n      SUM(IFNULL(playbacks_web, 0)) + SUM(IFNULL(playbacks_app, 0)) as playbacks,\r\n      SUM(IFNULL(playbacks_web, 0)) as playbacks_web,\r\n      SUM(IFNULL(playbacks_app, 0)) as playbacks_app,\r\n      --av_content_duration/1000 as av_content_duration,\r\n      av_content_type\r\n    FROM\r\n      sum_raw\r\n    GROUP BY\r\n      bi_av_content_id,\r\n      content_titel,\r\n      bi_av_publication_date,\r\n      url,\r\n      av_content_duration,\r\n      av_content_type\r\n  )\r\nWHERE\r\n  playbacks > 0\r\nORDER BY\r\n  playbacks DESC\r\nLIMIT\r\n  100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top AV Livestream",
        "type": "table"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 104
        },
        "id": 91,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 106
        },
        "id": 59,
        "panels": [],
        "title": "Distribution",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": [
            {
              "__systemRef": "hideSeriesFrom",
              "matcher": {
                "id": "byNames",
                "options": {
                  "mode": "exclude",
                  "names": [
                    "number"
                  ],
                  "prefix": "All except:",
                  "readOnly": true
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": false,
                    "tooltip": false,
                    "viz": true
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Desktop"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#75b9b0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Mobile Phone"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#95c1ac",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Tablet"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#63b7cc",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "N/A"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a7d9b0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "TV"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#3c71a6",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Media Player"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#7ca784",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Set Top Box"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#327a8c",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Games Console"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#51e09d",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Vehicle Multimedia System"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#73d9cb",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sonstige"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5c6f84",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Data Collection Terminal"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5c8463",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Digital Home Assistant"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5c7c84",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "VR Headset"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5c8471",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Digital Whiteboard"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a9d9d2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "eReader"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a7bfd9",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 14,
          "x": 5,
          "y": 107
        },
        "id": 96,
        "options": {
          "displayLabels": [
            "name",
            "percent"
          ],
          "legend": {
            "displayMode": "table",
            "placement": "right",
            "showLegend": true,
            "values": [
              "value"
            ]
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "limit": 15,
            "values": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with raw as (\r\n  SELECT  device_type, tmstp as time\r\n  FROM `ndr-code-bi-dashboard.Piano.distro` \r\n  WHERE ($webFilter OR CONTAINS_SUBSTR(site_level2, '$app_name'))\r\n  AND DATE(tmstp) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY) AND CURRENT_DATE()\r\n),\r\nfiltered as (\r\n  SELECT device_type, COUNT(device_type) as number, ROW_NUMBER() OVER (ORDER BY COUNT(device_type) DESC) as RNB\r\n  FROM raw\r\n  WHERE $Zeitraum\r\n  GROUP BY device_type \r\n  ORDER BY number DESC\r\n)\r\nSELECT IF (RNB <= 15, device_type, 'Sonstige') as device_type, SUM(number) as number\r\nFROM filtered\r\nGROUP BY device_type\r\nORDER BY number DESC",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Distribution nach Gerätetyp - $Zeitraum",
        "transparent": true,
        "type": "piechart"
      }
    ],
    "refresh": false,
    "schemaVersion": 39,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "selected": true,
            "text": "MDR",
            "value": "MDR"
          },
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "LRA",
          "options": [
            {
              "selected": false,
              "text": "NDR",
              "value": "NDR"
            },
            {
              "selected": true,
              "text": "MDR",
              "value": "MDR"
            }
          ],
          "query": "NDR,MDR",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "Nachrichten",
            "value": "Nachrichten"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "Redaktionen",
          "options": [],
          "query": {
            "dataset": "Piano",
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$LRA' LIKE 'MDR') THEN (\r\n  SELECT 'Nachrichten'\r\n  UNION ALL\r\n  SELECT 'Sport'\r\n  UNION ALL\r\n  SELECT 'Sorbisches Programm'\r\n  UNION ALL\r\n  SELECT 'Jump'\r\n);\r\nELSEIF ('$LRA' LIKE 'NDR') THEN (\r\n  SELECT 'Alle Kapitel 1'\r\n  UNION ALL\r\n  SELECT 'Nachrichten'\r\n  UNION ALL\r\n  SELECT 'Kultur'\r\n);\r\nEND IF",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_chapter1",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "Profiles"
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Aktuell",
            "value": "Aktuell"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "Unterkapitel",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$LRA' LIKE 'MDR' AND '$Redaktionen' LIKE 'Nachrichten') THEN (\r\n  SELECT 'Aktuell'\r\n  UNION ALL\r\n  SELECT 'Sachsen'\r\n  UNION ALL\r\n  SELECT 'Sachsen-Anhalt'\r\n  UNION ALL\r\n  SELECT 'Thüringen'\r\n);\r\nELSEIF ('$LRA' LIKE 'NDR' AND '$Redaktionen' LIKE 'Nachrichten') THEN (\r\n  SELECT 'Info'\r\n  UNION ALL\r\n  SELECT 'Hamburg'\r\n  UNION ALL\r\n  SELECT 'Mecklenburg-Vorpommern'\r\n  UNION ALL\r\n  SELECT 'Niedersachsen'\r\n  UNION ALL\r\n  SELECT 'Schleswig-Holstein'\r\n);\r\nELSEIF ('$LRA' LIKE 'NDR' AND '$Redaktionen' LIKE 'Alle Kapitel 1') THEN (\r\n  SELECT 'Hamburg'\r\n  UNION ALL\r\n  SELECT 'Mecklenburg-Vorpommern'\r\n  UNION ALL\r\n  SELECT 'Niedersachsen'\r\n  UNION ALL\r\n  SELECT 'Schleswig-Holstein'\r\n);\r\nELSE (SELECT 'Alle Kapitel 2');\r\nEND IF",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Sendung",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  --WHEN 'MDR' THEN 'Alle Sendungs-ID'\r\n  WHEN 'NDR' THEN ''\r\n  ELSE ''\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": true,
            "text": "Heute",
            "value": "EXTRACT(DATE from time) = CURRENT_DATE()"
          },
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "Zeitraum",
          "options": [
            {
              "selected": true,
              "text": "Heute",
              "value": "EXTRACT(DATE from time) = CURRENT_DATE()"
            },
            {
              "selected": false,
              "text": "Gestern",
              "value": "EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE(), INTERVAL  1 DAY)"
            },
            {
              "selected": false,
              "text": "Letztes Wochenende",
              "value": "DATE(time) >= (SELECT saturday FROM(SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(),WEEK(MONDAY)) - INTERVAL 2 DAY) as saturday))  AND DATE(time) <= (SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(),WEEK(MONDAY)) - INTERVAL 1 DAY) as sunday)"
            },
            {
              "selected": false,
              "text": "Letzte 7 Tage",
              "value": "time >= DATE_SUB(CURRENT_DATE(), INTERVAL  7 DAY) AND time < CURRENT_DATE()"
            },
            {
              "selected": false,
              "text": "Letzte 30 Tage",
              "value": "time >= DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) AND time <= CURRENT_DATE()"
            }
          ],
          "query": "Heute : EXTRACT(DATE from time) = CURRENT_DATE(),Gestern : EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE()\\, INTERVAL  1 DAY), Letztes Wochenende :  DATE(time) >= (SELECT saturday FROM(SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\,WEEK(MONDAY)) - INTERVAL 2 DAY) as saturday))  AND DATE(time) <= (SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\,WEEK(MONDAY)) - INTERVAL 1 DAY) as sunday), Letzte 7 Tage : time >= DATE_SUB(CURRENT_DATE()\\, INTERVAL  7 DAY) AND time < CURRENT_DATE(), Letzte 30 Tage : time >= DATE_SUB(CURRENT_DATE()\\, INTERVAL  30 DAY) AND time <= CURRENT_DATE()",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "Gestern",
            "value": "Gestern"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Vergleichszeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte Stunde' THEN 'Vorletzte Stunde'\r\n    WHEN 'Heute' THEN 'Gestern'\r\n    WHEN 'Gestern' THEN 'Vorgestern'\r\n    WHEN 'Letzte 7 Tage' THEN 'Letzte 8-14 Tage'\r\n    WHEN 'Letztes Wochenende' THEN 'Vorletztes Wochenende'\r\n    WHEN 'Letzte 30 Tage' THEN 'Letzte 31-60 Tage'\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "1",
            "value": "1"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "error": {},
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Tage",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte Stunde' THEN 1\r\n    WHEN 'Heute' THEN 1\r\n    WHEN 'Gestern' THEN 1\r\n    WHEN 'Letzte 7 Tage' THEN 7\r\n    WHEN 'Letztes Wochenende' THEN 7\r\n    WHEN 'Letzte 30 Tage' THEN 30\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "app_mdraktuell",
            "value": "app_mdraktuell"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "app_name",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN \"kultur-app\"\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'ndrinfo-app'\r\n          WHEN 'Hamburg' THEN 'hh-app'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mv-app'\r\n          WHEN 'Niedersachsen' THEN 'nds-app'\r\n          WHEN 'Schleswig-Holstein' THEN 'sh-app'\r\n          ELSE 'KEINE APP'\r\n        END\r\n        WHEN \"Alle Kapitel 1\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'ndrinfo-app'\r\n          WHEN 'Hamburg' THEN 'hh-app'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mv-app'\r\n          WHEN 'Niedersachsen' THEN 'nds-app'\r\n          WHEN 'Schleswig-Holstein' THEN 'sh-app'\r\n          ELSE 'KEINE APP'\r\n        END\r\n      ELSE 'KEINE APP'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'app_mdrsport'\r\n      WHEN \"Jump\" THEN 'app_mdrjump'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Aktuell' THEN 'app_mdraktuell'\r\n          WHEN 'Sachsen' THEN 'app_mdrsachsen'\r\n          WHEN 'Sachsen-Anhalt' THEN 'app_mdrsachsenanhalt'\r\n          WHEN 'Thüringen' THEN 'app_mdrthueringen'\r\n          ELSE 'KEINE APP'\r\n      END\r\n      WHEN \"Sorbisches Programm\" THEN 'app_mdrserbja'\r\n      ELSE 'KEINE APP'\r\n    END\r\nEND\r\n-- radio-app, orchester-app, hh-app, kultur-app, sesamstraßen-app, ndrinfo-app, sh-app, nds-app, n-joy-app, mv-app",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "mdr.de",
            "value": "mdr.de"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "site_level2",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'MDR' THEN \r\n    CASE '$Redaktionen'\r\n      WHEN 'Jump' THEN 'mdr.de'\r\n      ELSE 'mdr.de'\r\n    END\r\n  WHEN 'NDR' THEN 'ndr.de'\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "nachrichten",
            "value": "nachrichten"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "page_chapter1",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$Redaktionen'\r\n  WHEN 'Nachrichten' THEN 'nachrichten'\r\n  WHEN 'Sport' THEN 'sport'\r\n  WHEN 'Sorbisches Programm' THEN 'sorbisches-programm'\r\n  WHEN 'Jump' THEN 'Jump'\r\n  WHEN 'Kultur' THEN 'kultur'\r\n  WHEN 'Alle Kapitel 1' THEN 'Alle Kapitel 1'\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Alle Kapitel 2",
            "value": "Alle Kapitel 2"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "page_chapter2",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'Alle Kapitel 2'\r\n          WHEN 'Hamburg' THEN 'hamburg'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mecklenburg-vorpommern'\r\n          WHEN 'Niedersachsen' THEN 'niedersachsen'\r\n          WHEN 'Schleswig-Holstein' THEN 'schleswig-holstein'\r\n          ELSE 'Alle Kapitel 2'\r\n        END\r\n      WHEN \"Alle Kapitel 1\" THEN 'Alle Kapitel 2'\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Jump\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Aktuell' THEN 'Alle Kapitel 2'\r\n          WHEN 'Sachsen' THEN 'sachsen'\r\n          WHEN 'Sachsen-Anhalt' THEN 'sachsen-anhalt'\r\n          WHEN 'Thüringen' THEN 'thueringen'\r\n          ELSE 'Alle Kapitel 2'\r\n      END\r\n      WHEN \"Sorbisches Programm\" THEN ''\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\nEND\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Alle Sendungs-ID",
            "value": "Alle Sendungs-ID"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "sendungsid",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN 'Alle Sendungs-ID'\r\n      WHEN \"Alle Kapitel 1\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'Alle Sendungs-ID'\r\n          WHEN 'Hamburg' THEN 'Hamburg'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'Mecklenburg-Vorpommern'\r\n          WHEN 'Niedersachsen' THEN 'Niedersachsen'\r\n          WHEN 'Schleswig-Holstein' THEN 'Schleswig-Holstein'\r\n          ELSE 'Alle Sendungs-ID'\r\n        END\r\n      WHEN \"Nachrichten\" THEN 'Alle Sendungs-ID'\r\n      ELSE 'Alle Sendungs-ID'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'Alle Sendungs-ID'\r\n      WHEN \"Jump\" THEN 'Alle Sendungs-ID'\r\n      WHEN \"Nachrichten\" THEN  'Alle Sendungs-ID'\r\n      WHEN \"Sorbisches Programm\" THEN 'Alle Sendungs-ID'\r\n      ELSE 'Alle Sendungs-ID'\r\n    END\r\nEND\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "CONTAINS_SUBSTR(bi_av_url, \"mdrde.nachrichten.app_aktuell\")",
            "value": "CONTAINS_SUBSTR(bi_av_url, \"mdrde.nachrichten.app_aktuell\")"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "av_condition",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'MDR' THEN 'CONTAINS_SUBSTR(bi_av_url, \"$app_name_long\")'\r\n  WHEN 'NDR' THEN 'CONTAINS_SUBSTR(site_level2, \"$app_name\" )'\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "mdrde.nachrichten.app_aktuell",
            "value": "mdrde.nachrichten.app_aktuell"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "app_name_long",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN 'kultur-app'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'ndrinfo-app'\r\n          WHEN 'Hamburg' THEN 'hh-app'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mv-app'\r\n          WHEN 'Niedersachsen' THEN 'nds-app'\r\n          WHEN 'Schleswig-Holstein' THEN 'sh-app'\r\n          ELSE 'KEINE APP'\r\n        END\r\n      ELSE 'KEINE APP'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'mdrde.sport.app_sport'\r\n      WHEN \"Jump\" THEN 'jump.jump.app_jump'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Aktuell' THEN 'mdrde.nachrichten.app_aktuell'\r\n          WHEN 'Sachsen' THEN 'mdrde.nachrichten.sachsen.app_sachsen'\r\n          WHEN 'Sachsen-Anhalt' THEN 'mdrde.nachrichten.sachsen-anhalt.app_sachsenanhalt'\r\n          WHEN 'Thüringen' THEN 'mdrde.nachrichten.thueringen.app_thueringen'\r\n          ELSE 'KEINE APP'\r\n      END\r\n      WHEN \"Sorbisches Programm\" THEN 'mdrde.serbski-program.app_serbja'\r\n      ELSE 'KEINE APP'\r\n    END\r\nEND\r\n-- radio-app, orchester-app, hh-app, kultur-app, sesamstraßen-app, ndrinfo-app, sh-app, nds-app, n-joy-app, mv-app",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "_today_append",
            "value": "_today_append"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "table_fever_curve",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte Stunde' THEN '_last_2_hour'\r\n    WHEN 'Heute' THEN '_today_append'\r\n    WHEN 'Gestern' THEN '_today_append'\r\n    WHEN 'Letzte 7 Tage' THEN ''\r\n    WHEN 'Letztes Wochenende' THEN ''\r\n    WHEN 'Letzte 30 Tage' THEN ''\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "DAY",
            "value": "DAY"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Einheit",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte Stunde' THEN 'HOUR'\r\n    WHEN 'Heute' THEN 'DAY'\r\n    WHEN 'Gestern' THEN 'DAY'\r\n    WHEN 'Letzte 7 Tage' THEN 'DAY'\r\n    WHEN 'Letztes Wochenende' THEN 'DAY'\r\n    WHEN 'Letzte 30 Tage' THEN 'DAY'\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "time",
            "value": "time"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "granularity",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte Stunde' THEN 'time'\r\n    WHEN 'Heute' THEN 'time'\r\n    WHEN 'Gestern' THEN 'time'\r\n    WHEN 'Letzte 7 Tage' THEN 'date(time)'\r\n    WHEN 'Letztes Wochenende' THEN 'date(time)'\r\n    WHEN 'Letzte 30 Tage' THEN 'date(time)'\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "_joined_today",
            "value": "_joined_today"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "av_table_fever_curve",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    --WHEN 'Letzte Stunde' THEN '_last_2_hour'\r\n    WHEN 'Heute' THEN '_joined_today'\r\n    WHEN 'Gestern' THEN '_joined_daily'\r\n    WHEN 'Letzte 7 Tage' THEN '_joined_daily'\r\n    WHEN 'Letztes Wochenende' THEN '_joined_daily'\r\n    WHEN 'Letzte 30 Tage' THEN '_joined_daily'\r\n    ELSE '_joined_daily'\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Der ausgewertete Zeitraum lautet: 17.06.24 - 17.06.24 ",
            "value": "Der ausgewertete Zeitraum lautet: 17.06.24 - 17.06.24 "
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "hinweis_zeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT 'Der ausgewertete Zeitraum lautet: ${fromDay} - ${toDay} '",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "17.06.24",
            "value": "17.06.24"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "fromDay",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n  WHEN 'Heute' THEN FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\n  WHEN 'Gestern' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY))\r\n  WHEN 'Letzte 7 Tage' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY))\r\n  WHEN 'Letzte 30 Tage' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY))\r\n  WHEN 'Letztes Wochenende' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(MONDAY)), INTERVAL 2 DAY))\r\n  ELSE FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\nEND\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "17.06.24",
            "value": "17.06.24"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "toDay",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n  WHEN 'Heute' THEN FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\n  WHEN 'Gestern' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY))\r\n  WHEN 'Letzte 7 Tage' THEN FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\n  WHEN 'Letzte 30 Tage' THEN FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\n  WHEN 'Letztes Wochenende' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(MONDAY)), INTERVAL 1 DAY))\r\n  ELSE FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\nEND\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Alle Kapitel 2",
            "value": "Alle Kapitel 2"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "av_page_chapter2",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'Alle Kapitel 2'\r\n          WHEN 'Hamburg' THEN 'hamburg'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mecklenburg-vorpommern'\r\n          WHEN 'Niedersachsen' THEN 'niedersachsen'\r\n          WHEN 'Schleswig-Holstein' THEN 'schleswig-holstein'\r\n          ELSE 'Alle Kapitel 2'\r\n        END\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Jump\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Aktuell' THEN 'Alle Kapitel 2'\r\n          WHEN 'Sachsen' THEN 'sachsen'\r\n          WHEN 'Sachsen-Anhalt' THEN 'sachsen-anhalt'\r\n          WHEN 'Thüringen' THEN 'thueringen'\r\n          ELSE 'Alle Kapitel 2'\r\n      END\r\n      WHEN \"Sorbisches Programm\" THEN 'Alle Kapitel 2'\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\nEND\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "CONTAINS_SUBSTR(site_level2, 'mdr.de') AND CONTAINS_SUBSTR(page_chapter1, 'nachrichten') AND CONTAINS_SUBSTR(page_chapter2, 'Alle Kapitel 2') AND sendungs_id = 'Alle Sendungs-ID'",
            "value": "CONTAINS_SUBSTR(site_level2, 'mdr.de') AND CONTAINS_SUBSTR(page_chapter1, 'nachrichten') AND CONTAINS_SUBSTR(page_chapter2, 'Alle Kapitel 2') AND sendungs_id = 'Alle Sendungs-ID'"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "webFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$Redaktionen' LIKE 'Sorbisches Programm') THEN (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND (CONTAINS_SUBSTR(page_chapter1, '$page_chapter1') OR CONTAINS_SUBSTR(page_chapter1, 'serbski-program')) AND CONTAINS_SUBSTR(page_chapter2, '$page_chapter2') AND sendungs_id = '$sendungsid'\"\r\n);\r\n--ELSEIF ('$Unterkapitel' LIKE 'Aktuell') THEN (\r\n--  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND CONTAINS_SUBSTR(page_chapter1, '$page_chapter1') AND NOT CONTAINS_SUBSTR(page_chapter2, 'sachsen') AND NOT CONTAINS_SUBSTR(page_chapter2, 'sachsen-anhalt') AND NOT CONTAINS_SUBSTR(page_chapter2, 'thueringen')\"\r\n--);\r\nELSE (\r\n  SELECT \"site_level2 = '$site_level2' AND CONTAINS_SUBSTR(page_chapter1, '$page_chapter1') AND CONTAINS_SUBSTR(page_chapter2,'$page_chapter2') AND CONTAINS_SUBSTR(sendungs_id,'$sendungsid')\"\r\n);\r\nEND IF\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "CONTAINS_SUBSTR(site_level2, 'mdr.de') AND 'nachrichten' IN UNNEST(bi_av_page_chapter1_tags) AND 'Alle Kapitel 2' IN UNNEST(bi_av_page_chapter2_tags) AND 'Alle Sendungs-ID' IN UNNEST(sendungs_id_tags)",
            "value": "CONTAINS_SUBSTR(site_level2, 'mdr.de') AND 'nachrichten' IN UNNEST(bi_av_page_chapter1_tags) AND 'Alle Kapitel 2' IN UNNEST(bi_av_page_chapter2_tags) AND 'Alle Sendungs-ID' IN UNNEST(sendungs_id_tags)"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "avwebFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$Redaktionen' LIKE 'Sorbisches Programm') THEN (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND (('$page_chapter1' IN UNNEST(bi_av_page_chapter1_tags) AND '$av_page_chapter2' IN UNNEST(bi_av_page_chapter2_tags)) OR ('serbski-program' IN UNNEST(bi_av_page_chapter1_tags) AND '$av_page_chapter2' IN UNNEST(bi_av_page_chapter2_tags))) AND '$sendungsid' IN UNNEST(sendungs_id_tags)\"\r\n);\r\nELSE (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND '$page_chapter1' IN UNNEST(bi_av_page_chapter1_tags) AND '$av_page_chapter2' IN UNNEST(bi_av_page_chapter2_tags) AND '$sendungsid' IN UNNEST(sendungs_id_tags)\"\r\n);\r\nEND IF\r\n\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "_joined_today",
            "value": "_joined_today"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "articleTable",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \r\n  WHEN '${Zeitraum:text}' = \"Gestern\" THEN \"_joined_daily\" --hier noch Unklarheit welche Tabelle die Richtige ist\r\n  WHEN '${Zeitraum:text}' = \"Heute\" THEN \"_joined_today\"\r\n  ELSE \"_joined_daily\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "date = CURRENT_DATE()",
            "value": "date = CURRENT_DATE()"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "newZeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN \"date = CURRENT_DATE()\"\r\n  WHEN \"Gestern\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL  1 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"date  >= (SELECT saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND date  <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday, DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) ) \"\r\n  WHEN \"Letzte 7 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(), INTERVAL  7 DAY) AND date <= CURRENT_DATE()\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) AND date <= CURRENT_DATE()\"\r\n  ELSE \"False\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "CONTAINS_SUBSTR(site_level2, 'mdr.de') AND CONTAINS_SUBSTR(page_chapter1, 'nachrichten') AND 'Alle Kapitel 2' IN UNNEST(page_chapter2_tags) AND 'Alle Sendungs-ID' IN UNNEST(sendungs_id_tags)",
            "value": "CONTAINS_SUBSTR(site_level2, 'mdr.de') AND CONTAINS_SUBSTR(page_chapter1, 'nachrichten') AND 'Alle Kapitel 2' IN UNNEST(page_chapter2_tags) AND 'Alle Sendungs-ID' IN UNNEST(sendungs_id_tags)"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "listwebFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$Redaktionen' LIKE 'Sorbisches Programm') THEN (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND (CONTAINS_SUBSTR(page_chapter1, '$page_chapter1') OR CONTAINS_SUBSTR(page_chapter1, 'serbski-program')) AND CONTAINS_SUBSTR(page_chapter2, '$list_page_chapter2') AND CONTAINS_SUBSTR(sendungs_id, '$sendungsid')\"\r\n);\r\nELSEIF ('$Unterkapitel' LIKE 'Aktuell') THEN (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND CONTAINS_SUBSTR(page_chapter1, '$page_chapter1') AND 'Alle Kapitel 2' IN UNNEST(page_chapter2_tags) AND '$sendungsid' IN UNNEST(sendungs_id_tags)\"\r\n);\r\nELSEIF ('$LRA' LIKE 'MDR' AND '$Redaktionen' LIKE 'Sport') THEN (\r\n  SELECT \"site_level2 = '$site_level2' AND '$page_chapter1' IN UNNEST(page_chapter1_tags) AND 'Alle Kapitel 2' IN UNNEST(page_chapter2_tags) AND '$sendungsid' IN UNNEST(sendungs_id_tags)\"\r\n);\r\nELSE (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND '$page_chapter1' IN UNNEST(page_chapter1_tags) AND '$page_chapter2' IN UNNEST(page_chapter2_tags) AND '$sendungsid' in UNNEST(sendungs_id_tags)\"\r\n);\r\nEND IF\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "list_page_chapter2",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN ''\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'Alle Kapitel 2'\r\n          WHEN 'Hamburg' THEN 'hamburg'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mecklenburg-vorpommern'\r\n          WHEN 'Niedersachsen' THEN 'niedersachsen'\r\n          WHEN 'Schleswig-Holstein' THEN 'schleswig-holstein'\r\n          ELSE 'Alle Kapitel 2'\r\n        END\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'sport'\r\n      WHEN \"Jump\" THEN ''\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Aktuell' THEN ''\r\n          WHEN 'Sachsen' THEN 'sachsen'\r\n          WHEN 'Sachsen-Anhalt' THEN 'sachsen-anhalt'\r\n          WHEN 'Thüringen' THEN 'thueringen'\r\n          ELSE 'Alle Kapitel 2'\r\n      END\r\n      WHEN \"Sorbisches Programm\" THEN ''\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\nEND\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "time = CURRENT_DATE() OR time = DATE_SUB(CURRENT_DATE(), INTERVAL  1 DAY)",
            "value": "time = CURRENT_DATE() OR time = DATE_SUB(CURRENT_DATE(), INTERVAL  1 DAY)"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "avZeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN \"time = CURRENT_DATE() OR time = DATE_SUB(CURRENT_DATE(), INTERVAL  1 DAY)\"\r\n  WHEN \"Gestern\" THEN \"time = DATE_SUB(CURRENT_DATE(), INTERVAL  1 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"time  >= (SELECT saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND time  <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday, DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) ) \"\r\n  WHEN \"Letzte 7 Tage\" THEN \"time >= DATE_SUB(CURRENT_DATE(), INTERVAL  7 DAY) AND time <= CURRENT_DATE()\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"time >= DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) AND time <= CURRENT_DATE()\"\r\n  ELSE \"False\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "time >= CURRENT_DATETIME() AND time <= CURRENT_DATETIME()",
            "value": "time >= CURRENT_DATETIME() AND time <= CURRENT_DATETIME()"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "zeitraumListe",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN \"time >= CURRENT_DATETIME() AND time <= CURRENT_DATETIME()\"\r\n  WHEN \"Gestern\" THEN \"time >= DATETIME_SUB(CURRENT_DATETIME(),INTERVAL 1 DAY) AND time <= DATETIME_SUB(CURRENT_DATETIME(),INTERVAL 1 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"time  >= (SELECT saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND time  <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday, DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) ) \"\r\n  WHEN \"Letzte 7 Tage\" THEN \"time >= DATETIME_SUB(CURRENT_DATETIME(),INTERVAL 7 DAY) AND time <= CURRENT_DATETIME()\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"time >= DATETIME_SUB(CURRENT_DATETIME(), INTERVAL  30 DAY) AND time <= CURRENT_DATETIME()\"\r\n  ELSE \"False\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)",
            "value": "date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "oldZeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\"\r\n  WHEN \"Gestern\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL  2 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"date  >= DATE_SUB((SELECT saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) ), INTERVAL 7 DAY)  AND date  <= DATE_SUB((  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday, DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) ),INTERVAL 7 DAY) \"\r\n  WHEN \"Letzte 7 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(), INTERVAL  14 DAY) AND date <= DATE_SUB(CURRENT_DATE(),INTERVAL 7 DAY)\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date <= DATE_SUB(CURRENT_DATE(),INTERVAL 30 DAY)\"\r\n  ELSE \"False\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "tmstp",
            "value": "tmstp"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "fevergranularity",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Heute' THEN 'tmstp'\r\n    WHEN 'Gestern' THEN 'tmstp'\r\n    WHEN 'Letzte 7 Tage' THEN 'tmstp'\r\n    WHEN 'Letztes Wochenende' THEN 'date'\r\n    WHEN 'Letzte 30 Tage' THEN 'tmstp'\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "site_level2 = 'app_mdraktuell' AND page_chapter1 = 'Alle Kapitel 1' AND page_chapter2 = 'Alle Kapitel 2'  AND sendungs_id = 'Alle Sendungs-ID'",
            "value": "site_level2 = 'app_mdraktuell' AND page_chapter1 = 'Alle Kapitel 1' AND page_chapter2 = 'Alle Kapitel 2'  AND sendungs_id = 'Alle Sendungs-ID'"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "appFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \"site_level2 = '$app_name' AND page_chapter1 = 'Alle Kapitel 1' AND page_chapter2 = 'Alle Kapitel 2'  AND sendungs_id = 'Alle Sendungs-ID'\"",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "3",
            "value": "3"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "error": {},
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "buffer",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT $Tage*3",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "date >= DATE_SUB(CURRENT_DATE(),INTERVAL 7 DAY) AND date <= CURRENT_DATE()",
            "value": "date >= DATE_SUB(CURRENT_DATE(),INTERVAL 7 DAY) AND date <= CURRENT_DATE()"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "avzeitraumListe",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN \"date >= CURRENT_DATE() AND date <= CURRENT_DATE()\"\r\n  WHEN \"Gestern\" THEN \"date >= DATE_SUB(CURRENT_DATE(),INTERVAL 1 DAY) AND date <= DATE_SUB(CURRENT_DATE(),INTERVAL 1 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"date  >= (SELECT saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_DATE(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday,      DATE(TIMESTAMP_TRUNC(CURRENT_DATE(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND date  <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_DATE(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday, DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) ) \"\r\n  WHEN \"Letzte 7 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(),INTERVAL 7 DAY) AND date <= CURRENT_DATE()\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) AND date <= CURRENT_DATE()\"\r\n  ELSE \"False\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-6h",
      "to": "now"
    },
    "timepicker": {
      "hidden": true
    },
    "timezone": "",
    "title": "WIP Web&App Dashboard fester Zeitraum",
    "uid": "qBf7NNBIz",
    "version": 6,
    "weekStart": "monday"
  }
}
