{
  "meta": {
    "type": "db",
    "canSave": true,
    "canEdit": true,
    "canAdmin": true,
    "canStar": true,
    "canDelete": true,
    "slug": "social-media-report-instagram-copy",
    "url": "/d/rVlI-F_Sk/social-media-report-instagram-copy",
    "expires": "0001-01-01T00:00:00Z",
    "created": "2024-07-29T12:45:10Z",
    "updated": "2024-07-30T05:43:38Z",
    "updatedBy": "Anonymous",
    "createdBy": "Anonymous",
    "version": 2,
    "hasAcl": false,
    "isFolder": false,
    "folderId": 1179,
    "folderUid": "folder-H_rxO804k",
    "folderTitle": "Backup",
    "folderUrl": "/dashboards/f/folder-H_rxO804k/backup",
    "provisioned": false,
    "provisionedExternalId": "",
    "annotationsPermissions": {
      "dashboard": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      },
      "organization": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      }
    }
  },
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 1407,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "datasource": {
          "type": "postgres",
          "uid": "5RzC0pR4k"
        },
        "gridPos": {
          "h": 4,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 158,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<div style=\"background-color:rgba(38, 113, 198);color: white; text-align:center; vertical-align: middle; padding:20px 0; margin-top:0px; font-size: 15pt;\">\n<font color=\"#FFFFFF\"; size=\"3\">Für alle seit Mitte Dezember 2023 veröffentlichten Posts auf Instagram gilt: Die Interaktionen enthalten nun auch Shares - für alle Post-Typen (vorher nur für Reels verfügbar). Dadurch sind die Summen der Interaktionen gestiegen, ein direkter Vergleich mit Zeiträumen vor Dezember 2023 ist daher für Gesamtsummen von Interaktionen nicht möglich.</font>  </a>\n</div>",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "5RzC0pR4k"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": false,
            "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "post_video_view_time"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "facebookinsightsownposts",
            "timeColumn": "\"time\"",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 4,
          "w": 16,
          "x": 0,
          "y": 4
        },
        "id": 156,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "# Hinweise\n\n- Durch nachträgliche Importe und Speicherung der Daten kann es im Vergleich mit anderen Stichtags-Erhebungen (z.B. den Berichten der Medienforschungen) Abweichungen bei den Daten geben.",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f500",
              "mode": "fixed"
            },
            "displayName": "Aktive Nutzer:innen",
            "mappings": [],
            "noValue": "Nur zur ARD-internen Verwendung!",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 16,
          "y": 4
        },
        "id": 103,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 2,
            "valueSize": 15
          },
          "textMode": "value_and_name"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "total_video_10s_views",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "facebookInsightsOwnVideos"
          }
        ],
        "transformations": [
          {
            "id": "convertFieldType",
            "options": {
              "conversions": [
                {
                  "destinationType": "number",
                  "targetField": "Videostarts"
                }
              ],
              "fields": {}
            }
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "Videostarts": "∑ Videostarts"
              }
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "5RzC0pR4k"
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 20,
          "y": 4
        },
        "id": 51,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "Letzter Datenstand: </br>\n${stichtagmonat}\n\n",
          "mode": "html"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "5RzC0pR4k"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": false,
            "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "post_video_view_time"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "facebookinsightsownposts",
            "timeColumn": "\"time\"",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "5RzC0pR4k"
        },
        "gridPos": {
          "h": 2,
          "w": 10,
          "x": 0,
          "y": 8
        },
        "id": 58,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "# Instagram Report | ${Month} ${Jahr}\n\n",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "5RzC0pR4k"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": false,
            "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "post_video_view_time"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "facebookinsightsownposts",
            "timeColumn": "\"time\"",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 10
        },
        "id": 8,
        "panels": [],
        "title": "Entwicklung: Interaktionen",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "fillOpacity": 80,
              "gradientMode": "hue",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineWidth": 1,
              "scaleDistribution": {
                "type": "linear"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "month_year"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "time: MMM YY"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRBigband"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#FF6600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRKultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#861C18",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRHamburg"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#9A1D2C",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRFernsehen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#034081",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Visite"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#F34307",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NeuesausBuettenwarder"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#909CC1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRaufmLand"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#7AB86B",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Panorama"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#52B0ED",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRRadiophilharmonie"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#3AB0C1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRElbphilharmonieOrchester"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5BB9AB",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Schorse"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#C14C07",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "InasNacht"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#BFBFBF",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "RuterausderSpassbeginnt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#588FC0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "WirsinddieFreeses"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#BD2C57",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRTalkShow"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#9D8760",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DASimNDRFernsehen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#B7281E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sesamstrasse"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#EBD608",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRMecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007282",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRSport"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1453A1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRInfo"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0075BD",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRNiedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#F27D00",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ZAPPDasMedienmagazin"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#54403E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDR2"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#C53527",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NJOY"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#A0B21E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "EurovisionSongContest"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#073372",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRde"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0D1755",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRSchleswigHolstein"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#437BD0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "extra3"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#29C347",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Rest"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#7F7F7F",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Brisant"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#ff2302",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MeineSchlagerwelt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#c4464e",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "UnserDorfhatWochenende"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1b4062",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "BIWAKTV"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#cdaf7d",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Tierischtierisch"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#18b44f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ECHT"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "b12b40",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "SputnikSpringbreak"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d78f36",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRselbstbestimmt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#dd7709",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSatkula"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6fb218",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "InallerFreundschaft"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#adbfaf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DasGipfeltreffen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2b2a29",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSerbja"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6aa412",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRInvestigativ"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#fb073a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DerstarkeOsten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0286db",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ElefantTigerCo"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e4b320",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRJUMP"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#02e49a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Riverboat"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6c1e6a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRGarten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e9ffea",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Spasszone"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#3142d0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "WissenschafftFakten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1fa9ad",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRTHUERINGEN"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0061ae",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDR"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0061ae",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRKultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f4ac04",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRAktuell"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#275c74",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRKlassik"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#8f1e94",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSPUTNIK"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e74344",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "SportimOsten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#fb6e04",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MEDIEN360G"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#171c31",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSACHSEN"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#83ba35",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSACHSENANHALT"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#75b525",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 17,
          "w": 9,
          "x": 0,
          "y": 11
        },
        "id": 54,
        "options": {
          "barRadius": 0,
          "barWidth": 0.85,
          "groupWidth": 0.7,
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "orientation": "horizontal",
          "showValue": "never",
          "stacking": "normal",
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          },
          "xField": "month_year",
          "xTickLabelRotation": -45,
          "xTickLabelSpacing": 0
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\r\n\r\nDECLARE profiles STRING;\r\nSET profiles = (\"$queryInteractions\");\r\nEXECUTE IMMEDIATE format(\"\"\"WITH filter_month_profiles as (SELECT\r\n   REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(profile,'-',''),' ',''),',',''),'ä','ae'),'Ä','Ae'),'ö','oe'),'Ö','Oe'),'ü','ue'),'Ü','Ue'),'.',''),'!',''),'&',''),\"'\",\"\"),'#',''),'🍀',''),'ß','ss') as profile,\r\n   SUM(engagement) AS engagedUsers,\r\n   CONCAT(EXTRACT(MONTH from time),'-',EXTRACT(YEAR from time)) as month_year\r\n FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` AS instagram\r\n JOIN `ndr-code-bi-dashboard.Quintly.profiles` AS profiles\r\n   ON instagram.profileId = profiles.instagramID\r\n WHERE profiles.LRA = \"$LRA\"\r\n   AND $Zeitraum\r\n GROUP BY profile, month_year), filter_month_top_profiles as (\r\n SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers,\r\n   ROW_NUMBER() OVER (PARTITION BY month_year ORDER BY engagedUsers DESC) AS profile_rank\r\n FROM filter_month_profiles\r\n), filter_month_top_8_profiles AS (\r\n SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers\r\n FROM filter_month_top_profiles\r\n WHERE profile in ($queryInteractions)\r\n ), filter_month_rest AS (\r\n SELECT\r\n   month_year,\r\n   'Rest' AS profile,\r\n   SUM(engagedUsers) AS engagedUsers\r\n FROM filter_month_top_profiles\r\n WHERE profile not in ($queryInteractions) \r\n GROUP BY month_year\r\n), filter_month_top_8_rest_profiles AS (\r\n  SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers\r\n FROM filter_month_top_8_profiles\r\n UNION ALL\r\n SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers\r\n FROM filter_month_rest\r\n ORDER BY month_year DESC, profile\r\n),privous_months_profiles AS (\r\n SELECT\r\n   CONCAT(EXTRACT(MONTH from time),'-',EXTRACT(YEAR from time)) as month_year,\r\n   REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(profile,'-',''),' ',''),',',''),'ä','ae'),'Ä','Ae'),'ö','oe'),'Ö','Oe'),'ü','ue'),'Ü','Ue'),'.',''),'!',''),'&',''),\"'\",\"\"),'#',''),'🍀',''),'ß','ss') as profile,\r\n    CASE \"${Monat:text}\"\r\n   WHEN \"Jahr\" THEN 0\r\n   ELSE  SUM(engagement) END AS engagedUsers\r\n FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` AS instagram\r\n JOIN `ndr-code-bi-dashboard.Quintly.profiles` AS profiles\r\n   ON instagram.profileId = profiles.instagramID\r\n WHERE profiles.LRA = \"$LRA\"\r\n   AND \r\n   CASE \"${Monat:text}\"\r\n      WHEN \"Jahr\" THEN  EXTRACT(YEAR from time ) = $Jahr \r\n      ELSE EXTRACT(DATE FROM time) >= DATE_SUB(DATE($Jahr, $Monat, 1), INTERVAL 1 YEAR) AND EXTRACT(DATE FROM time) <= LAST_DAY(DATE_SUB(DATE($Jahr, $Monat, 1), INTERVAL 1 MONTH), MONTH)\r\n      END\r\n GROUP BY profile, month_year\r\n), privous_months_top_8_profiles AS (\r\n SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers\r\n FROM privous_months_profiles\r\n WHERE profile IN ($top_8_profiles)\r\n ), privous_months_rest AS (\r\n SELECT\r\n   month_year,\r\n   'Rest' AS profile,\r\n   SUM(engagedUsers) AS engagedUsers\r\n FROM privous_months_profiles\r\n WHERE profile NOT IN ($top_8_profiles )\r\n GROUP BY month_year), privous_months_top_8_rest_profiles AS (\r\n  SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers\r\n FROM privous_months_top_8_profiles\r\n UNION ALL\r\n SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers\r\n FROM privous_months_rest\r\n ORDER BY month_year DESC, profile)\r\n\r\nSELECT\r\n*\r\nFROM (\r\n SELECT\r\n   DATE(CAST(SPLIT(month_year, '-')[OFFSET(1)] AS INT64), CAST(SPLIT(month_year, '-')[OFFSET(0)] AS INT64), 1) as month_year ,\r\n   FORMAT_DATE('%%B %%Y', DATE(CAST(SPLIT(month_year, '-')[OFFSET(1)] AS INT64), CAST(SPLIT(month_year, '-')[OFFSET(0)] AS INT64), 1)) AS formatted_date,\r\n   profile,\r\n   engagedUsers\r\n FROM filter_month_top_8_rest_profiles\r\n UNION ALL\r\n SELECT\r\n   DATE(CAST(SPLIT(month_year, '-')[OFFSET(1)] AS INT64), CAST(SPLIT(month_year, '-')[OFFSET(0)] AS INT64), 1) as month_year,\r\n   FORMAT_DATE('%%B %%Y', DATE(CAST(SPLIT(month_year, '-')[OFFSET(1)] AS INT64), CAST(SPLIT(month_year, '-')[OFFSET(0)] AS INT64), 1)) AS formatted_date,\r\n   profile,\r\n   engagedUsers\r\n FROM privous_months_top_8_rest_profiles\r\n ORDER BY month_year DESC, profile\r\n)\r\nPIVOT(SUM(engagedUsers) FOR profile IN (%s))\"\"\", profiles);\r\n\r\n\r\n\r\n",
            "refId": "Aktive Nutzer",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summe Interaktionen $LRA Profiles",
        "transformations": [
          {
            "id": "groupBy",
            "options": {
              "fields": {
                "month": {
                  "aggregations": []
                },
                "month_year": {
                  "aggregations": []
                }
              }
            }
          },
          {
            "id": "convertFieldType",
            "options": {
              "conversions": [
                {
                  "destinationType": "time",
                  "targetField": "month_year"
                }
              ],
              "fields": {}
            }
          },
          {
            "id": "filterFieldsByName",
            "options": {
              "include": {
                "pattern": "^(?!.*formatted_date).*$"
              }
            }
          }
        ],
        "transparent": true,
        "type": "barchart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "NDRBigband"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#FF6600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRKultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#861C18",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRHamburg"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#9A1D2C",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRFernsehen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#034081",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Visite"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#F34307",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NeuesausBuettenwarder"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#909CC1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRaufmLand"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#7AB86B",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Panorama"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#52B0ED",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRRadiophilharmonie"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#3AB0C1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRElbphilharmonieOrchester"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5BB9AB",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Schorse"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#C14C07",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "InasNacht"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#BFBFBF",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "RuterausderSpassbeginnt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#588FC0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "WirsinddieFreeses"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#BD2C57",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRTalkShow"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#9D8760",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DASimNDRFernsehen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#B7281E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sesamstrasse"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#EBD608",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRMecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007282",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRSport"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1453A1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRInfo"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0075BD",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRNiedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#F27D00",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ZAPPDasMedienmagazin"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#54403E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDR2"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#C53527",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NJOY"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#A0B21E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "EurovisionSongContest"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#073372",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRde"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0D1755",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRSchleswigHolstein"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#437BD0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "extra3"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#29C347",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Rest"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#7F7F7F",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Brisant"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#ff2302",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MeineSchlagerwelt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#c4464e",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "UnserDorfhatWochenende"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1b4062",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "BIWAKTV"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#cdaf7d",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Tierischtierisch"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#18b44f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ECHT"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "b12b40",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "SputnikSpringbreak"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d78f36",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRselbstbestimmt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#dd7709",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSatkula"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6fb218",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "InallerFreundschaft"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#adbfaf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DasGipfeltreffen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2b2a29",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSerbja"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6aa412",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRInvestigativ"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#fb073a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DerstarkeOsten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0286db",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ElefantTigerCo"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e4b320",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRJUMP"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#02e49a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Riverboat"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6c1e6a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRGarten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e9ffea",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Spasszone"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#3142d0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "WissenschafftFakten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1fa9ad",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRTHUERINGEN"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0061ae",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDR"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0061ae",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRKultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f4ac04",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRAktuell"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#275c74",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRKlassik"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#8f1e94",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSPUTNIK"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e74344",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "SportimOsten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#fb6e04",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MEDIEN360G"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#171c31",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSACHSEN"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#83ba35",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSACHSENANHALT"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#75b525",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "__systemRef": "hideSeriesFrom",
              "matcher": {
                "id": "byNames",
                "options": {
                  "mode": "exclude",
                  "names": [
                    "engagedUsers",
                    "Brisant"
                  ],
                  "prefix": "All except:",
                  "readOnly": true
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": false,
                    "tooltip": false,
                    "viz": true
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 17,
          "w": 7,
          "x": 9,
          "y": 11
        },
        "id": 55,
        "options": {
          "displayLabels": [
            "percent"
          ],
          "legend": {
            "displayMode": "list",
            "placement": "right",
            "showLegend": true,
            "values": [
              "percent"
            ]
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH filter_month_profiles as (SELECT\r\n   REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(profile,'-',''),' ',''),',',''),'ä','ae'),'Ä','Ae'),'ö','oe'),'Ö','Oe'),'ü','ue'),'Ü','Ue'),'.',''),'!',''),'&',''),\"'\",\"\"),'#',''),'🍀',''),'ß','ss') as profile,\r\n   SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END) AS engagedUsers,\r\n   CASE \"${Monat:text}\"\r\n      WHEN \"Jahr\" THEN \"year\"\r\n      ELSE CONCAT(EXTRACT(MONTH from time),'-',EXTRACT(YEAR from time)) \r\n      END as month_year,\r\n      --COUNT(DISTINCT time) as days\r\n FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` AS instagram\r\n JOIN `ndr-code-bi-dashboard.Quintly.profiles` AS profiles\r\n   ON instagram.profileId = profiles.instagramID\r\n WHERE profiles.LRA = \"$LRA\"\r\n   AND $Zeitraum \r\n GROUP BY profile, month_year), filter_month_top_profiles as (\r\n SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers,\r\n   ROW_NUMBER() OVER (PARTITION BY month_year ORDER BY engagedUsers DESC) AS profile_rank,\r\n   --days\r\n FROM filter_month_profiles\r\n), filter_month_top_8_profiles AS (\r\n SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers,\r\n   --days\r\n FROM filter_month_top_profiles\r\n WHERE profile_rank <= 8\r\n ), filter_month_rest AS (\r\n SELECT\r\n   month_year,\r\n   'Rest' AS profile,\r\n   --MAX(days) as days,\r\n   SUM(engagedUsers) AS engagedUsers\r\n FROM filter_month_top_profiles\r\n WHERE profile_rank > 8\r\n GROUP BY month_year\r\n), filter_month_top_8_rest_profiles AS (\r\n  SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers,\r\n   --days\r\n FROM filter_month_top_8_profiles\r\n UNION ALL\r\n SELECT\r\n   month_year,\r\n   profile,\r\n   engagedUsers,\r\n   --days\r\n FROM filter_month_rest\r\n ORDER BY month_year DESC, profile\r\n)\r\nSELECT profile, engagedUsers as engagedUsers FROM filter_month_top_8_rest_profiles\r\n\r\n",
            "refId": "Top 8 profiles",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Anteil Top 8 + Rest | $Month $Jahr",
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 16,
          "y": 11
        },
        "id": 151,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "5RzC0pR4k"
        },
        "gridPos": {
          "h": 2,
          "w": 6,
          "x": 18,
          "y": 11
        },
        "id": 94,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "### Interaktionen in Mio.\n",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "5RzC0pR4k"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": false,
            "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "post_video_view_time"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "facebookinsightsownposts",
            "timeColumn": "\"time\"",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 18,
          "y": 13
        },
        "id": 69,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 30
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Summe')), 'Summe')\r\nFROM(\r\nSELECT 'Summe' as Gesamt\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 21,
          "y": 13
        },
        "id": 71,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 30
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Ø Pro Tag')), 'Ø Pro Tag')\r\nFROM(\r\nSELECT 'Ø Pro Tag' as Gesamt\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 16,
          "y": 15
        },
        "id": 149,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "## $Monat_abkuerzung\r\n## $Jahr",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH(CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))), CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))\r\nFROM(\r\nSELECT CONCAT(\"$Monat_abkuerzung\", \" $Jahr\") as Gesamt\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "decimals": 3,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                },
                {
                  "color": "green",
                  "value": 0
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "lm_interactions"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Month} ${Jahr}"
                },
                {
                  "id": "decimals",
                  "value": 1
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "lm_interactionsPerDay"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 3
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 18,
          "y": 15
        },
        "id": 27,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nlm_interactions, \r\nlm_interactions/$number_of_days as lm_interactionsPerDay,\r\nFROM\r\n(SELECT\r\n  SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END)/1000000 as lm_interactions,\r\n  COUNT(DISTINCT time) as days\r\n  \r\n  FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\n  JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n  AND $Zeitraum\r\n  --EXTRACT(MONTH from time) = $Monat AND EXTRACT(YEAR from time) = $Jahr\r\n)\r\n\r\n",
            "refId": "Interaktionen",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 16,
          "y": 18
        },
        "id": 152,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "${Vergleich}",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH(CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))), CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))\r\nFROM(\r\nSELECT CONCAT(\"$Monat_abkuerzung\", \" $Jahr\") as Gesamt\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                },
                {
                  "color": "green",
                  "value": 0
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "diff_mil"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Zum Vormonat"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "diff_per_day"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                },
                {
                  "id": "displayName",
                  "value": "Ø-Tag"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 18,
          "y": 18
        },
        "id": 61,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\r\nWITH past_value_in_mil AS(\r\n  SELECT\r\n  SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END)/1000000 as past_sum_in_mil,\r\n  FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\n  JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n  WHERE True\r\n  AND CASE $Monat\r\n  WHEN 13 THEN TRUE\r\n  ELSE EXTRACT(MONTH from time) = EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AND EXTRACT(YEAR from time) = EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) END\r\n), past_value_per_day AS(\r\n  SELECT past_sum_in_mil/$number_of_days_last_month AS past_sum_per_day\r\n  FROM past_value_in_mil\r\n), current_value_in_mil AS(\r\n  SELECT\r\n  SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END)/1000000 as current_sum_in_mil,\r\n  FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\n  JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n  AND EXTRACT(MONTH from time) = $Monat AND EXTRACT(YEAR from time) = $Jahr\r\n), current_value_per_day AS(\r\n  SELECT current_sum_in_mil/$number_of_days AS current_sum_per_day\r\n  FROM current_value_in_mil\r\n)\r\nSELECT (current_sum_in_mil/past_sum_in_mil - 1)*100 as diff_mil, (current_sum_per_day/past_sum_per_day - 1)*100 as diff_per_day FROM past_value_in_mil, current_value_in_mil, current_value_per_day, past_value_per_day\r\n",
            "refId": "Interaktionen Vormonat",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 16,
          "y": 21
        },
        "id": 154,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "## $Monat_abkuerzung\r\n## $LastJahr",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH(CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))), CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))\r\nFROM(\r\nSELECT CONCAT(\"$Monat_abkuerzung\", \" $Jahr\") as Gesamt\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                },
                {
                  "color": "green",
                  "value": 0
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "diff_mil"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Zum Vorjahresmonat"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "diff_per_day"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                },
                {
                  "id": "displayName",
                  "value": "Ø-Tag"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 18,
          "y": 21
        },
        "id": 62,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value_in_mil AS(\r\n  SELECT\r\n  SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END)/1000000 as past_sum_in_mil,\r\n  --COUNT(DISTINCT time) as days\r\n  \r\n  FROM `ndr-code-bi-dashboard.$comp_dataset.instagramInsightsOwnPosts` as instagram\r\n  JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n  WHERE True\r\n  AND CASE \"${Monat:text}\"\r\n  WHEN \"Jahr\" THEN EXTRACT(YEAR from time) = $Jahr - 1\r\n  ELSE EXTRACT(MONTH from time) = $Monat AND EXTRACT(YEAR from time) = $Jahr - 1 END\r\n), past_value_per_day AS(\r\n  SELECT\r\n  past_sum_in_mil/$number_of_days_last_year AS past_sum_per_day\r\n  FROM past_value_in_mil\r\n), current_value_in_mil AS(\r\n  SELECT\r\n  SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END)/1000000 as current_sum_in_mil,\r\n  --COUNT(DISTINCT time) as days,\r\n  FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\n  JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n  WHERE True\r\n  AND $Zeitraum\r\n), current_value_per_day AS(\r\n  SELECT\r\n  current_sum_in_mil/$number_of_days AS current_sum_per_day\r\n  FROM current_value_in_mil\r\n)\r\nSELECT (current_sum_in_mil/past_sum_in_mil - 1)*100 as diff_mil, (current_sum_per_day/past_sum_per_day - 1)*100 as diff_per_day FROM past_value_in_mil, current_value_in_mil, current_value_per_day, past_value_per_day",
            "refId": "Interaktionen Vorjahr",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 28
        },
        "id": 32,
        "panels": [],
        "title": "Entwicklung: Videostarts",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "fillOpacity": 80,
              "gradientMode": "hue",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineWidth": 1,
              "scaleDistribution": {
                "type": "linear"
              }
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "month_year"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "time: MMM YY"
                },
                {
                  "id": "custom.axisPlacement",
                  "value": "auto"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRBigband"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#FF6600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRKultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#861C18",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRHamburg"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#9A1D2C",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRFernsehen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#034081",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Visite"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#F34307",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NeuesausBuettenwarder"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#909CC1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRaufmLand"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#7AB86B",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Panorama"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#52B0ED",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRRadiophilharmonie"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#3AB0C1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRElbphilharmonieOrchester"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5BB9AB",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Schorse"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#C14C07",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "InasNacht"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#BFBFBF",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "RuterausderSpassbeginnt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#588FC0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "WirsinddieFreeses"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#BD2C57",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRTalkShow"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#9D8760",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DASimNDRFernsehen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#B7281E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sesamstrasse"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#EBD608",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRMecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007282",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRSport"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1453A1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRInfo"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0075BD",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRNiedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#F27D00",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ZAPPDasMedienmagazin"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#54403E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDR2"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#C53527",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NJOY"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#A0B21E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "EurovisionSongContest"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#073372",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRde"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0D1755",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRSchleswigHolstein"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#437BD0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "extra3"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#29C347",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Rest"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#7F7F7F",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Brisant"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#ff2302",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MeineSchlagerwelt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#c4464e",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "UnserDorfhatWochenende"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1b4062",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "BIWAKTV"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#cdaf7d",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Tierischtierisch"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#18b44f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ECHT"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "b12b40",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "SputnikSpringbreak"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d78f36",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRselbstbestimmt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#dd7709",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSatkula"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6fb218",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "InallerFreundschaft"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#adbfaf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DasGipfeltreffen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2b2a29",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSerbja"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6aa412",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRInvestigativ"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#fb073a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DerstarkeOsten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0286db",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ElefantTigerCo"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e4b320",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRJUMP"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#02e49a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Riverboat"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6c1e6a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRGarten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e9ffea",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Spasszone"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#3142d0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "WissenschafftFakten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1fa9ad",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRTHUERINGEN"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0061ae",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDR"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0061ae",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRKultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f4ac04",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRAktuell"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#275c74",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRKlassik"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#8f1e94",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSPUTNIK"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e74344",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "SportimOsten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#fb6e04",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MEDIEN360G"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#171c31",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSACHSEN"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#83ba35",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSACHSENANHALT"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#75b525",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 17,
          "w": 9,
          "x": 0,
          "y": 29
        },
        "id": 112,
        "options": {
          "barRadius": 0,
          "barWidth": 0.85,
          "groupWidth": 0.7,
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "orientation": "horizontal",
          "showValue": "never",
          "stacking": "normal",
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          },
          "xField": "month_year",
          "xTickLabelRotation": -45,
          "xTickLabelSpacing": 0
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "DECLARE profiles STRING;\r\nSET\r\n  profiles = (\"$QueryVideoViews\");\r\nEXECUTE IMMEDIATE format(\r\n  \"\"\"WITH filter_month_profiles as (SELECT\r\n   REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(profile,'-',''),' ',''),',',''),'ä','ae'),'Ä','Ae'),'ö','oe'),'Ö','Oe'),'ü','ue'),'Ü','Ue'),'.',''),'!',''),'&',''),\"'\",\"\"),' #',''),'🍀',''),'ß','ss') as profile,\r\n  SUM(IFNULL(videoViews, 0)) AS videoViews,\r\n  CONCAT(\r\n    EXTRACT(\r\n      MONTH\r\n      from\r\n        time\r\n    ),\r\n    '-',\r\n    EXTRACT(\r\n      YEAR\r\n      from\r\n        time\r\n    )\r\n  ) as month_year\r\n  FROM\r\n    `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` AS instagram\r\n    JOIN `ndr-code-bi-dashboard.Quintly.profiles` AS profiles ON instagram.profileId = profiles.instagramID\r\n  WHERE\r\n    profiles.LRA = \"$LRA\"\r\n    AND $Zeitraum\r\n  GROUP BY\r\n    profile,\r\n    month_year\r\n),\r\nfilter_month_top_profiles as (\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews,\r\n    ROW_NUMBER() OVER (\r\n      PARTITION BY month_year\r\n      ORDER BY\r\n        videoViews DESC\r\n    ) AS profile_rank\r\n  FROM\r\n    filter_month_profiles\r\n),\r\nfilter_month_top_8_profiles AS (\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews\r\n  FROM\r\n    filter_month_top_profiles\r\n  WHERE\r\n    profile IN ($QueryVideoViews)\r\n),\r\nfilter_month_rest AS (\r\n  SELECT\r\n    month_year,\r\n    'Rest' AS profile,\r\n    SUM(videoViews) AS videoViews\r\n  FROM\r\n    filter_month_top_profiles\r\n  WHERE\r\n    profile not in ($QueryVideoViews)\r\n  GROUP BY\r\n    month_year\r\n),\r\nfilter_month_top_8_rest_profiles AS (\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews\r\n  FROM\r\n    filter_month_top_8_profiles\r\n  UNION\r\n  ALL\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews\r\n  FROM\r\n    filter_month_rest\r\n  ORDER BY\r\n    month_year DESC,\r\n    profile\r\n),\r\nprivous_months_profiles AS (\r\n  SELECT\r\n    CONCAT(\r\n      EXTRACT(\r\n        MONTH\r\n        from\r\n          time\r\n      ),\r\n      '-',\r\n      EXTRACT(\r\n        YEAR\r\n        from\r\n          time\r\n      )\r\n    ) as month_year,\r\n    REPLACE(\r\n      REPLACE(\r\n        REPLACE(\r\n          REPLACE(\r\n            REPLACE(\r\n              REPLACE(\r\n                REPLACE(\r\n                  REPLACE(\r\n                    REPLACE(\r\n                      REPLACE(\r\n                        REPLACE(\r\n                          REPLACE(\r\n                            REPLACE(\r\n                              REPLACE(\r\n                                REPLACE(REPLACE(profile, '-', ''), ' ', ''),\r\n                                ',',\r\n                                ''\r\n                              ),\r\n                              'ä',\r\n                              'ae'\r\n                            ),\r\n                            'Ä',\r\n                            'Ae'\r\n                          ),\r\n                          'ö',\r\n                          'oe'\r\n                        ),\r\n                        'Ö',\r\n                        'Oe'\r\n                      ),\r\n                      'ü',\r\n                      'ue'\r\n                    ),\r\n                    'Ü',\r\n                    'Ue'\r\n                  ),\r\n                  '.',\r\n                  ''\r\n                ),\r\n                '!',\r\n                ''\r\n              ),\r\n              '&',\r\n              ''\r\n            ),\r\n            \"'\",\r\n            \"\"\r\n          ),\r\n          '#',\r\n          ''\r\n        ),\r\n        '🍀',\r\n        ''\r\n      ),\r\n      'ß',\r\n      'ss'\r\n    ) as profile,\r\n    CASE $Monat\r\n    WHEN 13 THEN 0\r\n    ELSE SUM(videoViews) END AS videoViews\r\n  FROM\r\n    `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` AS instagram\r\n    JOIN `ndr-code-bi-dashboard.Quintly.profiles` AS profiles ON instagram.profileId = profiles.instagramID\r\n  WHERE\r\n    profiles.LRA = \"$LRA\"\r\n    AND CASE \"${Monat:text}\"\r\n      WHEN \"Jahr\" THEN EXTRACT(YEAR FROM time) = $Jahr  \r\n      ELSE EXTRACT(DATE FROM time) >= DATE_SUB(DATE($Jahr, $Monat, 1), INTERVAL 1 YEAR) AND EXTRACT(DATE FROM time) <= LAST_DAY(DATE_SUB(DATE($Jahr, $Monat, 1), INTERVAL 1 MONTH), MONTH)\r\n      END\r\n  GROUP BY\r\n    profile,\r\n    month_year\r\n),\r\nprivous_months_top_8_profiles AS (\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews\r\n  FROM\r\n    privous_months_profiles\r\n  WHERE\r\n    profile IN ($QueryVideoViews)\r\n),\r\nprivous_months_rest AS (\r\n  SELECT\r\n    month_year,\r\n    'Rest' AS profile,\r\n    SUM(videoViews) AS videoViews\r\n  FROM\r\n    privous_months_profiles\r\n  WHERE\r\n    profile NOT IN ($QueryVideoViews)\r\n  GROUP BY\r\n    month_year\r\n),\r\nprivous_months_top_8_rest_profiles AS (\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews\r\n  FROM\r\n    privous_months_top_8_profiles\r\n  UNION\r\n  ALL\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews\r\n  FROM\r\n    privous_months_rest\r\n  ORDER BY\r\n    month_year DESC,\r\n    profile\r\n), --SELECT * FROM privous_months_top_8_rest_profiles\r\nparameters AS (\r\n  SELECT 0 AS min_value, 2000000000 AS max_value \r\n),\r\nstep_generator AS (\r\n  SELECT ARRAY<INT64>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] AS steps\r\n),\r\nscaled_steps AS (\r\n  SELECT ARRAY(\r\n    SELECT min_value + step * ((max_value - min_value) / 9)\r\n    FROM UNNEST(steps) AS step\r\n  ) AS scaled_steps\r\n  FROM step_generator, parameters\r\n),\r\nfinal_data AS(\r\nSELECT\r\n  *\r\nFROM\r\n  (\r\n    SELECT\r\n      DATE(\r\n        CAST(SPLIT(month_year, '-') [OFFSET(1)] AS INT64),\r\n        CAST(SPLIT(month_year, '-') [OFFSET(0)] AS INT64),\r\n        1\r\n      ) as month_year,\r\n      FORMAT_DATE(\r\n        '%%B %%Y',\r\n        DATE(\r\n          CAST(SPLIT(month_year, '-') [OFFSET(1)] AS INT64),\r\n          CAST(SPLIT(month_year, '-') [OFFSET(0)] AS INT64),\r\n          1\r\n        )\r\n      ) AS formatted_date,\r\n      profile,\r\n     videoViews    FROM\r\n      filter_month_top_8_rest_profiles\r\n    UNION\r\n    ALL\r\n    SELECT\r\n      DATE(\r\n        CAST(SPLIT(month_year, '-') [OFFSET(1)] AS INT64),\r\n        CAST(SPLIT(month_year, '-') [OFFSET(0)] AS INT64),\r\n        1\r\n      ) as month_year,\r\n      FORMAT_DATE(\r\n        '%%B %%Y',\r\n        DATE(\r\n          CAST(SPLIT(month_year, '-') [OFFSET(1)] AS INT64),\r\n          CAST(SPLIT(month_year, '-') [OFFSET(0)] AS INT64),\r\n          1\r\n        )\r\n      ) AS formatted_date,\r\n      profile,\r\n      videoViews\r\n    FROM\r\n      privous_months_top_8_rest_profiles\r\n    ORDER BY\r\n      month_year DESC,\r\n      profile\r\n  \r\n  ) PIVOT(SUM(videoViews)  FOR profile IN (% s)))\r\n  SELECT * FROM final_data\r\n  \r\n   \"\"\", profiles);",
            "refId": "Aktive Nutzer",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summe Videostarts $LRA Profiles",
        "transformations": [
          {
            "id": "groupBy",
            "options": {
              "fields": {
                "month": {
                  "aggregations": []
                }
              }
            }
          },
          {
            "id": "convertFieldType",
            "options": {
              "conversions": [
                {
                  "destinationType": "time",
                  "targetField": "month_year"
                }
              ],
              "fields": {}
            }
          },
          {
            "id": "filterFieldsByName",
            "options": {
              "include": {
                "pattern": "^(?!.*formatted_date).*$"
              }
            }
          }
        ],
        "transparent": true,
        "type": "barchart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "NDRBigband"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#FF6600",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRKultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#861C18",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRHamburg"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#9A1D2C",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRFernsehen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#034081",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Visite"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#F34307",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NeuesausBuettenwarder"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#909CC1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRaufmLand"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#7AB86B",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Panorama"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#52B0ED",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRRadiophilharmonie"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#3AB0C1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRElbphilharmonieOrchester"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5BB9AB",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Schorse"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#C14C07",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "InasNacht"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#BFBFBF",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "RuterausderSpassbeginnt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#588FC0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "WirsinddieFreeses"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#BD2C57",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRTalkShow"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#9D8760",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DASimNDRFernsehen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#B7281E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sesamstrasse"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#EBD608",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRMecklenburgVorpommern"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#007282",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRSport"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1453A1",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRInfo"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0075BD",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRNiedersachsen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#F27D00",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ZAPPDasMedienmagazin"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#54403E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDR2"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#C53527",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NJOY"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#A0B21E",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "EurovisionSongContest"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#073372",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRde"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0D1755",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "NDRSchleswigHolstein"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#437BD0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "extra3"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#29C347",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Rest"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#7F7F7F",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Brisant"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#ff2302",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MeineSchlagerwelt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#c4464e",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "UnserDorfhatWochenende"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1b4062",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "BIWAKTV"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#cdaf7d",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Tierischtierisch"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#18b44f",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ECHT"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "b12b40",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "SputnikSpringbreak"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#d78f36",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRselbstbestimmt"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#dd7709",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSatkula"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6fb218",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "InallerFreundschaft"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#adbfaf",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DasGipfeltreffen"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#2b2a29",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSerbja"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6aa412",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRInvestigativ"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#fb073a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DerstarkeOsten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0286db",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ElefantTigerCo"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e4b320",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRJUMP"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#02e49a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Riverboat"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#6c1e6a",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRGarten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e9ffea",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Spasszone"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#3142d0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "WissenschafftFakten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1fa9ad",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRTHUERINGEN"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0061ae",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDR"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#0061ae",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRKultur"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#f4ac04",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRAktuell"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#275c74",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRKlassik"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#8f1e94",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSPUTNIK"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#e74344",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "SportimOsten"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#fb6e04",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MEDIEN360G"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#171c31",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSACHSEN"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#83ba35",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MDRSACHSENANHALT"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#75b525",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 7,
          "x": 9,
          "y": 29
        },
        "id": 24,
        "options": {
          "displayLabels": [
            "percent"
          ],
          "legend": {
            "displayMode": "table",
            "placement": "right",
            "showLegend": true,
            "values": [
              "percent"
            ]
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH filter_month_profiles as (\r\n  SELECT\r\n    REPLACE(\r\n      REPLACE(\r\n        REPLACE(\r\n          REPLACE(\r\n            REPLACE(\r\n              REPLACE(\r\n                REPLACE(\r\n                  REPLACE(\r\n                    REPLACE(\r\n                      REPLACE(\r\n                        REPLACE(\r\n                          REPLACE(\r\n                            REPLACE(\r\n                              REPLACE(REPLACE(REPLACE(profile, '-', ''), ' ', ''), ',', ''),\r\n                              'ä',\r\n                              'ae'\r\n                            ),\r\n                            'Ä',\r\n                            'Ae'\r\n                          ),\r\n                          'ö',\r\n                          'oe'\r\n                        ),\r\n                        'Ö',\r\n                        'Oe'\r\n                      ),\r\n                      'ü',\r\n                      'ue'\r\n                    ),\r\n                    'Ü',\r\n                    'Ue'\r\n                  ),\r\n                  '.',\r\n                  ''\r\n                ),\r\n                '!',\r\n                ''\r\n              ),\r\n              '&',\r\n              ''\r\n            ),\r\n            \"'\",\r\n            \"\"\r\n          ),\r\n          '#',\r\n          ''\r\n        ),\r\n        '🍀',\r\n        ''\r\n      ),\r\n      'ß',\r\n      'ss'\r\n    ) as profile,\r\n    SUM(IFNULL(videoViews, 0)) as videoViews,\r\n    CASE \"${Monat:text}\"\r\n      WHEN \"Jahr\" THEN \"year\"\r\n      ELSE CONCAT(EXTRACT(MONTH from time),'-',EXTRACT(YEAR from time)) \r\n      END as month_year,\r\n  FROM\r\n    `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\n    JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n      instagram.profileId = profiles.instagramID\r\n      AND profiles.LRA = \"$LRA\"\r\n    )\r\n  WHERE\r\n    profiles.LRA = \"$LRA\"\r\n    AND $Zeitraum \r\n  GROUP BY\r\n    profile,\r\n    month_year\r\n),\r\nfilter_month_top_profiles as (\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews,\r\n    ROW_NUMBER() OVER (\r\n      PARTITION BY month_year\r\n      ORDER BY\r\n        videoViews DESC\r\n    ) AS profile_rank\r\n  FROM\r\n    filter_month_profiles\r\n),\r\nfilter_month_top_8_profiles AS (\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews,\r\n  FROM\r\n    filter_month_top_profiles\r\n  WHERE\r\n    profile_rank <= 8\r\n),\r\nfilter_month_rest AS (\r\n  SELECT\r\n    month_year,\r\n    'Rest' AS profile,\r\n    SUM(videoViews) AS videoViews,\r\n  FROM\r\n    filter_month_top_profiles\r\n  WHERE\r\n    profile_rank > 8\r\n  GROUP BY\r\n    month_year\r\n),\r\nfilter_month_top_8_rest_profiles AS (\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews,\r\n  FROM\r\n    filter_month_top_8_profiles\r\n  UNION\r\n  ALL\r\n  SELECT\r\n    month_year,\r\n    profile,\r\n    videoViews,\r\n  FROM\r\n    filter_month_rest\r\n  ORDER BY\r\n    month_year DESC,\r\n    profile\r\n)\r\nSELECT\r\n  profile,\r\n  videoViews as videoViews\r\nFROM\r\n  filter_month_top_8_rest_profiles",
            "refId": "Anteil Videostarts",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Anteil Videostarts Top 8 | ${Month} ${Jahr}",
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 16,
          "y": 29
        },
        "id": 98,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "5RzC0pR4k"
        },
        "gridPos": {
          "h": 2,
          "w": 6,
          "x": 18,
          "y": 29
        },
        "id": 99,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "### Videostarts in Mio.\n",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "5RzC0pR4k"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": false,
            "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "post_video_view_time"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "facebookinsightsownposts",
            "timeColumn": "\"time\"",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 18,
          "y": 31
        },
        "id": 73,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 30
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Summe')), 'Summe')\r\nFROM(\r\nSELECT 'Summe' as Gesamt\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 3,
          "x": 21,
          "y": 31
        },
        "id": 75,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {
            "valueSize": 30
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Ø Pro Tag')), 'Ø Pro Tag')\r\nFROM(\r\nSELECT 'Ø Pro Tag' as Gesamt\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 16,
          "y": 33
        },
        "id": 97,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "## $Monat_abkuerzung\r\n## $Jahr",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH(CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))), CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))\r\nFROM(\r\nSELECT CONCAT(\"$Monat_abkuerzung\", \" $Jahr\") as Gesamt\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "decimals": 3,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "videoViews10sMill"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Videostarts in Mio."
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 1
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "videoViews10sMillPerDay"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Ø-Tag"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 3
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 18,
          "y": 33
        },
        "id": 28,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nvideoViews10sMill,\r\nvideoViews10sMill/$number_of_days as videoViews10sMillPerDay\r\nFROM\r\n(SELECT\r\nSUM(IFNULL(videoViews,0))/1000000 as videoViews10sMill,\r\n\r\n \r\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\nWHERE True\r\nAND $Zeitraum\r\n)",
            "refId": "Videostarts",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 16,
          "y": 36
        },
        "id": 100,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "${Vergleich}",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH(CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))), CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))\r\nFROM(\r\nSELECT CONCAT(\"$Monat_abkuerzung\", \" $Jahr\") as Gesamt\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red"
                },
                {
                  "color": "green",
                  "value": 0
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "diff_mil"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Zum Vormonat."
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "diff_per_day"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Ø-Tag"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 18,
          "y": 36
        },
        "id": 65,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value_in_mil AS (\r\n  SELECT\r\n  SUM(IFNULL(videoViews,0))/1000000 as past_sum_in_mil,\r\n\r\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\n  WHERE True\r\n  AND CASE $Monat\r\n  WHEN 13 THEN TRUE\r\n  ELSE EXTRACT(MONTH from time) = EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AND EXTRACT(YEAR from time) = EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) END\r\n), past_value_per_day AS (\r\n  SELECT past_sum_in_mil/$number_of_days_last_month as past_sum_per_day\r\n  FROM past_value_in_mil\r\n), current_value_in_mil AS(\r\n  SELECT\r\n  SUM(IFNULL(videoViews,0))/1000000 as current_sum_in_mil,\r\n  FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n WHERE True\r\n  AND EXTRACT(MONTH from time) = $Monat AND EXTRACT(YEAR from time) = $Jahr\r\n), current_value_per_day AS(\r\n  SELECT current_sum_in_mil/$number_of_days as current_sum_per_day\r\n  FROM current_value_in_mil\r\n)\r\nSELECT (current_sum_in_mil/past_sum_in_mil - 1)*100 as diff_mil, (current_sum_per_day/past_sum_per_day - 1)*100 as diff_per_day FROM past_value_in_mil, current_value_in_mil, current_value_per_day, past_value_per_day",
            "refId": "Interaktionen Vormonat",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 16,
          "y": 39
        },
        "id": 101,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "## $Monat_abkuerzung\r\n## $LastJahr",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH(CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))), CONCAT(\"$Monat_abkuerzung\", \" $Jahr\"))\r\nFROM(\r\nSELECT CONCAT(\"$Monat_abkuerzung\", \" $Jahr\") as Gesamt\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 3,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red"
                },
                {
                  "color": "green",
                  "value": 0
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "diff_mil"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Zum Vorjahresmonat"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "diff_per_day"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                },
                {
                  "id": "displayName",
                  "value": "Ø-Tag"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 18,
          "y": 39
        },
        "id": 67,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value_in_mil AS (\r\n  SELECT\r\n  SUM(IFNULL(videoViews,0))/1000000 as past_sum_in_mil,\r\nFROM `ndr-code-bi-dashboard.$comp_dataset.instagramInsightsOwnPosts` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\n  WHERE True\r\n  AND CASE \"${Monat:text}\"\r\n  WHEN \"Jahr\" THEN EXTRACT(YEAR from time) = $Jahr - 1\r\n  ELSE EXTRACT(MONTH from time) = $Monat AND EXTRACT(YEAR from time) = $Jahr - 1 END\r\n), past_value_per_day AS (\r\n  SELECT past_sum_in_mil/$number_of_days_last_year as past_sum_per_day\r\n  FROM past_value_in_mil\r\n), current_value_in_mil AS(\r\n  SELECT\r\n  SUM(IFNULL(videoViews,0))/1000000 as current_sum_in_mil,\r\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\n  WHERE True\r\n  AND $Zeitraum\r\n), current_value_per_day AS(\r\n  SELECT current_sum_in_mil/$number_of_days as current_sum_per_day\r\n  FROM current_value_in_mil\r\n)\r\nSELECT (current_sum_in_mil/past_sum_in_mil - 1)*100 as diff_mil, (current_sum_per_day/past_sum_per_day - 1)*100 as diff_per_day FROM past_value_in_mil, current_value_in_mil, current_value_per_day, past_value_per_day",
            "refId": "Interaktionen Vorjahr",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 46
        },
        "id": 14,
        "panels": [],
        "title": "Follower | ${Month} ${Jahr} ",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "min": 1,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 18,
          "w": 14,
          "x": 0,
          "y": 47
        },
        "id": 34,
        "options": {
          "displayMode": "gradient",
          "minVizHeight": 20,
          "minVizWidth": 0,
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [],
            "fields": "",
            "limit": 100,
            "values": true
          },
          "showUnfilled": false
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nprofile as Profil,\r\nfollowers as followers\r\nFROM `ndr-code-bi-dashboard.$dataset.instagram` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\n\r\nWHERE True\r\nAND time = (SELECT MAX(time) FROM `ndr-code-bi-dashboard.$dataset.instagram` as instagram\r\n            WHERE $Zeitraum)\r\n\r\nORDER BY followers desc",
            "refId": "Follower",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Follower | Stichtag: $Stichtag",
        "transformations": [
          {
            "disabled": true,
            "id": "calculateField",
            "options": {}
          }
        ],
        "transparent": true,
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "red",
              "mode": "thresholds"
            },
            "custom": {
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "hidden",
              "fillOpacity": 80,
              "gradientMode": "hue",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineWidth": 1,
              "scaleDistribution": {
                "linearThreshold": 1,
                "type": "linear"
              }
            },
            "decimals": 2,
            "mappings": [],
            "max": 200,
            "min": -200,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red"
                },
                {
                  "color": "green",
                  "value": 0
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "FollowerVeraenderung"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Follower Veränderung"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Profil"
              },
              "properties": [
                {
                  "id": "custom.axisPlacement",
                  "value": "left"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 18,
          "w": 10,
          "x": 14,
          "y": 47
        },
        "id": 60,
        "options": {
          "barRadius": 0,
          "barWidth": 0.7,
          "colorByField": "FollowerVeraenderung",
          "groupWidth": 0.7,
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": false
          },
          "orientation": "horizontal",
          "showValue": "auto",
          "stacking": "none",
          "text": {
            "valueSize": 15
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          },
          "xField": "Profil",
          "xTickLabelMaxLength": 31,
          "xTickLabelRotation": 0,
          "xTickLabelSpacing": 0
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nlm.Profil,\r\n(lm_follower/llm_follower - 1)*100 as FollowerVeraenderung\r\nFROM\r\n(SELECT\r\nfollowers lm_follower,\r\nprofile as Profil\r\nFROM `ndr-code-bi-dashboard.$dataset.instagram` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\nWHERE True\r\nAND time = (SELECT MAX(time) FROM `ndr-code-bi-dashboard.$dataset.instagram` as instagram\r\n            WHERE $Zeitraum)\r\n\r\nORDER BY followers desc) as lm\r\nLEFT JOIN\r\n(SELECT\r\nfollowers as llm_follower,\r\nprofile as Profil\r\nFROM `ndr-code-bi-dashboard.$comp_dataset.instagram` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\nWHERE True\r\nAND time = (SELECT MAX(time) FROM `ndr-code-bi-dashboard.$comp_dataset.instagram` as instagram\r\n            WHERE CASE \"${Monat:text}\" WHEN \"Jahr\" THEN EXTRACT(YEAR from time) = $Jahr -1 ELSE EXTRACT(MONTH from time) = EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AND EXTRACT(YEAR from time) = EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) END)\r\n\r\nORDER BY followers desc) as llm ON llm.Profil = lm.Profil\r\nORDER BY lm.lm_follower DESC",
            "refId": "Follower-Veränderung",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Veränderung zum ${Vormonat} in %",
        "transparent": true,
        "type": "barchart"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 65
        },
        "id": 39,
        "panels": [],
        "title": "Interaktionen |  ${Month} ${Jahr} ",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "min": 1,
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 20,
          "w": 15,
          "x": 0,
          "y": 66
        },
        "id": 40,
        "options": {
          "displayMode": "gradient",
          "minVizHeight": 20,
          "minVizWidth": 0,
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [],
            "fields": "",
            "limit": 100,
            "values": true
          },
          "showUnfilled": false
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Interaktionen pro Post und Anzahl Posts\r\n\r\nSELECT\r\n    Profil, \r\n    Interaktionen AS InteraktionenProPost\r\n    -- Uncomment and modify the following line if needed\r\n    -- CAST(ROUND(Interaktionen / (DATE_DIFF(LAST_DAY(DATE($Jahr, $Monat, 1), MONTH), DATE($Jahr, $Monat, 1), DAY) + 1)) AS INT64) AS InteraktionenProPost\r\nFROM\r\n    (SELECT \r\n        profiles.profile AS Profil,\r\n        SUM(CASE \r\n            WHEN instagram.type = 'Reel' THEN IFNULL(instagram.totalInteractions, 0) \r\n            WHEN time IS NULL THEN NUll\r\n            ELSE IFNULL(instagram.engagement, 0) \r\n        END) AS Interaktionen\r\n    FROM \r\n       ( SELECT * FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` WHERE $Zeitraum) AS instagram\r\n    RIGHT JOIN \r\n        (SELECT instagramID, profile, LRA, \"x\" as x FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE LRA = \"$LRA\" AND instagramID > 0) AS profiles \r\n    ON \r\n        (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n    WHERE \r\n        True\r\n    GROUP BY \r\n        profiles.profile) as SubQuery\r\nORDER BY \r\n    InteraktionenProPost DESC",
            "refId": "Videostarts ab 10 Sek.",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Interaktionen | $Month $Jahr",
        "transparent": true,
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 21,
          "w": 9,
          "x": 15,
          "y": 66
        },
        "id": 134,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const anzahlpostsData = data.series.flatMap((s) => {\n  const anzahlPosts = s.fields.find((f) => f.name === 'anzahlPosts').values.buffer;\n  return anzahlPosts;\n}).reverse();\nconst option = {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    //left: 'left',\n    bottom: 'bottom',\n  },\n  grid: {\n    //left: '3%',\n    //right: '4%',\n    bottom: '6%',\n    top: '0%',\n    containLabel: true\n  },\n  xAxis: {\n    type: 'value'\n  },\n  yAxis: {\n    type: 'category',\n    data: [...new Set(data.series.flatMap((s) => {\n      const profile = s.fields.find((f) => f.name === 'Profil').values.buffer;\n      return profile;\n    }))].reverse()\n  },\n  series: [\n    {\n      name: 'Reels',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: false\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const reels = s.fields.find((f) => f.name === 'type_1_count').values.buffer;\n        return reels;\n      }).reverse()\n    },\n    {\n      name: 'Carousels',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: false\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const carousels = s.fields.find((f) => f.name === 'type_2_count').values.buffer;\n        return carousels;\n      }).reverse()\n    },\n    {\n      name: 'Image',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: false\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const image = s.fields.find((f) => f.name === 'type_3_count').values.buffer;\n        return image;\n      }).reverse()\n    },\n    {\n      name: 'Video',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: true,\n        position: 'outsideRight',\n        formatter: function (params) {\n          // Assuming 'anzahlposts' data is stored in a variable `anzahlpostsData`\n          const anzahlpostsValue = anzahlpostsData[params.dataIndex];\n          return anzahlpostsValue;\n        }\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const video = s.fields.find((f) => f.name === 'type_4_count').values.buffer;\n        return video;\n      }).reverse()\n    }\n  ]\n};\n\nreturn option;",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          }
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\r\n\r\n-- Interaktionen pro Post und Anzahl Posts\r\nSelect Profil, type_1_count, type_2_count, type_3_count, type_4_count, anzahlPosts\r\nFrom(\r\nSELECT \r\nprofile as Profil,\r\n          COUNT(DISTINCT externalId) as anzahlPosts,\r\n          SUM(\r\n            CASE\r\n              WHEN type = 'Reel' THEN IFNULL(totalInteractions, 0)\r\n              ELSE IFNULL(engagement, 0)\r\n            END\r\n          ) as Interaktionen,\r\n       COUNTIF(type = 'Reel') AS type_1_count,\r\n       COUNTIF(type = 'Carousel') AS type_2_count,\r\n       COUNTIF(type = 'Image') AS type_3_count,\r\n       COUNTIF(type = 'Video') AS type_4_count,\r\n      --  SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END) as Interaktionen,\r\nFROM (SELECT profileId, externalId, type , totalInteractions, engagement  FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` WHERE $Zeitraum) as instagram\r\nRIGHT JOIN (SELECT profile, instagramId, LRA FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE instagramID > 0 and LRA = \"$LRA\") as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\nWHERE True\r\nGROUP by profile\r\nOrder by Interaktionen Desc\r\n)\r\n--Order by anzahlPosts ASC\r\n\r\n\r\n\r\n\r\n\r\n",
            "refId": "Videostarts 1",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Anzahl Posts | $Month $Jahr ",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "Profil": false,
                "anzahlPosts": false,
                "type_1_count": false,
                "type_4_count": false
              },
              "indexByName": {
                "Profil": 0,
                "anzahlPosts": 5,
                "type_1_count": 1,
                "type_2_count": 2,
                "type_3_count": 3,
                "type_4_count": 4
              },
              "renameByName": {
                "Profil": "",
                "anzahlPosts": "Total",
                "type_1_count": "Reels",
                "type_2_count": "Carousels",
                "type_3_count": "Image",
                "type_4_count": "Video"
              }
            }
          }
        ],
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 87
        },
        "id": 10,
        "panels": [],
        "title": "Potenzielle Reichweite pro Tag  |  ${Month} ${Jahr} ",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "min": 1,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "InteraktionenProPost"
              },
              "properties": [
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 20,
          "w": 15,
          "x": 0,
          "y": 88
        },
        "id": 115,
        "options": {
          "displayMode": "gradient",
          "minVizHeight": 10,
          "minVizWidth": 0,
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "showUnfilled": false
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Interaktionen pro Post und Anzahl Posts\r\n\r\nSELECT\r\nProfil, reach/days as InteraktionenProPost,  \r\nFROM\r\n(SELECT \r\nprofile as Profil,\r\nsum(reach) as reach,\r\nCOUNT(DISTINCT time) as days\r\nFROM (SELECT profileId, reach, time FROM `ndr-code-bi-dashboard.$dataset.instagramInsights` WHERE $Zeitraum) as instagram\r\nRIGHT JOIN (SELECT profile, instagramID, LRA FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE instagramID > 0 and LRA = \"$LRA\") as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\nWHERE True\r\nAND $Zeitraum\r\nGROUP by profile)\r\nORDER BY InteraktionenProPost DESC\r\n",
            "refId": "Videostarts ab 10 Sek.",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Potenzielle Reichweite pro Tag | $Month $Jahr",
        "transparent": true,
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "red",
              "mode": "thresholds"
            },
            "custom": {
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "hidden",
              "fillOpacity": 80,
              "gradientMode": "hue",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineWidth": 1,
              "scaleDistribution": {
                "type": "linear"
              }
            },
            "decimals": 2,
            "mappings": [],
            "max": 10000,
            "min": -10000,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red"
                },
                {
                  "color": "green",
                  "value": 0
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "FollowerVeraenderung"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Follower Veränderung"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Profil"
              },
              "properties": [
                {
                  "id": "custom.axisPlacement",
                  "value": "left"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 21,
          "w": 9,
          "x": 15,
          "y": 88
        },
        "id": 114,
        "options": {
          "barRadius": 0,
          "barWidth": 0.7,
          "colorByField": "FollowerVeraenderung",
          "groupWidth": 0.7,
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": false
          },
          "orientation": "horizontal",
          "showValue": "auto",
          "stacking": "none",
          "text": {
            "valueSize": 15
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          },
          "xField": "Profil",
          "xTickLabelMaxLength": 30,
          "xTickLabelRotation": 0,
          "xTickLabelSpacing": 0
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nlm.Profil,\r\n(SAFE_DIVIDE(lm_reach,llm_reach) - 1)*100 as FollowerVeraenderung\r\nFROM\r\n(SELECT\r\nSAFE_DIVIDE(sum(reach),COUNT(DISTINCT time)) as lm_reach,\r\nprofile as Profil,\r\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsights` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\nWHERE True\r\nAND $Zeitraum\r\nGROUP BY profile) as lm\r\n\r\nLEFT JOIN\r\n(SELECT\r\nSAFE_DIVIDE(sum(reach),COUNT(DISTINCT time)) as llm_reach,\r\nprofile as Profil,\r\nFROM `ndr-code-bi-dashboard.$comp_dataset.instagramInsights` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\nWHERE True\r\nAND CASE \"${Monat:text}\" WHEN \"Jahr\" THEN EXTRACT(YEAR from time) = $Jahr -1 ELSE EXTRACT(MONTH from time) = EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AND EXTRACT(YEAR from time) = EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) END\r\nGROUP BY profile) as llm ON llm.Profil = lm.Profil\r\nORDER BY lm_reach DESC\r\n",
            "refId": "Follower-Veränderung",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Veränderung zum ${Vormonat} in %",
        "transparent": true,
        "type": "barchart"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 109
        },
        "id": 119,
        "panels": [],
        "title": "Potenzielle Reichweite pro Beitrag | $Month $Jahr",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "min": 1,
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "InteraktionenProPost"
              },
              "properties": [
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 20,
          "w": 15,
          "x": 0,
          "y": 110
        },
        "id": 116,
        "options": {
          "displayMode": "gradient",
          "minVizHeight": 10,
          "minVizWidth": 0,
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "showUnfilled": false
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Interaktionen pro Post und Anzahl Posts\r\n\r\nSELECT\r\nProfil, reach as InteraktionenProPost,  \r\nFROM\r\n(SELECT \r\nprofile as Profil,\r\nAVG(reach) as reach,\r\n-- AVG(reach) as reach\r\nFROM (SELECT profileId, reach FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` WHERE $Zeitraum) as instagram\r\nRIGHT JOIN (SELECT profile, instagramId, LRA FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE instagramID > 0 and LRA = \"$LRA\") profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\nWHERE True\r\nGROUP by profile)\r\nORDER BY InteraktionenProPost DESC\r\n",
            "refId": "Videostarts ab 10 Sek.",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Potenzielle Reichweite pro Beitrag | $Month $Jahr",
        "transparent": true,
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 22,
          "w": 9,
          "x": 15,
          "y": 110
        },
        "id": 141,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const anzahlpostsData = data.series.flatMap((s) => {\n  const anzahlPosts = s.fields.find((f) => f.name === 'anzahlPosts').values.buffer;\n  return anzahlPosts;\n}).reverse();\nconst option = {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    //left: 'left',\n    bottom: 'bottom',\n  },\n  grid: {\n    //left: '3%',\n    //right: '4%',\n    bottom: '6%',\n    top: '0%',\n    containLabel: true\n  },\n  xAxis: {\n    type: 'value'\n  },\n  yAxis: {\n    type: 'category',\n    data: [...new Set(data.series.flatMap((s) => {\n      const profile = s.fields.find((f) => f.name === 'Profil').values.buffer;\n      return profile;\n    }))].reverse()\n  },\n  series: [\n    {\n      name: 'Reels',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: false\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const reels = s.fields.find((f) => f.name === 'type_1_count').values.buffer;\n        return reels;\n      }).reverse()\n    },\n    {\n      name: 'Carousels',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: false\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const carousels = s.fields.find((f) => f.name === 'type_2_count').values.buffer;\n        return carousels;\n      }).reverse()\n    },\n    {\n      name: 'Image',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: false\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const image = s.fields.find((f) => f.name === 'type_3_count').values.buffer;\n        return image;\n      }).reverse()\n    },\n    {\n      name: 'Video',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: true,\n        position: 'outsideRight',\n        formatter: function (params) {\n          // Assuming 'anzahlposts' data is stored in a variable `anzahlpostsData`\n          const anzahlpostsValue = anzahlpostsData[params.dataIndex];\n          return anzahlpostsValue;\n        }\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const video = s.fields.find((f) => f.name === 'type_4_count').values.buffer;\n        return video;\n      }).reverse()\n    }\n  ]\n};\n\nreturn option;",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          }
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\r\n-- Interaktionen pro Post und Anzahl Posts\r\nSelect Profil, type_1_count, type_2_count, type_3_count, type_4_count, anzahlPosts\r\nFrom(\r\nSELECT \r\nprofile as Profil,\r\n          COUNT(DISTINCT externalId) as anzahlPosts,\r\n          SUM(\r\n            CASE\r\n              WHEN type = 'Reel' THEN IFNULL(totalInteractions, 0)\r\n              ELSE IFNULL(engagement, 0)\r\n            END\r\n          ) as Interaktionen,\r\n       COUNTIF(type = 'Reel') AS type_1_count,\r\n       COUNTIF(type = 'Carousel') AS type_2_count,\r\n       COUNTIF(type = 'Image') AS type_3_count,\r\n       COUNTIF(type = 'Video') AS type_4_count,\r\n       AVG(reach) as avg_reach\r\n      --  SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END) as Interaktionen,\r\nFROM (SELECT profileId, reach, externalId, type, totalInteractions, engagement FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` WHERE $Zeitraum) as instagram\r\nRIGHT JOIN (SELECT profile, instagramId, LRA FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE instagramID > 0 and LRA = \"$LRA\") profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\nWHERE True\r\nGROUP by profile\r\nOrder by avg_reach Desc\r\n)\r\n\r\n\r\n\r\n\r\n\r\n",
            "refId": "Videostarts 1",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Anzahl Posts | $Month $Jahr ",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "anzahlPosts": false
              },
              "indexByName": {
                "Profil": 0,
                "anzahlPosts": 5,
                "type_1_count": 1,
                "type_2_count": 2,
                "type_3_count": 3,
                "type_4_count": 4
              },
              "renameByName": {
                "Profil": "",
                "anzahlPosts": "Total",
                "type_1_count": "Reels",
                "type_2_count": "Carousels",
                "type_3_count": "Image",
                "type_4_count": "Video"
              }
            }
          }
        ],
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 132
        },
        "id": 122,
        "panels": [],
        "title": "Potenzielle Reichweite pro Story-Element | $Month $Jahr",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "min": 1,
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "InteraktionenProPost"
              },
              "properties": [
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 20,
          "w": 16,
          "x": 0,
          "y": 133
        },
        "id": 124,
        "options": {
          "displayMode": "gradient",
          "minVizHeight": 10,
          "minVizWidth": 0,
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "showUnfilled": false
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Interaktionen pro Post und Anzahl Posts\r\n\r\nSELECT\r\nProfil, reach as InteraktionenProPost,  \r\nFROM\r\n(SELECT \r\nprofile as Profil,\r\nAVG(reach) as reach,\r\n-- AVG(reach) as reach\r\nFROM (SELECT profileId, reach, LRA  FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsStories` WHERE $Zeitraum) as instagram\r\nRIGHT JOIN (SELECT profile, instagramId, LRA FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE instagramID > 0 and LRA = \"$LRA\") as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\nWHERE True\r\nGROUP by profile)\r\nORDER BY InteraktionenProPost DESC\r\n",
            "refId": "Videostarts ab 10 Sek.",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Potenzielle Reichweite pro Story-Element | $Month $Jahr",
        "transparent": true,
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "gridPos": {
          "h": 22,
          "w": 8,
          "x": 16,
          "y": 133
        },
        "id": 142,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const anzahlpostsData = data.series.flatMap((s) => {\n  const anzahlPosts = s.fields.find((f) => f.name === 'anzahlPosts').values.buffer;\n  return anzahlPosts;\n}).reverse();\n\nconst option = {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: 'bottom',\n    data: [\"Image\", \"Video\"]\n  },\n  grid: {\n    //left: '20%',\n    bottom: '6%',\n    top: '0%',\n    containLabel: true\n  },\n  xAxis: {\n    type: 'value'\n  },\n  yAxis: {\n    type: 'category',\n    data: [...new Set(data.series.flatMap((s) => {\n      const profile = s.fields.find((f) => f.name === 'Profil').values.buffer;\n      return profile;\n    }))].reverse()\n  },\n  series: [\n    {\n      name: 'Image',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: false\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const image = s.fields.find((f) => f.name === 'type_3_count').values.buffer;\n        return image;\n      }).reverse()\n    },\n    {\n      name: 'Video',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: false\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const video = s.fields.find((f) => f.name === 'type_4_count').values.buffer;\n        return video;\n      }).reverse()\n    },\n    {\n      // Invisible series to display anzahlPosts values\n      name: 'Summe',\n      type: 'bar',\n      stack: 'total',\n      label: {\n        show: true,\n        position: 'insideLeft',\n        formatter: function (params) {\n          return anzahlpostsData[params.dataIndex];\n        }\n      },\n      itemStyle: {\n        color: 'rgba(0, 0, 0, 0)' // Transparent\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: data.series.flatMap((s) => {\n        const video = s.fields.find((f) => f.name === 'type_4_count').values.buffer;\n        return video;\n      }).reverse()\n    }\n  ]\n};\n\nreturn option;",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          }
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- Interaktionen pro Post und Anzahl Posts\r\nSelect Profil, type_3_count, type_4_count, type_3_count+type_4_count as anzahlPosts\r\nFrom(\r\nSELECT \r\nprofile as Profil,\r\n       COUNT(DISTINCT externalId) as anzahlPosts,\r\n       sum(reach)/COUNT(DISTINCT time) as reach,\r\n\r\n       COUNTIF(type = 'Image') AS type_3_count,\r\n       COUNTIF(type = 'Video') AS type_4_count,\r\n\r\nFROM (SELECT profileId, reach, LRA, externalId, time, type  FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsStories` WHERE $Zeitraum) as instagram\r\nRIGHT JOIN (SELECT profile, instagramId, LRA FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE instagramID > 0 and LRA = \"$LRA\") as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\nWHERE True\r\nGROUP by profile\r\nOrder by reach Desc\r\n)\r\n--Order by anzahlPosts ASC\r\n\r\n\r\n\r\n\r\n\r\n",
            "refId": "Videostarts 1",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Anzahl Story-Elemente | $Month $Jahr ",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "anzahlPosts": false
              },
              "indexByName": {
                "Profil": 0,
                "anzahlPosts": 5,
                "type_1_count": 1,
                "type_2_count": 2,
                "type_3_count": 3,
                "type_4_count": 4
              },
              "renameByName": {
                "Profil": "",
                "anzahlPosts": "Total",
                "type_1_count": "Reels",
                "type_2_count": "Carousels",
                "type_3_count": "Image",
                "type_4_count": "Video"
              }
            }
          }
        ],
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 155
        },
        "id": 16,
        "panels": [],
        "title": "Videostarts |  ${Month} ${Jahr} ",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "min": 1,
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 20,
          "w": 16,
          "x": 0,
          "y": 156
        },
        "id": 36,
        "options": {
          "displayMode": "gradient",
          "minVizHeight": 10,
          "minVizWidth": 0,
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "showUnfilled": false
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nprofile as Profil,\r\nSUM(videoViews) as videoViews10s\r\n\r\nFROM (SELECT profileId, videoViews, time FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` WHERE $Zeitraum) as instagram\r\nRIGHT JOIN (SELECT profile, LRA, instagramID FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE instagramId > 0 and LRA = \"$LRA\" ) as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\nWHERE True\r\nGROUP BY profile\r\nORDER BY videoViews10s desc\r\n",
            "refId": "Videostarts ab 10 Sek.",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Videostarts ",
        "transparent": true,
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "text",
              "mode": "fixed"
            },
            "mappings": [],
            "min": 1,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 20,
          "w": 8,
          "x": 16,
          "y": 156
        },
        "id": 132,
        "options": {
          "displayMode": "gradient",
          "minVizHeight": 10,
          "minVizWidth": 0,
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "showUnfilled": false
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH NumberOfVideos AS( \r\nSELECT \r\nprofile as Profil,\r\n        SUM(CASE\r\n              WHEN type = 'Reel' THEN IFNULL(totalInteractions, 0)\r\n              ELSE IFNULL(engagement, 0) END) as Interaktionen,\r\n       COUNTIF(type = 'Reel') AS Reel,\r\n       COUNTIF(type = 'Video') AS Video,\r\n       SUM(videoViews) as videoViews10s\r\nFROM (SELECT profileId, videoViews, type, totalInteractions, engagement FROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` WHERE $Zeitraum) as instagram\r\nRIGHT JOIN (SELECT profile, LRA, instagramID FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE instagramId > 0 and LRA = \"$LRA\" ) as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\nWHERE True\r\nGROUP by profile\r\nOrder by videoViews10s Desc\r\n)\r\nSELECT Profil, Reel+Video as AnzahlPosts FROM NumberOfVideos",
            "refId": "Videostarts 1",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Anzahl Videos und Reels | $Monat $Jahr ",
        "transparent": true,
        "type": "bargauge"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 176
        },
        "id": 47,
        "panels": [],
        "title": "Top Posts nach Interaktionen |  ${Month} ${Jahr}",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "5RzC0pR4k"
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 16,
          "y": 177
        },
        "id": 144,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<p style=\"text-align: right\"><font size=\"2\">Legende: &nbsp;🖼️ = Foto &nbsp;&nbsp; 🎠 = Karussell &nbsp;&nbsp; 🎥 = Video &nbsp;&nbsp; 🎞️ = Reel </font><font size=\"6\"> </font>",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "5RzC0pR4k"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": false,
            "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "post_video_view_time"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "facebookinsightsownposts",
            "timeColumn": "\"time\"",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "displayMode": "auto",
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Interaktionen"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.width",
                  "value": 192
                },
                {
                  "id": "custom.align",
                  "value": "center"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Videostarts"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.width"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Post"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 447
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "targetBlank": true,
                      "title": "${__data.fields.link}",
                      "url": "${__data.fields.link}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Typ"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 62
                },
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "Carousel": {
                          "index": 3,
                          "text": "🎠"
                        },
                        "Image": {
                          "index": 0,
                          "text": "🖼️"
                        },
                        "Reel": {
                          "index": 2,
                          "text": "🎞️"
                        },
                        "Video": {
                          "index": 1,
                          "text": "🎥"
                        }
                      },
                      "type": "value"
                    }
                  ]
                },
                {
                  "id": "custom.align",
                  "value": "center"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "time"
              },
              "properties": [
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width"
                },
                {
                  "id": "unit",
                  "value": "time: DD.MM.YY | HH:mm \\U\\h\\r"
                },
                {
                  "id": "displayName",
                  "value": "Datum"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "profile"
              },
              "properties": [
                {
                  "id": "custom.width"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "link"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "type"
              },
              "properties": [
                {
                  "id": "custom.width"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "pot. Reichweite"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width",
                  "value": 243
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Typ"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 108
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 16,
          "w": 24,
          "x": 0,
          "y": 179
        },
        "id": 45,
        "options": {
          "footer": {
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  profile,\r\n  time,\r\n  videoViews,\r\n  reach,\r\n  type,\r\n  link,\r\n  REPLACE(message, '�', '') AS Post,\r\n  CASE WHEN type = 'Reel' THEN totalInteractions ELSE engagement END AS Interaktionen \r\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\nAND $Zeitraum\r\nORDER BY Interaktionen DESC LIMIT 100",
            "refId": "Top Posts nach Interaktionen",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top Posts nach Interaktionen |  ${Month} ${Jahr}",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "link": true
              },
              "indexByName": {
                "Interaktionen": 4,
                "Post": 2,
                "link": 6,
                "profile": 0,
                "reach": 5,
                "time": 1,
                "type": 3,
                "videoViews": 7
              },
              "renameByName": {
                "Interaktionen": "",
                "Post": "",
                "link": "",
                "profile": "Profil",
                "reach": "pot. Reichweite",
                "time": "Datum",
                "total_video_10s_views": "Videostarts ab 10 Sek.",
                "type": "Typ",
                "videoViews": "Videostarts"
              }
            }
          }
        ],
        "transparent": true,
        "type": "table"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 195
        },
        "id": 49,
        "panels": [],
        "title": "Top One Post je Profil |  ${Month} ${Jahr}",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "5RzC0pR4k"
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 16,
          "y": 196
        },
        "id": 146,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<p style=\"text-align: right\"><font size=\"2\">Legende: &nbsp;🖼️ = Foto &nbsp;&nbsp; 🎠 = Karussell &nbsp;&nbsp; 🎥 = Video &nbsp;&nbsp; 🎞️ = Reel </font><font size=\"6\"> </font>",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "5RzC0pR4k"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": false,
            "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "post_video_view_time"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "facebookinsightsownposts",
            "timeColumn": "\"time\"",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "displayMode": "auto",
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Interaktionen"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.width",
                  "value": 121
                },
                {
                  "id": "custom.align",
                  "value": "center"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "pot. Reichweite"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.width",
                  "value": 123
                },
                {
                  "id": "custom.align",
                  "value": "center"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Post"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 430
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "targetBlank": true,
                      "title": "${__data.fields.link}",
                      "url": "${__data.fields.link}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Typ"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 62
                },
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "Carousel": {
                          "index": 3,
                          "text": "🎠"
                        },
                        "Image": {
                          "index": 2,
                          "text": "🖼️"
                        },
                        "Reel": {
                          "index": 0,
                          "text": "🎞️"
                        },
                        "Video": {
                          "index": 1,
                          "text": "🎥"
                        }
                      },
                      "type": "value"
                    }
                  ]
                },
                {
                  "id": "custom.align",
                  "value": "center"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Datum"
              },
              "properties": [
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width",
                  "value": 150
                },
                {
                  "id": "unit",
                  "value": "time: DD.MM.YY | HH:mm \\U\\h\\r"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "profile"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 300
                },
                {
                  "id": "displayName",
                  "value": "Profil"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "link"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "PostDatum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Postdatum"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Videostarts"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Videostarts"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 16,
          "w": 24,
          "x": 0,
          "y": 198
        },
        "id": 52,
        "options": {
          "footer": {
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Interaktionen"
            }
          ]
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT DISTINCT\r\nprofile,\r\n  time,\r\n  videoViews,\r\n  reach,\r\n  type,\r\n  link,\r\n  Post,\r\n  Interaktionen \r\nFROM (\r\n  SELECT \r\n  profile,\r\n  time,\r\n  videoViews,\r\n  reach,\r\n  type,\r\n  link,\r\n  REPLACE(message, '�', '') AS Post,\r\n  CASE WHEN type = 'Reel' THEN totalInteractions ELSE engagement END AS Interaktionen,\r\n  ROW_NUMBER() OVER (PARTITION BY profiles.instagramID ORDER BY CASE WHEN type = 'Reel' THEN totalInteractions ELSE engagement END DESC) as row_num\r\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n\r\nAND $Zeitraum\r\n  -- LEFT JOIN `ndr-code-bi-dashboard.$dataset.facebookInsightsOwnVideos` as videos ON facebook.objectId = videos.externalId\r\n) as subquery\r\nWHERE row_num = 1\r\nORDER BY Interaktionen DESC\r\n",
            "refId": "Top One Post je Profil",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top One Post je Profil |  ${Month} ${Jahr}",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "link": true
              },
              "indexByName": {
                "Interaktionen": 4,
                "Post": 2,
                "link": 7,
                "profile": 0,
                "reach": 5,
                "time": 1,
                "type": 3,
                "videoViews": 6
              },
              "renameByName": {
                "Interaktionen": "",
                "Post": "Post",
                "profile": "Profil",
                "reach": "pot. Reichweite",
                "time": "Datum",
                "type": "Typ",
                "videoViews": "Videostarts"
              }
            }
          }
        ],
        "transparent": true,
        "type": "table"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 214
        },
        "id": 136,
        "panels": [],
        "title": "Top Story-Elemente nach pot. Reichweite |  ${Month} ${Jahr}",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "displayMode": "auto",
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Typ"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "Carousel": {
                          "index": 3,
                          "text": "🎠"
                        },
                        "Image": {
                          "index": 1,
                          "text": "🖼️"
                        },
                        "Reel": {
                          "index": 0,
                          "text": "🎞️"
                        },
                        "Video": {
                          "index": 2,
                          "text": "🎥"
                        }
                      },
                      "type": "value"
                    }
                  ]
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width",
                  "value": 77
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "createTime"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 127
                },
                {
                  "id": "unit",
                  "value": "time: DD.MM | H:mm \\U\\h\\r"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Thumbnail"
              },
              "properties": [
                {
                  "id": "custom.displayMode",
                  "value": "image"
                },
                {
                  "id": "custom.width",
                  "value": 100
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Weiterklicks"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 120
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Impressionen"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 130
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Zurückklicks"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 113
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Exits"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 74
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Pot. Reichweite"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 132
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Exit-Rate"
              },
              "properties": [
                {
                  "id": "custom.displayMode",
                  "value": "gradient-gauge"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 1
                },
                {
                  "id": "max",
                  "value": 25
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00b0de",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "custom.width",
                  "value": 218
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Story-Element"
              },
              "properties": [
                {
                  "id": "links",
                  "value": [
                    {
                      "targetBlank": true,
                      "title": "${__data.fields.link}",
                      "url": "${__data.fields.link}"
                    }
                  ]
                },
                {
                  "id": "custom.width",
                  "value": 747
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "link"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 11,
          "w": 24,
          "x": 0,
          "y": 215
        },
        "id": 138,
        "options": {
          "footer": {
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Pot. Reichweite"
            }
          ]
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\nprofile,\n time AS createTime,\n thumbnailUrl AS Thumbnail,\n  caption AS message,\n  link,\n  type,\n  --impressions,\n  --exits,\n  reach,\n  --tapsForward,\n  --tapsBack\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsightsStories` as instagram\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\n\nWHERE $Zeitraum\n\nORDER BY reach DESC limit 100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "*",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "instagram"
          }
        ],
        "title": "Top Story-Elemente nach pot. Reichweite | $Monat $Jahr",
        "transformations": [
          {
            "id": "calculateField",
            "options": {
              "alias": "",
              "binary": {
                "left": "exits",
                "operator": "*",
                "reducer": "sum",
                "right": "100"
              },
              "mode": "binary",
              "reduce": {
                "include": [
                  "impressions",
                  "Thumbnail",
                  "message"
                ],
                "reducer": "sum"
              },
              "replaceFields": false
            }
          },
          {
            "id": "calculateField",
            "options": {
              "alias": "exit-rate",
              "binary": {
                "left": "exits * 100",
                "operator": "/",
                "reducer": "sum",
                "right": "impressions"
              },
              "mode": "binary",
              "reduce": {
                "reducer": "sum"
              }
            }
          },
          {
            "id": "filterFieldsByName",
            "options": {
              "include": {
                "names": [
                  "createTime",
                  "Thumbnail",
                  "message",
                  "link",
                  "type",
                  "reach",
                  "profile"
                ]
              }
            }
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "engagement": true,
                "externalId": true,
                "importTime": true,
                "last_update": true,
                "link": false,
                "message": false,
                "profileId": true,
                "replies": true,
                "time": false,
                "totalInteractions": true,
                "uniqueId": true
              },
              "indexByName": {
                "Thumbnail": 3,
                "createTime": 1,
                "link": 6,
                "message": 2,
                "profile": 0,
                "reach": 5,
                "type": 4
              },
              "renameByName": {
                "createTime": "Datum",
                "engagement": "Engagement",
                "exit-rate": "Exit-Rate",
                "exits": "Exits",
                "impressions": "Impressionen",
                "message": "Story-Element",
                "profile": "Profil",
                "profileId": "",
                "reach": "Pot. Reichweite",
                "tapsBack": "Zurückklicks",
                "tapsForward": "Weiterklicks",
                "time": "Datum",
                "totalInteractions": "",
                "type": "Typ",
                "videoViews": "Videostarts"
              }
            }
          }
        ],
        "transparent": true,
        "type": "table"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "1 Reihe entspricht 1 Seite der Tabelle.",
        "gridPos": {
          "h": 15,
          "w": 24,
          "x": 0,
          "y": 226
        },
        "id": 140,
        "options": {
          "alt_field": "",
          "height": "250",
          "icon_field": "Thumbnail",
          "open_url": {
            "base_url": "",
            "enable": true,
            "metric_field": "link",
            "open_in_tab": true,
            "suffix": ""
          },
          "overlay": {
            "bindings": {
              "bindings": [],
              "has_text": true,
              "unbounded": "#66666620"
            },
            "field": "",
            "height": {
              "size": 5,
              "unit": "%"
            },
            "position": "Top right",
            "width": {
              "size": 5,
              "unit": "%"
            }
          },
          "shared_cross_hair": {
            "backgroundColor": "#FFFFFF10",
            "borderColor": "#FFFFFF20"
          },
          "singleFill": true,
          "slideshow": {
            "duration": 5000,
            "enable": false,
            "infinite": true,
            "pauseOnHover": true,
            "transition": "Slide",
            "transition_duration": 1000
          },
          "tooltip": true,
          "tooltip_date_elapsed": false,
          "tooltip_field": "reach",
          "tooltip_include_date": true,
          "tooltip_include_field": true,
          "underline": {
            "bindings": {
              "bindings": [],
              "has_text": true,
              "unbounded": "#CCCCDCFF"
            },
            "bindings_field": "",
            "field": "",
            "text_align": "left",
            "text_size": "14"
          },
          "width": "180"
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\n time AS createTime,\n thumbnailUrl AS Thumbnail,\n  caption AS message,\n  link,\n  type,\n  impressions,\n  exits,\n  reach,\n  tapsForward,\n  tapsBack\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsightsStories` as instagram\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\n\nWHERE $Zeitraum\nORDER BY reach DESC Limit 100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Vorschau",
        "type": "dalvany-image-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 241
        },
        "id": 83,
        "panels": [],
        "title": "Zusammenfassung aller Profile | $Monat $Jahr",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "left",
              "displayMode": "auto",
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "noValue": "-",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red"
                },
                {
                  "color": "green",
                  "value": 0
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Profil"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Profil"
                },
                {
                  "id": "custom.width",
                  "value": 200
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "followers"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Follower"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "FollowerVeraenderungAbsolut"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (absolut)"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 160
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "FollowerVeraenderung"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (in %)"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 2
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Anzahlposts"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Anzahl Posts"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "AktiveNutzer"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Ø Aktive Nutzer pro Tag"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 185
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "AktiveNutzerVeraenderungAbsolut"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (absolut)"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 160
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "AktiveNutzerVeraenderung"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (in %)"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 2
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "InteraktionenVeraenderungAbsolut"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (absolut)"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "InteraktionenVeraenderung"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (in %)"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 2
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ReachProTag"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Ø Potenzielle Reichweite pro Tag"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 255
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ReachProTagVeraenderungAbsolut"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (absolut)"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 160
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ReachProTagVeraenderung"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (in %)"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 2
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "videoViews10s"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Videostarts"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 180
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "videoViews10sVeraenderungAbsolut"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (absolut)"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 160
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "videoViews10sVeraenderung"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (in %)"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 2
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ReachProBeitrag"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Ø Potenzielle Reichweite pro Beitrag"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 275
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ReachProBeitragVeraenderungAbsolut"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (absolut)"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 160
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ReachProBeitragVeraenderung"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (in %)"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 2
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ReachStory"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Ø Potenzielle Reichweite pro Story-Element"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 350
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ReachStoryVeraenderungAbsolut"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (absolut)"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.minWidth",
                  "value": 160
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "ReachStoryVeraenderung"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Änderung (in %)"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 2
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-text"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Interaktionen"
              },
              "properties": [
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 15,
          "w": 24,
          "x": 0,
          "y": 242
        },
        "id": 81,
        "options": {
          "footer": {
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "frameIndex": 0,
          "showHeader": true,
          "sortBy": [
            {
              "desc": false,
              "displayName": "Profil"
            }
          ]
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH followers as (\r\n  SELECT\r\n    lm.Profil,\r\n    lm_follower as followers,\r\n    lm_follower - llm_follower as FollowerVeraenderungAbsolut,\r\n    (SAFE_DIVIDE(lm_follower, llm_follower) -1) * 100 as FollowerVeraenderung\r\n  FROM\r\n    (\r\n      SELECT\r\n        followers lm_follower,\r\n        profile as Profil\r\n      FROM\r\n        `ndr-code-bi-dashboard.$dataset.instagram` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND time = ( SELECT MAX(time) FROM `ndr-code-bi-dashboard.$dataset.instagram` as instagram\r\n          WHERE $Zeitraum)\r\n      ORDER BY\r\n        followers desc\r\n    ) as lm\r\n    LEFT JOIN (\r\n      SELECT\r\n        followers as llm_follower,\r\n        profile as Profil\r\n      FROM\r\n        `ndr-code-bi-dashboard.$comp_dataset.instagram` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND time = (SELECT MAX(time) FROM `ndr-code-bi-dashboard.$comp_dataset.instagram` as instagram\r\n          WHERE CASE \"${Monat:text}\"\r\n               WHEN \"Jahr\" THEN EXTRACT(YEAR from instagram.time) = $Jahr - 1\r\n               ELSE EXTRACT(MONTH from time) = EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AND EXTRACT(YEAR from time) = EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH))\r\n               END)\r\n      ORDER BY\r\n        followers desc\r\n    ) as llm ON llm.Profil = lm.Profil\r\n  ORDER BY\r\n    lm.lm_follower DESC\r\n),\r\nanzahl_posts as (\r\n  SELECT\r\n    Profil,\r\n    SUM(anzahlPosts) as anzahlPosts,\r\n  FROM\r\n    (\r\n      SELECT\r\n        profile as Profil,\r\n        COUNT(DISTINCT externalId) as anzahlPosts\r\n      FROM\r\n        `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND $Zeitraum\r\n      GROUP BY\r\n        profile -- UNION\r\n        -- ALL\r\n        -- SELECT\r\n        --   profile as Profil,\r\n        --   COUNT(DISTINCT externalId) as anzahlPosts,\r\n        -- FROM\r\n        --   `ndr-code-bi-dashboard.$dataset.facebookInsightsExpiredPosts` as facebook\r\n        --   JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n        --     facebook.profileId = profiles.facebookID\r\n        --     AND profiles.LRA = \"$LRA\"\r\n        --   )\r\n        -- WHERE\r\n        --   True\r\n        --   AND EXTRACT(\r\n        --     MONTH\r\n        --     from\r\n        --       time\r\n        --   ) = $Monat\r\n        --   AND EXTRACT(\r\n        --     YEAR\r\n        --     from\r\n        --       time\r\n        --   ) = $Jahr\r\n        -- GROUP BY\r\n        --   profile\r\n    )\r\n  GROUP BY\r\n    Profil\r\n),\r\nInteraktionen as (\r\n  SELECT\r\n    lm.Profil,\r\n    lm_Interaktionen as Interaktionen,\r\n    lm_Interaktionen - llm_Interaktionen as InteraktionenVeraenderungAbsolut,\r\n    (\r\n      SAFE_DIVIDE(lm_Interaktionen, llm_Interaktionen) -1\r\n    ) * 100 as InteraktionenVeraenderung,\r\n  FROM\r\n    (\r\n      SELECT\r\n        profile as Profil,\r\n        SUM(\r\n          CASE\r\n            WHEN type = 'Reel' THEN IFNULL(totalInteractions, 0)\r\n            ELSE IFNULL(engagement, 0)\r\n          END\r\n        ) as lm_Interaktionen,\r\n      FROM\r\n        `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND $Zeitraum\r\n      GROUP BY\r\n        profile\r\n      ORDER BY\r\n        lm_Interaktionen desc\r\n    ) as lm\r\n    LEFT JOIN (\r\n      SELECT\r\n        profile as Profil,\r\n        SUM(\r\n          CASE\r\n            WHEN type = 'Reel' THEN IFNULL(totalInteractions, 0)\r\n            ELSE IFNULL(engagement, 0)\r\n          END\r\n        ) as llm_Interaktionen,\r\n      FROM\r\n        `ndr-code-bi-dashboard.$comp_dataset.instagramInsightsOwnPosts` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND CASE \"${Monat:text}\"\r\n               WHEN \"Jahr\" THEN EXTRACT(YEAR from instagram.time) = $Jahr - 1\r\n               ELSE EXTRACT(MONTH from time) = EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AND EXTRACT(YEAR from time) = EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH))\r\n               END\r\n      GROUP BY\r\n        profile\r\n      ORDER BY\r\n        llm_Interaktionen desc\r\n    ) as llm ON llm.Profil = lm.Profil\r\n  ORDER BY\r\n    lm.lm_Interaktionen DESC\r\n),\r\nvideo_start as (\r\n  SELECT\r\n    lm.Profil,\r\n    lm_videoViews10s as videoViews10s,\r\n    lm_videoViews10s - llm_videoViews10s as videoViews10sVeraenderungAbsolut,\r\n    (\r\n      SAFE_DIVIDE(lm_videoViews10s, llm_videoViews10s) -1\r\n    ) * 100 as videoViews10sVeraenderung\r\n  FROM\r\n    (\r\n      SELECT\r\n        SUM(videoViews) as lm_videoViews10s,\r\n        -- SUM(page_video_views) as lm_videoViews3s,\r\n        profile as Profil\r\n      FROM\r\n        `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND $Zeitraum\r\n      GROUP BY\r\n        profile\r\n      ORDER BY\r\n        lm_videoViews10s DESC\r\n    ) as lm\r\n    LEFT JOIN (\r\n      SELECT\r\n        profile as Profil,\r\n        SUM(videoViews) as llm_videoViews10s,\r\n        -- SUM(page_video_views) as llm_videoViews3s\r\n      FROM\r\n        `ndr-code-bi-dashboard.$comp_dataset.instagramInsightsOwnPosts` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND CASE \"${Monat:text}\"\r\n               WHEN \"Jahr\" THEN EXTRACT(YEAR from instagram.time) = $Jahr - 1\r\n               ELSE EXTRACT(MONTH from time) = EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AND EXTRACT(YEAR from time) = EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH))\r\n               END\r\n      GROUP BY\r\n        profile\r\n      ORDER BY\r\n        llm_videoViews10s DESC\r\n    ) as llm ON llm.Profil = lm.Profil\r\n  ORDER BY\r\n    lm.lm_videoViews10s DESC\r\n),\r\nPotenzielleReichweiteProTag as (\r\n  SELECT\r\n    lm.Profil,\r\n    lm_reach as ReachProTag,\r\n    Round(lm_reach - llm_reach,0) as ReachProTagVeraenderungAbsolut,\r\n    (\r\n      SAFE_DIVIDE(lm_reach, llm_reach) -1\r\n    ) * 100 as ReachProTagVeraenderung,\r\n  FROM\r\n    (\r\n      SELECT\r\n        profile as Profil,\r\n        Round(sum(reach)/COUNT(DISTINCT time),0) as lm_reach,\r\n      FROM\r\n        `ndr-code-bi-dashboard.$dataset.instagramInsights` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND $Zeitraum\r\n      GROUP BY\r\n        profile\r\n      ORDER BY\r\n        lm_reach desc\r\n    ) as lm\r\n    LEFT JOIN (\r\n      SELECT\r\n        profile as Profil,\r\n        sum(reach) /COUNT(DISTINCT time) as llm_reach,\r\n      FROM\r\n        `ndr-code-bi-dashboard.$comp_dataset.instagramInsights` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND CASE \"${Monat:text}\"\r\n               WHEN \"Jahr\" THEN EXTRACT(YEAR from instagram.time) = $Jahr - 1\r\n               ELSE EXTRACT(MONTH from time) = EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AND EXTRACT(YEAR from time) = EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH))\r\n               END\r\n      GROUP BY\r\n        profile\r\n      ORDER BY\r\n        llm_reach desc\r\n    ) as llm ON llm.Profil = lm.Profil\r\n  ORDER BY\r\n    lm.lm_reach DESC\r\n),\r\nPotenzielleReichweiteProBeitrag as (\r\n  SELECT\r\n    lm.Profil,\r\n    lm_reach as ReachProBeitrag,\r\n    Round(lm_reach - llm_reach,0) as ReachProBeitragVeraenderungAbsolut,\r\n    (\r\n      SAFE_DIVIDE(lm_reach, llm_reach) -1\r\n    ) * 100 as ReachProBeitragVeraenderung,\r\n  FROM\r\n    (\r\n      SELECT\r\n        profile as Profil,\r\n        Round(sum(reach) /COUNT(DISTINCT time),0) as lm_reach,\r\n      FROM\r\n        `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND $Zeitraum\r\n      GROUP BY\r\n        profile\r\n      ORDER BY\r\n        lm_reach desc\r\n    ) as lm\r\n    LEFT JOIN (\r\n      SELECT\r\n        profile as Profil,\r\n        sum(reach) /COUNT(DISTINCT time) as llm_reach,\r\n      FROM\r\n        `ndr-code-bi-dashboard.$comp_dataset.instagramInsightsOwnPosts` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND CASE \"${Monat:text}\"\r\n               WHEN \"Jahr\" THEN EXTRACT(YEAR from instagram.time) = $Jahr - 1\r\n               ELSE EXTRACT(MONTH from time) = EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AND EXTRACT(YEAR from time) = EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH))\r\n               END\r\n      GROUP BY\r\n        profile\r\n      ORDER BY\r\n        llm_reach desc\r\n    ) as llm ON llm.Profil = lm.Profil\r\n  ORDER BY\r\n    lm.lm_reach DESC\r\n),\r\nPotenzielleReichweiteStory as (\r\n  SELECT\r\n    lm.Profil,\r\n    lm_reach as ReachStory,\r\n    Round(lm_reach - llm_reach,0) as ReachStoryVeraenderungAbsolut,\r\n    (\r\n      SAFE_DIVIDE(lm_reach, llm_reach) -1\r\n    ) * 100 as ReachStoryVeraenderung,\r\n  FROM\r\n    (\r\n      SELECT\r\n        profile as Profil,\r\n        Round(sum(reach) /COUNT(DISTINCT time),0) as lm_reach,\r\n      FROM\r\n        `ndr-code-bi-dashboard.$dataset.instagramInsightsStories` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND $Zeitraum\r\n      GROUP BY\r\n        profile\r\n      ORDER BY\r\n        lm_reach desc\r\n    ) as lm\r\n    LEFT JOIN (\r\n      SELECT\r\n        profile as Profil,\r\n        sum(reach) /COUNT(DISTINCT time) as llm_reach,\r\n      FROM\r\n        `ndr-code-bi-dashboard.$comp_dataset.instagramInsightsStories` as instagram\r\n        JOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (\r\n          instagram.profileId = profiles.instagramID\r\n          AND profiles.LRA = \"$LRA\"\r\n        )\r\n      WHERE\r\n        True\r\n        AND CASE \"${Monat:text}\"\r\n               WHEN \"Jahr\" THEN EXTRACT(YEAR from instagram.time) = $Jahr - 1\r\n               ELSE EXTRACT(MONTH from time) = EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AND EXTRACT(YEAR from time) = EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH))\r\n               END\r\n      GROUP BY\r\n        profile\r\n      ORDER BY\r\n        llm_reach desc\r\n    ) as llm ON llm.Profil = lm.Profil\r\n  ORDER BY\r\n    lm.lm_reach DESC\r\n)\r\nSELECT\r\n  followers.Profil,\r\n  followers.followers,\r\n  followers.FollowerVeraenderungAbsolut,\r\n  followers.FollowerVeraenderung,\r\n  anzahl_posts.Anzahlposts,\r\n  Interaktionen.Interaktionen,\r\n  Interaktionen.InteraktionenVeraenderungAbsolut,\r\n  Interaktionen.InteraktionenVeraenderung,\r\n  PotenzielleReichweiteProTag.ReachProTag,\r\n  PotenzielleReichweiteProTag.ReachProTagVeraenderungAbsolut,\r\n  PotenzielleReichweiteProTag.ReachProTagVeraenderung,\r\n  PotenzielleReichweiteProBeitrag.ReachProBeitrag,\r\n  PotenzielleReichweiteProBeitrag.ReachProBeitragVeraenderungAbsolut,\r\n  PotenzielleReichweiteProBeitrag.ReachProBeitragVeraenderung,\r\n  video_start.videoViews10s,\r\n  video_start.videoViews10sVeraenderungAbsolut,\r\n  video_start.videoViews10sVeraenderung,\r\n  PotenzielleReichweiteStory.ReachStory,\r\n  PotenzielleReichweiteStory.ReachStoryVeraenderungAbsolut,\r\n  PotenzielleReichweiteStory.ReachStoryVeraenderung\r\nFROM\r\n  followers\r\n  LEFT JOIN anzahl_posts ON followers.Profil = anzahl_posts.Profil\r\n  LEFT JOIN Interaktionen ON followers.Profil = Interaktionen.Profil\r\n  LEFT JOIN video_start ON followers.Profil = video_start.Profil\r\n  LEFT JOIN PotenzielleReichweiteProTag on followers.Profil = PotenzielleReichweiteProTag.Profil\r\n  LEFT JOIN PotenzielleReichweiteProBeitrag on followers.Profil = PotenzielleReichweiteProBeitrag.Profil\r\n  LEFT JOIN PotenzielleReichweiteStory on followers.Profil = PotenzielleReichweiteStory.Profil",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Zusammenfassung aller Profile | $Monat $Jahr",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {
                "Anzahlposts": 4,
                "FollowerVeraenderung": 3,
                "FollowerVeraenderungAbsolut": 2,
                "Interaktionen": 5,
                "InteraktionenVeraenderung": 7,
                "InteraktionenVeraenderungAbsolut": 6,
                "Profil": 0,
                "ReachProBeitrag": 11,
                "ReachProBeitragVeraenderung": 13,
                "ReachProBeitragVeraenderungAbsolut": 12,
                "ReachProTag": 8,
                "ReachProTagVeraenderung": 10,
                "ReachProTagVeraenderungAbsolut": 9,
                "ReachStory": 14,
                "ReachStoryVeraenderung": 16,
                "ReachStoryVeraenderungAbsolut": 15,
                "followers": 1,
                "videoViews10s": 17,
                "videoViews10sVeraenderung": 19,
                "videoViews10sVeraenderungAbsolut": 18
              },
              "renameByName": {}
            }
          }
        ],
        "type": "table"
      }
    ],
    "refresh": false,
    "schemaVersion": 37,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "selected": false,
            "text": "NDR",
            "value": "NDR"
          },
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "LRA",
          "options": [
            {
              "selected": true,
              "text": "NDR",
              "value": "NDR"
            },
            {
              "selected": false,
              "text": "MDR",
              "value": "MDR"
            },
            {
              "selected": false,
              "text": "KiKa",
              "value": "KiKa"
            }
          ],
          "query": "NDR, MDR, KiKa",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "April",
            "value": "April"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "lastMonth",
          "options": [],
          "query": {
            "dataset": "Quintly",
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH))\r\nWHEN 1 THEN \"Januar\"\r\nWHEN 2 THEN \"Februar\"\r\nWHEN 3 THEN \"März\"\r\nWHEN 4 THEN \"April\"\r\nWHEN 5 THEN \"Mai\"\r\nWHEN 6 THEN \"Juni\"\r\nWHEN 7 THEN \"Juli\"\r\nWHEN 8 THEN \"August\"\r\nWHEN 9 THEN \"September\"\r\nWHEN 10 THEN \"Oktober\"\r\nWHEN 11 THEN \"November\"\r\nWHEN 12 THEN \"Dezember\"\r\nEND\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "facebook"
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Mai",
            "value": "5"
          },
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "Monat",
          "options": [
            {
              "selected": false,
              "text": "Januar",
              "value": "1"
            },
            {
              "selected": false,
              "text": "Februar",
              "value": "2"
            },
            {
              "selected": false,
              "text": "März",
              "value": "3"
            },
            {
              "selected": false,
              "text": "April",
              "value": "4"
            },
            {
              "selected": true,
              "text": "Mai",
              "value": "5"
            },
            {
              "selected": false,
              "text": "Juni",
              "value": "6"
            },
            {
              "selected": false,
              "text": "Juli",
              "value": "7"
            },
            {
              "selected": false,
              "text": "August",
              "value": "8"
            },
            {
              "selected": false,
              "text": "September",
              "value": "9"
            },
            {
              "selected": false,
              "text": "Oktober",
              "value": "10"
            },
            {
              "selected": false,
              "text": "November",
              "value": "11"
            },
            {
              "selected": false,
              "text": "Dezember",
              "value": "12"
            },
            {
              "selected": false,
              "text": "Jahr",
              "value": "13"
            }
          ],
          "query": "Januar : 1, Februar :  2, März : 3, April : 4, Mai : 5, Juni : 6, Juli : 7, August : 8, September : 9, Oktober : 10, November : 11, Dezember : 12, Jahr : 13",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "2024",
            "value": "2024"
          },
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "Jahr",
          "options": [
            {
              "selected": false,
              "text": "2022",
              "value": "2022"
            },
            {
              "selected": false,
              "text": "2023",
              "value": "2023"
            },
            {
              "selected": true,
              "text": "2024",
              "value": "2024"
            }
          ],
          "query": "2022 : 2022, 2023 : 2023, 2024 : 2024",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "48",
            "value": "48"
          },
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "filled_size_headline",
          "options": [
            {
              "selected": true,
              "text": "48",
              "value": "48"
            }
          ],
          "query": "48",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "'NDRNiedersachsen', 'NJOY', 'SportschauF', 'NDRHamburg', 'extra3', 'Rest', 'Ernaehrungsdocs', 'NDRde', 'NDRMecklenburgVorpommern'",
            "value": "'NDRNiedersachsen', 'NJOY', 'SportschauF', 'NDRHamburg', 'extra3', 'Rest', 'Ernaehrungsdocs', 'NDRde', 'NDRMecklenburgVorpommern'"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "queryInteractions",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH filter_month_profiles as (SELECT\r\n    REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(profile,'-',''),' ',''),',',''),'ä','ae'),'Ä','Ae'),'ö','oe'),'Ö','Oe'),'ü','ue'),'Ü','Ue'),'.',''),'!',''),'&',''),\"'\",\"\"),'#',''),'🍀',''),'ß','ss') as profile, \r\n    SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END) AS engagedUsers,\r\n       CASE \"${Monat:text}\"\r\n      WHEN \"Jahr\" THEN \"year\"\r\n      ELSE CONCAT(EXTRACT(MONTH from time),'-',EXTRACT(YEAR from time)) \r\n      END\r\n    as month_year,\r\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n  WHERE profiles.LRA = \"$LRA\"\r\n    AND $Zeitraum\r\n  GROUP BY profile, month_year), filter_month_top_profiles as (\r\n  SELECT \r\n    month_year,\r\n    profile,\r\n    engagedUsers,\r\n    ROW_NUMBER() OVER (PARTITION BY month_year ORDER BY engagedUsers DESC) AS profile_rank\r\n  FROM filter_month_profiles\r\n), filter_month_top_8_profiles AS (\r\n  SELECT \r\n    month_year,\r\n    profile,\r\n    engagedUsers\r\n  FROM filter_month_top_profiles\r\n  WHERE profile_rank <= 8 \r\n  ), filter_month_rest AS (\r\n  SELECT \r\n    month_year,\r\n    'Rest' AS profile,\r\n    SUM(engagedUsers) AS engagedUsers\r\n  FROM filter_month_top_profiles\r\n  WHERE profile_rank > 8\r\n  GROUP BY month_year\r\n), filter_month_top_8_rest_profiles AS (\r\n   SELECT \r\n    month_year,\r\n    profile,\r\n    engagedUsers\r\n  FROM filter_month_top_8_profiles\r\n  UNION ALL\r\n  SELECT \r\n    month_year,\r\n    profile,\r\n    engagedUsers\r\n  FROM filter_month_rest\r\n  ORDER BY month_year DESC, profile\r\n) SELECT STRING_AGG(DISTINCT CONCAT(\"'\", profile, \"'\"), ', ') FROM filter_month_top_8_rest_profiles\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "'NDRde', 'NDRMecklenburgVorpommern', 'extra3', 'Rest', 'NDRHamburg', 'NDRNiedersachsen', 'NDRaufmLand', 'Ernaehrungsdocs', 'CarenMiosga'",
            "value": "'NDRde', 'NDRMecklenburgVorpommern', 'extra3', 'Rest', 'NDRHamburg', 'NDRNiedersachsen', 'NDRaufmLand', 'Ernaehrungsdocs', 'CarenMiosga'"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "QueryVideoViews",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH filter_month_profiles as (SELECT\r\n    REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(profile,'-',''),' ',''),',',''),'ä','ae'),'Ä','Ae'),'ö','oe'),'Ö','Oe'),'ü','ue'),'Ü','Ue'),'.',''),'!',''),'&',''),\"'\",\"\"),'#',''),'🍀',''),'ß','ss') as profile, \r\n    -- SUM(videoViews) AS videoViews,\r\n    SUM(IFNULL(videoViews, 0)) AS videoViews,\r\n       CASE \"${Monat:text}\"\r\n      WHEN \"Jahr\" THEN \"year\"\r\n      ELSE CONCAT(EXTRACT(MONTH from time),'-',EXTRACT(YEAR from time)) \r\n      END\r\n    as month_year,\r\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n  WHERE profiles.LRA = \"$LRA\"\r\n    AND $Zeitraum \r\n  GROUP BY profile, month_year), filter_month_top_profiles as (\r\n  SELECT \r\n    month_year,\r\n    profile,\r\n    videoViews,\r\n    ROW_NUMBER() OVER (PARTITION BY month_year ORDER BY videoViews DESC) AS profile_rank\r\n  FROM filter_month_profiles\r\n), filter_month_top_8_profiles AS (\r\n  SELECT \r\n    month_year,\r\n    profile,\r\n    videoViews\r\n  FROM filter_month_top_profiles\r\n  WHERE profile_rank <= 8 \r\n  ), filter_month_rest AS (\r\n  SELECT \r\n    month_year,\r\n    'Rest' AS profile,\r\n    SUM(videoViews) AS videoViews\r\n  FROM filter_month_top_profiles\r\n  WHERE profile_rank > 8\r\n  GROUP BY month_year\r\n), filter_month_top_8_rest_profiles AS (\r\n   SELECT \r\n    month_year,\r\n    profile,\r\n    videoViews\r\n  FROM filter_month_top_8_profiles\r\n  UNION ALL\r\n  SELECT \r\n    month_year,\r\n    profile,\r\n    videoViews\r\n  FROM filter_month_rest\r\n  ORDER BY month_year DESC, profile\r\n) SELECT STRING_AGG(DISTINCT CONCAT(\"'\", profile, \"'\"), ', ') FROM filter_month_top_8_rest_profiles",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "'SportschauF', 'NDRHamburg', 'Ernaehrungsdocs', 'extra3', 'NDRNiedersachsen', 'NDRde', 'NJOY', 'NDRMecklenburgVorpommern'",
            "value": "'SportschauF', 'NDRHamburg', 'Ernaehrungsdocs', 'extra3', 'NDRNiedersachsen', 'NDRde', 'NJOY', 'NDRMecklenburgVorpommern'"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "top_8_profiles",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH filter_month_profiles as (SELECT\r\n    REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(profile,'-',''),' ',''),',',''),'ä','ae'),'Ä','Ae'),'ö','oe'),'Ö','Oe'),'ü','ue'),'Ü','Ue'),'.',''),'!',''),'&',''),\"'\",\"\"),'#',''),'🍀',''),'ß','ss') as profile, \r\n   SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END) AS engagedUsers,\r\n   CASE \"${Monat:text}\"\r\n      WHEN \"Jahr\" THEN \"year\"\r\n      ELSE FORMAT_DATE('%m-%Y', time)\r\n      END AS month_year\r\nFROM `ndr-code-bi-dashboard.$dataset.instagramInsightsOwnPosts` as instagram\r\nJOIN `ndr-code-bi-dashboard.Quintly.profiles` as profiles ON (instagram.profileId = profiles.instagramID AND profiles.LRA = \"$LRA\")\r\n  WHERE profiles.LRA = \"$LRA\"\r\n    AND $Zeitraum\r\n  GROUP BY profile, month_year), filter_month_top_profiles as (\r\n  SELECT \r\n    month_year,\r\n    profile,\r\n    engagedUsers,\r\n    ROW_NUMBER() OVER (PARTITION BY month_year ORDER BY engagedUsers DESC) AS profile_rank\r\n  FROM filter_month_profiles\r\n)\r\n  SELECT \r\n    STRING_AGG(DISTINCT CONCAT(\"'\", profile, \"'\"), ', ')\r\n  FROM filter_month_top_profiles\r\n  WHERE profile_rank <= 8",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Mai",
            "value": "Mai"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Month",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE $Monat\r\nWHEN 1 THEN \"Januar\"\r\nWHEN 2 THEN \"Februar\"\r\nWHEN 3 THEN \"März\"\r\nWHEN 4 THEN \"April\"\r\nWHEN 5 THEN \"Mai\"\r\nWHEN 6 THEN \"Juni\"\r\nWHEN 7 THEN \"Juli\"\r\nWHEN 8 THEN \"August\"\r\nWHEN 9 THEN \"September\"\r\nWHEN 10 THEN \"Oktober\"\r\nWHEN 11 THEN \"November\"\r\nWHEN 12 THEN \"Dezember\"\r\nWHEN 13 THEN \"Jahr\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Juni",
            "value": "Juni"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Month_1",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH month as (\r\n  SELECT CASE \"${dataset:text}\"\r\nWHEN \"Quintly\"\r\nTHEN CASE EXTRACT(MONTH FROM DATE(${last_update:doublequote}))\r\nWHEN 1 THEN 12\r\nELSE  EXTRACT(MONTH FROM DATE(${last_update:doublequote})) +1 \r\nEND\r\nELSE $Monat\r\nEND\r\nas Monat\r\n)\r\nSELECT\r\nCASE Monat\r\nWHEN 13 Then \"Januar\"\r\nWHEN 12 THEN \"Januar\"\r\nWHEN 1 THEN \"Februar\"\r\nWHEN 2 THEN \"März\"\r\nWHEN 3 THEN \"April\"\r\nWHEN 4 THEN \"Mai\"\r\nWHEN 5 THEN \"Juni\"\r\nWHEN 6 THEN \"Juli\"\r\nWHEN 7 THEN \"August\"\r\nWHEN 8 THEN \"September\"\r\nWHEN 9 THEN \"Oktober\"\r\nWHEN 10 THEN \"November\"\r\nWHEN 11 THEN \"Dezember\"\r\nEND\r\nFROM month",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "31",
            "value": "31"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Day_number",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT EXTRACT(DAY from LAST_DAY(DATE($Jahr,$Monat,1),MONTH))",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Mai",
            "value": "Mai"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Monat_abkuerzung",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE $Monat\r\nWHEN 1 THEN \"Jan.\"\r\nWHEN 2 THEN \"Feb.\"\r\nWHEN 3 THEN \"März\"\r\nWHEN 4 THEN \"Apr.\"\r\nWHEN 5 THEN \"Mai\"\r\nWHEN 6 THEN \"Juni\"\r\nWHEN 7 THEN \"Juli\"\r\nWHEN 8 THEN \"Aug.\"\r\nWHEN 9 THEN \"Sep.\"\r\nWHEN 10 THEN \"Okt.\"\r\nWHEN 11 THEN \"Nov.\"\r\nWHEN 12 THEN \"Dez.\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Apr.",
            "value": "Apr."
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "LastMonat_abkuerzung",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE EXTRACT(MONTH from DATE_SUB(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH))\r\nWHEN 1 THEN \"Jan.\"\r\nWHEN 2 THEN \"Feb.\"\r\nWHEN 3 THEN \"März\"\r\nWHEN 4 THEN \"Apr.\"\r\nWHEN 5 THEN \"Mai\"\r\nWHEN 6 THEN \"Juni\"\r\nWHEN 7 THEN \"Juli\"\r\nWHEN 8 THEN \"Aug.\"\r\nWHEN 9 THEN \"Sep.\"\r\nWHEN 10 THEN \"Okt.\"\r\nWHEN 11 THEN \"Nov.\"\r\nWHEN 12 THEN \"Dez.\"\r\nEND\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "2023",
            "value": "2023"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "LastJahr",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT $Jahr - 1",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "2024",
            "value": "2024"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "YearFromLastMonth",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT EXTRACT(YEAR from DATE_SUB(DATE($Jahr,$Monat,1),INTERVAL 1 MONTH))",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Quintly_final_2024_5",
            "value": "Quintly_final_2024_5"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "dataset",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN $Monat = 13 AND CURRENT_DATE() < DATE($Jahr + 1, 1, 7) THEN \"Quintly\"\r\nWHEN $Jahr < 2022 THEN \"Quintly\"\r\nWHEN $Monat = 13 AND CURRENT_DATE() > DATE($Jahr, 1, 7) THEN CONCAT(\"Quintly_final_\",CAST($Jahr AS STRING))\r\nWHEN CURRENT_DATE() < DATE_ADD(DATE($Jahr,$Monat,8),INTERVAL 1 MONTH) THEN \"Quintly\"\r\nWHEN LAST_DAY(DATE($Jahr,$Monat,1)) <= DATE(2023,11,30) THEN \"Quintly\"\r\nELSE CONCAT(\"Quintly_final_\",CAST($Jahr AS STRING),\"_\", CAST($Monat AS STRING)) END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "EXTRACT(MONTH from time) = 5 AND EXTRACT(YEAR from time) = 2024",
            "value": "EXTRACT(MONTH from time) = 5 AND EXTRACT(YEAR from time) = 2024"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Zeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n    CASE \"${Monat:text}\"\r\n    WHEN \"Jahr\" THEN \"EXTRACT(YEAR FROM time) = $Jahr\"\r\n    ELSE \"EXTRACT(MONTH from time) = $Monat AND EXTRACT(YEAR from time) = $Jahr\"\r\n    END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "## Apr.  \n ## 2024",
            "value": "## Apr.  \n ## 2024"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Vergleich",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$dataset\"\r\n            WHEN \"Quintly\" THEN \"## Vormonat\"\r\n            ELSE \"## $LastMonat_abkuerzung  \\n ## $YearFromLastMonth\"\r\n            END\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "31.5.2024",
            "value": "31.5.2024"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Stichtag",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH max_time AS (SELECT MAX(time) as time FROM `ndr-code-bi-dashboard.$dataset.facebookInsights` as facebook\r\n            WHERE $Zeitraum AND page_follows IS not null)\r\nSELECT CONCAT(EXTRACT(DAY FROM time),\".\", EXTRACT(MONTH FROM time),\".\", EXTRACT(YEAR FROM time)) FROM max_time",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Vormonat ",
            "value": "Vormonat "
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Vormonat",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "   SELECT CASE \"${Monat:text}\"\r\n      WHEN \"Jahr\" THEN \"Vorjahr\"\r\n      ELSE \"Vormonat \"\r\n      END\r\n    as month_year",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "31",
            "value": "31"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "number_of_days",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE\r\n\"${Monat:text}\"\r\nWHEN \"Jahr\" THEN (DATE_DIFF(LAST_DAY(DATE($Jahr,12,31),MONTH),DATE($Jahr,1,1),DAY) + 1)\r\nELSE EXTRACT(DAY FROM LAST_DAY(DATE($Jahr,$Monat,1),MONTH)) END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "31",
            "value": "31"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "number_of_days_last_year",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE\r\n\"${Monat:text}\"\r\nWHEN \"Jahr\" THEN (DATE_DIFF(LAST_DAY(DATE($Jahr-1,12,31),MONTH),DATE($Jahr-1,1,1),DAY) + 1)\r\nELSE EXTRACT(DAY FROM LAST_DAY(DATE($Jahr-1,$Monat,1),MONTH)) END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "30",
            "value": "30"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "number_of_days_last_month",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE $Monat\r\nWHEN 13 THEN 1\r\nELSE EXTRACT(DAY FROM LAST_DAY(DATE_SUB(DATE($Jahr,$Monat,1),INTERVAL 1 MONTH),MONTH)) END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Quintly_final_2024_5",
            "value": "Quintly_final_2024_5"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "comp_dataset",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN $Monat = 13 AND CURRENT_DATE() < DATE($Jahr + 1, 1, 7) THEN \"Quintly\"\r\nWHEN $Jahr < 2022 THEN \"Quintly\"\r\nWHEN $Monat = 13 AND CURRENT_DATE() > DATE($Jahr, 1, 7) THEN CONCAT(\"Quintly_final_\",CAST($Jahr - 1 AS STRING))\r\nWHEN CURRENT_DATE() < DATE_ADD(DATE($Jahr,$Monat,8),INTERVAL 1 MONTH) THEN \"Quintly\"\r\nWHEN LAST_DAY(DATE($Jahr,$Monat,1)) <= DATE(2023,11,30) THEN \"Quintly\"\r\nELSE CONCAT(\"Quintly_final_\",CAST($Jahr AS STRING),\"_\", CAST($Monat AS STRING)) END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "2024-06-07",
            "value": "2024-06-07"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "last_update",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT DATE(MAX(last_update)) FROM $dataset.facebook ",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "07. Mai 2024",
            "value": "07. Mai 2024"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "datenstand",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "CREATE TEMP FUNCTION getMonthByDate(datum DATE)\r\nRETURNS STRING\r\nDETERMINISTIC \r\nLANGUAGE js\r\nAS r\"\"\"\r\nvar jsDatum = new Date(datum);\r\nvar month = jsDatum.getUTCMonth();\r\nvar months = [\"Januar\",\"Februar\",\"März\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"];\r\nreturn months[month];\r\n\"\"\";\r\n\r\n\r\nWITH max_last_update AS(\r\n  SELECT DATE(MAX(last_update)) as last_update FROM $dataset.instagram\r\n), tag AS(\r\n  SELECT CASE \"$dataset\"\r\n  WHEN \"Quintly\" THEN LPAD(CAST(EXTRACT(DAY FROM DATE(last_update)) as STRING), 2, '0')\r\n  ELSE \"07\" END as last_update_tag\r\n  FROM max_last_update\r\n),\r\nmonat AS(\r\n  SELECT CASE \"$dataset\"\r\n  WHEN \"Quintly\" THEN getMonthByDate(last_update)\r\n  ELSE CASE \"${Monat:text}\"\r\n  WHEN \"Jahr\" THEN \"Januar\"\r\n  ELSE getMonthByDate(DATE(2023,$Monat,1)) END END as last_update_month\r\n  FROM max_last_update \r\n),\r\njahr AS(\r\n  SELECT CASE \"$dataset\"\r\n  WHEN \"Quintly\" THEN CAST(EXTRACT(YEAR FROM last_update) AS STRING)\r\n  ELSE CASE \"${Monat:text}\"\r\n  WHEN \"Jahr\" THEN CAST($Jahr + 1 AS STRING)\r\n  ELSE CAST(EXTRACT(YEAR FROM DATE_ADD(DATE($Jahr,$Monat,1), INTERVAL 1 MONTH)) AS STRING) END\r\n  END as last_update_year\r\n  FROM max_last_update\r\n)\r\nSELECT CONCAT(last_update_tag,\". \",last_update_month, \" \", last_update_year) from tag, monat, jahr",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "07.6.2024",
            "value": "07.6.2024"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "stichtagmonat",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE \r\nWHEN ($Monat = 13 AND DATE($Jahr+1, 1, 7) > CURRENT_DATE()) THEN FORMAT_DATE('%d.%m.%Y', CURRENT_DATE())\r\nWHEN $Monat = 13 THEN CONCAT(\"07.01.\",CAST($Jahr+1 AS STRING))\r\nWHEN DATE_ADD(DATE($Jahr,$Monat,7), INTERVAL 1 MONTH) > CURRENT_DATE() THEN FORMAT_DATE('%d.%m.%Y', CURRENT_DATE())\r\nELSE \r\nCASE $Monat\r\nWHEN 12 THEN CONCAT(\"07.01.\",CAST($Jahr+1 AS STRING))\r\nELSE CONCAT(\"07.\", CAST($Monat+1 AS STRING), \".$Jahr\") END END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "_final_2024_5",
            "value": "_final_2024_5"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "table_suffix",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN $Monat = 13 AND CURRENT_DATE() < DATE($Jahr + 1, 1, 7) THEN \"\"\r\nWHEN $Jahr < 2022 THEN \"Quintly\"\r\nWHEN $Monat = 13 AND CURRENT_DATE() > DATE($Jahr, 1, 7) THEN CONCAT(\"Quintly_final_\",CAST($Jahr AS STRING))\r\nWHEN CURRENT_DATE() < DATE_ADD(DATE($Jahr,$Monat,8),INTERVAL 1 MONTH) THEN \"\"\r\nWHEN LAST_DAY(DATE($Jahr,$Monat,1)) <= DATE(2023,11,30) THEN \"\"\r\nELSE CONCAT(\"_final_\",CAST($Jahr AS STRING),\"_\", CAST($Monat AS STRING)) END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "_frozen",
            "value": "_frozen"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "dataset_suffix",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN $Monat = 13 AND CURRENT_DATE() < DATE($Jahr + 1, 1, 7) THEN \"\"\r\nWHEN $Jahr < 2022 THEN \"\"\r\nWHEN $Monat = 13 AND CURRENT_DATE() > DATE($Jahr, 1, 7) THEN \"_frozen\"\r\nWHEN CURRENT_DATE() < DATE_ADD(DATE($Jahr,$Monat,8),INTERVAL 1 MONTH) THEN \"\"\r\nWHEN LAST_DAY(DATE($Jahr,$Monat,1)) <= DATE(2023,11,30) THEN \"\"\r\nELSE \"_frozen\" END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "_final_2024_5",
            "value": "_final_2024_5"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "comp_table_suffix",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN $Monat = 13 AND CURRENT_DATE() < DATE($Jahr + 1, 1, 7) THEN \"\"\r\nWHEN $Jahr < 2022 THEN \"Quintly\"\r\nWHEN $Monat = 13 AND CURRENT_DATE() > DATE($Jahr, 1, 7) THEN CONCAT(\"Quintly_final_\",CAST($Jahr - 1 AS STRING))\r\nWHEN CURRENT_DATE() < DATE_ADD(DATE($Jahr,$Monat,8),INTERVAL 1 MONTH) THEN \"\"\r\nWHEN LAST_DAY(DATE($Jahr,$Monat,1)) <= DATE(2023,11,30) THEN \"\"\r\nELSE CONCAT(\"_final_\",CAST($Jahr AS STRING),\"_\", CAST($Monat AS STRING)) END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "_frozen",
            "value": "_frozen"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "comp_dataset_suffix",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE\r\nWHEN $Monat = 13 AND CURRENT_DATE() < DATE($Jahr + 1, 1, 7) THEN \"\"\r\nWHEN $Jahr < 2022 THEN \"\"\r\nWHEN $Monat = 13 AND CURRENT_DATE() > DATE($Jahr, 1, 7) THEN \"_frozen\"\r\nWHEN CURRENT_DATE() < DATE_ADD(DATE($Jahr,$Monat,8),INTERVAL 1 MONTH) THEN \"\"\r\nWHEN LAST_DAY(DATE($Jahr,$Monat,1)) <= DATE(2023,11,30) THEN \"\"\r\nELSE \"_frozen\"END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-6h",
      "to": "now"
    },
    "timepicker": {
      "hidden": true
    },
    "timezone": "",
    "title": "Social Media Report Instagram Copy",
    "uid": "rVlI-F_Sk",
    "version": 2,
    "weekStart": ""
  }
}
