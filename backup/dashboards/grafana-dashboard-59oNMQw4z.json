{
  "meta": {
    "type": "db",
    "canSave": true,
    "canEdit": true,
    "canAdmin": true,
    "canStar": true,
    "canDelete": true,
    "slug": "ndr-all-gesellschaft-7c-tv-youtube-7c-top-videos",
    "url": "/d/59oNMQw4z/ndr-all-gesellschaft-7c-tv-youtube-7c-top-videos",
    "expires": "0001-01-01T00:00:00Z",
    "created": "2024-06-20T11:46:22Z",
    "updated": "2024-07-30T05:37:52Z",
    "updatedBy": "Anonymous",
    "createdBy": "Anonymous",
    "version": 6,
    "hasAcl": false,
    "isFolder": false,
    "folderId": 670,
    "folderUid": "folder-Yli0Gb8Vk",
    "folderTitle": "TV_NDR_QA",
    "folderUrl": "/dashboards/f/folder-Yli0Gb8Vk/tv-ndr-qa",
    "provisioned": false,
    "provisionedExternalId": "",
    "annotationsPermissions": {
      "dashboard": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      },
      "organization": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      }
    }
  },
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 703,
    "links": [],
    "liveNow": true,
    "panels": [
      {
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 0,
          "y": 0
        },
        "id": 74,
        "libraryPanel": {
          "uid": "4Rhqls84z"
        }
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "5RzC0pR4k"
        },
        "description": "",
        "gridPos": {
          "h": 4,
          "w": 11,
          "x": 2,
          "y": 0
        },
        "id": 76,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<font size=\"8\" style=\"color:rgb(255, 0, 0);\">Youtube</font><font size=\"8\">  All Gesellschaft </font>",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "5RzC0pR4k"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": false,
            "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "post_video_view_time"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "facebookinsightsownposts",
            "timeColumn": "\"time\"",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#ff0000",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 13,
          "y": 0
        },
        "id": 139,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size_big - CHAR_LENGTH(CAST(Views as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(Views) as NUMERIC)) AS STRING), \",\", \".\"))FROM\n(\n  SELECT sum(views) as Views\n  FROM `ndr-code-bi-dashboard.Quintly.youtubeAnalytics`\n  WHERE profileId IN (231281, 231993,106037,408286 ,404083 ,231990)\n  AND $Zeitraum\nAND last_update = \n  (\n    SELECT MAX(last_update) \n    FROM `ndr-code-bi-dashboard.Quintly.youtubeAnalytics` \n    WHERE profileId IN (231281, 231993,106037,408286 ,404083 ,231990)\n  )\n\n)\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "f0_": false
              },
              "indexByName": {},
              "renameByName": {
                "f0_": "Views - Gesamtprofil    ",
                "page_impressions_unique": "Potentielle Reichweite"
              }
            }
          },
          {
            "id": "labelsToFields",
            "options": {
              "mode": "columns"
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#ff0000",
              "mode": "fixed"
            },
            "decimals": 0,
            "mappings": [],
            "noValue": "N/A",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "string"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 17,
          "y": 0
        },
        "id": 141,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size_big - CHAR_LENGTH(CAST(Interaktionen as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(Interaktionen) as NUMERIC)) AS STRING), \",\", \".\"))FROM\n(\nSELECT SUM(comments) as Interaktionen FROM `ndr-code-bi-dashboard.Quintly.youtubeAnalytics` as Interaktionen\n  WHERE profileId IN (231281, 231993,106037,408286 ,404083 ,231990)\n  AND $Zeitraum \n  AND last_update = \n    (SELECT MAX(last_update) \n    FROM `ndr-code-bi-dashboard.Quintly.youtubeAnalytics`  \n    WHERE profileId IN (231281, 231993,106037,408286 ,404083 ,231990))\n)\n\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_engaged_users",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "baa899a9-cdef-4012-b456-718364767b70": {
                    "properties": {
                      "field": "profileId",
                      "operator": "equal",
                      "value": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "number"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                "type": "group"
              }
            },
            "table": "facebookInsights"
          }
        ],
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "f0_": false
              },
              "indexByName": {},
              "renameByName": {
                "f0_": "Kommentare-Gesamtprofil",
                "page_impressions_unique": "Potentielle Reichweite"
              }
            }
          },
          {
            "id": "labelsToFields",
            "options": {
              "mode": "columns"
            }
          }
        ],
        "transparent": true,
        "type": "stat"
      },
      {
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 21,
          "y": 0
        },
        "id": 72,
        "libraryPanel": {
          "uid": "Ps-kus84k"
        }
      },
      {
        "gridPos": {
          "h": 2,
          "w": 10,
          "x": 0,
          "y": 4
        },
        "id": 137,
        "libraryPanel": {
          "uid": "jyuu_s8Vk"
        }
      },
      {
        "columns": [],
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fontSize": "150%",
        "gridPos": {
          "h": 15,
          "w": 24,
          "x": 0,
          "y": 6
        },
        "id": 133,
        "options": {
          "footer": {
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Veränderung Abonnenten"
            }
          ]
        },
        "pluginVersion": "9.2.3",
        "showHeader": true,
        "sort": {
          "col": 2,
          "desc": true
        },
        "styles": [
          {
            "$$hashKey": "object:68",
            "alias": "Datum",
            "align": "auto",
            "dateFormat": " DD.MM | H:mm \\U\\h\\r",
            "pattern": "Datum",
            "type": "date"
          },
          {
            "$$hashKey": "object:69",
            "alias": "Titel",
            "align": "left",
            "colors": [
              "rgba(245, 54, 54, 0.9)",
              "rgba(237, 129, 40, 0.89)",
              "rgba(50, 172, 45, 0.97)"
            ],
            "decimals": 2,
            "pattern": "title",
            "thresholds": [],
            "type": "string",
            "unit": "short"
          },
          {
            "$$hashKey": "object:893",
            "alias": "▼ Videostarts",
            "align": "center",
            "colors": [
              "rgba(245, 54, 54, 0.9)",
              "rgba(237, 129, 40, 0.89)",
              "rgba(50, 172, 45, 0.97)"
            ],
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "mappingType": 1,
            "pattern": "views",
            "thresholds": [],
            "type": "number",
            "unit": "locale"
          },
          {
            "$$hashKey": "object:904",
            "alias": "Likes",
            "align": "center",
            "colors": [
              "rgba(245, 54, 54, 0.9)",
              "rgba(237, 129, 40, 0.89)",
              "rgba(50, 172, 45, 0.97)"
            ],
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "mappingType": 1,
            "pattern": "likes",
            "thresholds": [],
            "type": "number",
            "unit": "locale"
          },
          {
            "$$hashKey": "object:915",
            "alias": "Kommentare",
            "align": "center",
            "colors": [
              "rgba(245, 54, 54, 0.9)",
              "rgba(237, 129, 40, 0.89)",
              "rgba(50, 172, 45, 0.97)"
            ],
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "mappingType": 1,
            "pattern": "comments",
            "thresholds": [],
            "type": "number",
            "unit": "locale"
          },
          {
            "$$hashKey": "object:926",
            "alias": "Videolänge",
            "align": "center",
            "colors": [
              "rgba(245, 54, 54, 0.9)",
              "rgba(237, 129, 40, 0.89)",
              "rgba(50, 172, 45, 0.97)"
            ],
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "mappingType": 1,
            "pattern": "Dauer",
            "thresholds": [],
            "type": "number",
            "unit": "short"
          }
        ],
        "targets": [
          {
            "dataset": "Quintly",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\ntime as Datum,\nCONCAT(\n  CASE WHEN LENGTH(CAST(DIV(duration,60) AS String))<2 THEN CONCAT(\"0\",CAST(DIV(duration,60) AS String)) ELSE CAST(DIV(duration,60) AS String)  END ,\n  \":\",CASE WHEN LENGTH(CAST(MOD(duration,60) AS String))<2 THEN CONCAT(\"0\",CAST(MOD(duration,60) AS String)) ELSE CAST(MOD(duration,60) AS String)  END) || ' min' as Dauer,\n  CONCAT(\n  CASE WHEN LENGTH(CAST(DIV(averageViewDuration,60) AS String))<2 THEN CONCAT(\"0\",CAST(DIV(averageViewDuration,60) AS String)) ELSE CAST(DIV(averageViewDuration,60) AS String)  END ,\n  \":\",CASE WHEN LENGTH(CAST(MOD(averageViewDuration,60) AS String))<2 THEN CONCAT(\"0\",CAST(MOD(averageViewDuration,60) AS String)) ELSE CAST(MOD(averageViewDuration,60) AS String)  END) as averageViewTime,\n  estimatedMinutesWatched/60 as sehVolumen,\n   title,\nviews,\nlink,\nlikes,\ndislikes,\ncomments,\nshares,\naverageViewPercentage,\nabo_change, FROM `ndr-code-bi-dashboard.Quintly.youtubeAnalyticsVideos` \nWHERE profileId IN (231281, 231993,106037,408286 ,404083 ,231990)\n  AND $Zeitraum\n  AND last_update = \n    (SELECT MAX(last_update) \n    FROM `ndr-code-bi-dashboard.Quintly.youtubeAnalyticsVideos`  \n    WHERE profileId IN (231281, 231993,106037,408286 ,404083 ,231990))\nORDER BY time DESC",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "*",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "youtubeAnalyticsVideos"
          }
        ],
        "transform": "table",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "Datum": false,
                "Dauer": false,
                "Veroeffentlichungsdatum": false,
                "abo_change": true,
                "averageViewDuration": true,
                "averageViewPercentage": true,
                "averageViewTime": true,
                "dislikes": true,
                "duration": true,
                "estimatedMinutesWatched": true,
                "externalId": true,
                "importTime": true,
                "last_update": true,
                "link": true,
                "profileId": true,
                "publishTime": true,
                "sehVolumen": true,
                "shares": true,
                "subscribersGained": true,
                "subscribersLost": true,
                "time": true
              },
              "indexByName": {
                "Datum": 0,
                "Dauer": 17,
                "abo_change": 20,
                "averageViewDuration": 14,
                "averageViewPercentage": 13,
                "averageViewTime": 18,
                "comments": 11,
                "dislikes": 10,
                "duration": 16,
                "estimatedMinutesWatched": 15,
                "externalId": 7,
                "importTime": 4,
                "last_update": 3,
                "likes": 9,
                "link": 8,
                "profileId": 2,
                "sehVolumen": 19,
                "shares": 12,
                "time": 1,
                "title": 5,
                "views": 6
              },
              "renameByName": {
                "Dauer": "Videolänge in Min.",
                "Veroeffentlichungsdatum": "Datum",
                "abo_change": "Veränderung Abonnenten",
                "averageViewDuration": " Ø Wiedergabedauer in Min.",
                "averageViewPercentage": "% Wiedergabe",
                "averageViewTime": "⌀ Wiedergabedauer",
                "comments": "Kommentare",
                "dislikes": "Dislikes",
                "duration": "Dauer",
                "estimatedMinutesWatched": "Sehvolumen",
                "interactions": "Interaktionen",
                "likes": "Likes",
                "link": "Link",
                "publishTime": "Datum",
                "sehVolumen": " Sehvolumen in Stunden",
                "shares": "Shares",
                "subscribersGained": "",
                "time": "Datum",
                "title": "Titel",
                "views": "Videostarts"
              }
            }
          },
          {
            "id": "filterByValue",
            "options": {
              "filters": [
                {
                  "config": {
                    "id": "isNull",
                    "options": {}
                  },
                  "fieldName": "Videostarts"
                }
              ],
              "match": "any",
              "type": "exclude"
            }
          }
        ],
        "transparent": true,
        "type": "table-old"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "5RzC0pR4k"
        },
        "gridPos": {
          "h": 5,
          "w": 3,
          "x": 6,
          "y": 21
        },
        "id": 70,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "# #",
          "mode": "markdown"
        },
        "pluginVersion": "9.2.3",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "5RzC0pR4k"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": false,
            "rawSql": "SELECT\n  \"time\" AS \"time\",\n  post_video_view_time\nFROM facebookinsightsownposts\nWHERE\n  $__timeFilter(\"time\")\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "post_video_view_time"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "facebookinsightsownposts",
            "timeColumn": "\"time\"",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "transparent": true,
        "type": "text"
      }
    ],
    "refresh": false,
    "schemaVersion": 37,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "selected": false,
            "text": "NDR",
            "value": "NDR"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "LRA",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "Select a.LRA  FROM\n(\nSELECT DISTINCT LRA FROM `ndr-code-bi-dashboard.Quintly.profiles` \n) as a \nORDER BY(\nCASE WHEN a.LRA like  LEFT(\"${__user.login}\",3)\nTHEN 1\nELSE 0\nEND\n) DESC",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "NDR Doku",
            "value": "NDR Doku"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Profil",
          "options": [],
          "query": {
            "dataset": "QuintlyTest",
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT a.profile \nFROM \n(SELECT profile FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE LRA = '$LRA' AND youtubeId != 0) as a,\n(SELECT  Profil_YT FROM `ndr-code-bi-dashboard.Quintly.default-settings` WHERE LRA = '$LRA') as b\nORDER BY( \nCASE WHEN a.profile = b.Profil_YT THEN 1\nELSE 2\nEND\n), a.profile ASC",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "profile",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "profileTest"
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "106037",
            "value": "106037"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "profileID",
          "options": [],
          "query": {
            "dataset": "QuintlyTest",
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT youtubeID FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE profile = '''$Profil'''",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "facebookID",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "instagramID",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "youtubeID",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "profileTest"
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "16.06.2023 \n 10:58 Uhr",
            "value": "16.06.2023 \n 10:58 Uhr"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "lastUpdate",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  FORMAT_DATETIME(\"%e.%m.%Y %n %H:%M Uhr\", DATETIME(MAX(last_update),\"Europe/Berlin\"))  \r\nFROM `ndr-code-bi-dashboard.Quintly.youtube`\r\nWHERE profileId = $profileID   ",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Letzte 7 Tage",
            "value": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  10 DAY) AND EXTRACT(DATE from time) < DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY)"
          },
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "Zeitraum",
          "options": [
            {
              "selected": true,
              "text": "Gestern",
              "value": "EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE(), INTERVAL  1 DAY)"
            },
            {
              "selected": false,
              "text": "Letzte 7 Tage",
              "value": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  7 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()"
            },
            {
              "selected": false,
              "text": "Letztes Wochenende",
              "value": "DATE(time) >= (  SELECT    saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND DATE(time) <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )"
            },
            {
              "selected": false,
              "text": "Letzte 30 Tage",
              "value": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()"
            }
          ],
          "query": "Gestern : EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE()\\, INTERVAL  1 DAY), Letzte 7 Tage : EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE()\\, INTERVAL  7 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE(), Letztes Wochenende :  DATE(time) >= (  SELECT    saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday\\,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND DATE(time) <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday\\,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) ), Letzte 30 Tage : EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE()\\, INTERVAL  30 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "10",
            "value": "10"
          },
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "filled_size",
          "options": [
            {
              "selected": true,
              "text": "15",
              "value": "15"
            }
          ],
          "query": "15",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "15",
            "value": "15"
          },
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "filled_size_big",
          "options": [
            {
              "selected": true,
              "text": "10",
              "value": "10"
            }
          ],
          "query": "10",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "58",
            "value": "58"
          },
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "filled_size_headline",
          "options": [
            {
              "selected": true,
              "text": "48",
              "value": "48"
            }
          ],
          "query": "48",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "24",
            "value": "24"
          },
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "filled_size_headline_small",
          "options": [
            {
              "selected": true,
              "text": "48",
              "value": "48"
            }
          ],
          "query": "48",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        }
      ]
    },
    "time": {
      "from": "2023-05-30T12:50:11.779Z",
      "to": "2023-05-30T13:10:11.779Z"
    },
    "timepicker": {
      "hidden": true,
      "refresh_intervals": [
        "5s",
        "10s",
        "30s",
        "1m",
        "5m",
        "15m",
        "30m",
        "1h",
        "2h",
        "1d"
      ]
    },
    "timezone": "",
    "title": "NDR All Gesellschaft | TV YouTube | Top Videos",
    "uid": "59oNMQw4z",
    "version": 6,
    "weekStart": ""
  }
}
