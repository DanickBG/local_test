{
  "meta": {
    "type": "db",
    "canSave": true,
    "canEdit": true,
    "canAdmin": true,
    "canStar": true,
    "canDelete": true,
    "slug": "piano-web-desktop-mit-landerfilter",
    "url": "/d/be10red7dxr0gd/piano-web-desktop-mit-landerfilter",
    "expires": "0001-01-01T00:00:00Z",
    "created": "2024-10-16T06:25:34Z",
    "updated": "2025-05-07T09:54:58Z",
    "updatedBy": "daniel hristov dev",
    "createdBy": "chams khoury dev",
    "version": 15,
    "hasAcl": false,
    "isFolder": false,
    "folderId": 660,
    "folderUid": "folder-F9a5Uxn4k",
    "folderTitle": "Prototypes",
    "folderUrl": "/dashboards/f/folder-F9a5Uxn4k/prototypes",
    "provisioned": false,
    "provisionedExternalId": "",
    "annotationsPermissions": {
      "dashboard": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      },
      "organization": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      }
    }
  },
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "description": "With SEO Table",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 1546,
    "links": [],
    "panels": [
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 9,
          "x": 0,
          "y": 0
        },
        "id": 164,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "# ðŸ“Š Hinweis\n\n- Audio- und Video-Daten ohne Livestream-Nutzung, mit Ausnahme der Livestream-Tabelle.",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 24,
          "x": 0,
          "y": 3
        },
        "id": 160,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 1228
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const sPreTimes = context.panel.data.series.map(s => s.fields.find(f => f.name === 'pre_timestamp').values);\nconst series = context.panel.data.series.map((s) => {\n  const sData = s.fields.find((f) => f.name === 'visits_past_5_minutes').values || s.fields.find((f) => f.type === 'number').values;\n  let sTime = s.fields.find((f) => f.name === 'time').values\n  const type = s.fields.find((f) => f.name === 'type').values[0]\n  const refId = s.fields.find((f) => f.name === 'refId').values[0]\n  const glaettung = s.fields.find((f) => f.name === 'glaettung').values[0]\n  const zeitraum = s.fields.find((f) => f.name === 'zeitraum').values[0]\n  if (type === \"bar\") {\n    sTime = sTime.map(timestamp => {\n      const date = new Date(timestamp);\n      const day = date.getDate().toString().padStart(2, '0'); // Ensure two digits\n      const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based\n      return `${day}.${month}`; // Format as DD.MM\n    });\n  }\n  console.log(\"Glaettung\", glaettung)\n  console.log(\"REF ID\", refId)\n  console.log(\"Zeitraum\", zeitraum)\n  //const color = \"GÃ¤tten\" && refId === \"Heute\" ? \"#f5ee1d\" : \"#241df5\"\n  let color;\n  if (glaettung === \"GlÃ¤tten\" && zeitraum === \"Zeitraum\" && type === \"line\") {\n    color = \"#6aaa96\"; // heute // Light Petrol = #6aaa96 \n  } else if (glaettung === \"GlÃ¤tten\" && zeitraum != \"Zeitraum\" && type === \"line\") {\n    color = \"#004c6d\"; // gestern //  Dark-Petrol #004c6d\n  } else if (glaettung != \"GlÃ¤tten\" && zeitraum === \"Zeitraum\" && type === \"line\") {\n    color = \"#6aaa96\"; // heute // \n  } else if (glaettung != \"GlÃ¤tten\" && zeitraum != \"Zeitraum\" && type === \"line\") {\n    color = \"#004c6d\"; //gestern\n  }\n  else if (type === \"bar\" && zeitraum === \"Zeitraum\") {\n    color = \"#6aaa96\";\n  }\n  else if (type === \"bar\" && zeitraum != \"Zeitraum\") {\n    color = \"#004c6d\";\n  }\n  console.log(\"sTime\", sTime)\n  console.log(\"type\", type)\n  console.log(\"refId\", refId)\n  console.log(\"Sdata\", sData)\n\n  return {\n    name: refId,\n    type: type,\n    smooth: true,\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.9,\n    },\n    itemStyle: {\n      color: color,\n      width: 10\n    },\n\n    lineStyle: {\n      width: 1,\n      color: color\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: false,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nconst xAxisType = context.panel.data.series.map((s) => {\n  const type = s.fields.find((f) => f.name === 'type').values[0]\n  let xAxisType;\n  if (type == \"bar\") {\n    xAxisType = \"category\"\n  }\n  else {\n    xAxisType = \"time\"\n  }\n  return xAxisType\n})[0]\n\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    formatter: function (params) {\n      let tooltipContent = '';\n      params.forEach(function (item) {\n        const date = new Date(item.data[0]);\n        const tenMinutesInMilliseconds = 10 * 60 * 1000; // 10 minutes in milliseconds\n        const date_start = new Date(date.getTime() - tenMinutesInMilliseconds);\n        console.log(\"Date start\", date_start)\n        const preDate = new Date(sPreTimes[item.seriesIndex][item.dataIndex]);\n        const currentDate = new Date(item.data[0]); // current timestamp\n\n        // Format times\n        let preHours = preDate.getHours().toString().padStart(2, '0');\n        let preMinutes = preDate.getMinutes().toString().padStart(2, '0');\n        let currentHours = currentDate.getHours().toString().padStart(2, '0');\n        let currentMinutes = currentDate.getMinutes().toString().padStart(2, '0');\n\n        const intervalStart = preHours + ':' + preMinutes;\n        const intervalEnd = currentHours + ':' + currentMinutes;\n        const intervalString = intervalStart + '-' + intervalEnd;\n\n\n        let number = Math.floor(item.data[1]);\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n\n        if (item.componentSubType === \"bar\") {\n          tooltipContent += item.marker + item.seriesName + \" Visits: \" + formattedNumber + '<br/>';\n        }\n        else {\n          tooltipContent += item.marker + item.seriesName + \" \" + intervalString + \" Visits: \" + formattedNumber + '<br/>';\n        }\n      });\n      return tooltipContent;\n    }\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: context.panel.data.series.map((s) => {\n      const refId = s.fields.find((f) => f.name === \"refId\").values[0];\n      return refId;\n    }),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: xAxisType,\n  },\n  yAxis: {\n    type: 'value',\n    min: '0',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH lagged_data AS (\n  SELECT\n    TIMESTAMP(tmstp) as time,\n    m_visits,\n    LAG(m_visits) OVER (ORDER BY tmstp) as prev_m_visits,\n    LAG(TIMESTAMP(tmstp)) OVER (ORDER BY tmstp) as pre_timestamp\n  FROM\n    `Piano.total_visits_today_append`\n  WHERE\n    site_level2 = \"$LRA\"\n        AND page_chapter1 = \"$Redaktionen_mapped\"\n        AND page_chapter2 = \"$Unterkapitel\"\n        AND sendungs_id = \"$Sendung\"\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} --$Zeitraum \n    AND source != \"mdr_app\"\n    AND \n    CASE \"$LRA\"\n    WHEN \"ndr.de\" THEN True\n    WHEN \"eurovision.de\" THEN True\n    ELSE (\n      CASE \"$Redaktionen_mapped\"\n        WHEN \"Brisant\" THEN origin = \"sendung\"\n        WHEN \"Jump\" THEN origin = \"sendung\"\n        WHEN \"Sputnik\" THEN origin = \"sendung\"\n        WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\n        WHEN \"klassik\" THEN origin = \"klassik\"\n        WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\n        ELSE True\n      END\n    )\n    END\n    ORDER by time DESC\n    ${lim}\n    -- 09:00     --> 09:20. --- > 09:30\n\n),\nmin_time_from_base AS (\n  -- This with statement will used in order to find out which is the last valid upload(e.g. the one with valid successor)\n  SELECT MIN(pre_timestamp) min_time FROM lagged_data\n  WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10\n), \nmax_time_from_base AS (\n    -- THis with statement will be used if no gap exists\n    SELECT MAX(time) as max_time FROM lagged_data\n    WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10\n),\ncleaned_lagged_data AS (\n  SELECT * from lagged_data \n  WHERE\n  time <= (SELECT COALESCE( min_time_from_base.min_time, max_time_from_base.max_time )\n  FROM max_time_from_base, min_time_from_base)\n),\ndaily_data AS (\n  SELECT\n     TIMESTAMP(date, \"Europe/Berlin\") as time,\n    TIMESTAMP_SUB(TIMESTAMP(date,  \"Europe/Berlin\"), INTERVAL 10 MINUTE) as pre_timestamp,\n    m_visits as visits_past_5_minutes_adjusted,\n    \"${type}\" as type, \"${Zeitraumlabels:text}\" as refId\n  FROM\n    `Piano.total_visits${feverCurveDataset:raw}`\n  WHERE\n    site_level2 = \"$LRA\"\n    AND page_chapter1 = \"$Redaktionen_mapped\"\n    AND page_chapter2 = \"$Unterkapitel\"\n    AND sendungs_id = \"$Sendung\"\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}--$Zeitraum\n    ORDER BY time DESC\n),\nadjusted_lagged_data AS (\n  SELECT\n    DATE_SUB(time, INTERVAL 2 hour) as time,\n    DATE_SUB(pre_timestamp, INTERVAL 2 hour) as pre_timestamp,\n    -- Calculate time difference in minutes\n    TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) as time_diff,\n    -- Adjust visits count based on time difference\n    CASE\n      WHEN FALSE AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10 OR TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) < 0 AND \"${Glaettung:text}\" = \"GlÃ¤tten\" THEN\n        (m_visits - prev_m_visits) / TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) * 10\n      ELSE\n        m_visits - prev_m_visits\n    END as visits_past_5_minutes_adjusted,\n    \"${type}\" as type, \n    \"${Zeitraumlabels:text}\" as refId\n  FROM\n    cleaned_lagged_data\n)\nSELECT\n  TIMESTAMP_ADD(time, INTERVAL 1 SECOND) as time,\n  TIMESTAMP_ADD(pre_timestamp, INTERVAL 1 SECOND) as pre_timestamp,\n  MAX(ROUND(visits_past_5_minutes_adjusted)) as visits_past_5_minutes,\n  type,\n  refId,\n   \"${Glaettung:text}\" as glaettung,\n   \"Zeitraum\" as zeitraum\nFROM\n  ${dataset}\nWHERE\n  visits_past_5_minutes_adjusted IS NOT NULL\n  AND visits_past_5_minutes_adjusted > 0\n  AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10 OR TIMESTAMP_DIFF(time, pre_timestamp, HOUR) = 1\n  GROUP BY time, pre_timestamp, type, refId\nORDER BY\n  time ASC\n  ${lim}\n",
            "refId": "Zeitraum",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH min_time AS ( \n      SELECT\n        MIN(tmstp) as min_tmstp,\n        MAX(tmstp) as max_tmstp\n        FROM\n      (SELECT tmstp\n      from\n        `Piano.total_visits${feverCurveDataset:raw}`\n      WHERE\n        date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} --$Zeitraum\n        AND site_level2 = \"$LRA\"\n        AND page_chapter1 = \"$Redaktionen_mapped\"\n        AND page_chapter2 = \"$Unterkapitel\"\n        AND sendungs_id = \"$Sendung\"\n        AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} -- $Zeitraum\n        AND CASE\n          \"$LRA\"\n          WHEN \"ndr.de\" THEN True\n          WHEN \"eurovision.de\" THEN True\n          ELSE (\n            CASE\n              \"$Redaktionen_mapped\"\n              WHEN \"Brisant\" THEN origin = \"sendung\"\n              WHEN \"Jump\" THEN origin = \"sendung\"\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\n              WHEN \"klassik\" THEN origin = \"klassik\"\n              WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\n              ELSE True\n            END\n          )\n        END\n        ORDER BY tmstp DESC\n        ${lim}\n        )\n    )\n    , lagged_data AS (\n    SELECT\n        TIMESTAMP(tmstp) as time,\n        m_visits,\n        LAG(m_visits) OVER (ORDER BY tmstp) as prev_m_visits,\n        LAG(TIMESTAMP(tmstp)) OVER (ORDER BY tmstp) as pre_timestamp\n  FROM\n     `Piano.total_visits_today_append`\n  WHERE\n     date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} --$Vergleichszeitraum\n    AND $Zeitraumfever \n    AND source != \"mdr_app\"\n    AND site_level2 = \"$LRA\"\n        AND page_chapter1 = \"$Redaktionen_mapped\"\n        AND page_chapter2 = \"$Unterkapitel\"\n        AND sendungs_id = \"$Sendung\"\n        AND CASE\n          \"$LRA\"\n          WHEN \"ndr.de\" THEN True\n          WHEN \"eurovision.de\" THEN True\n          ELSE (\n            CASE\n              \"$Redaktionen_mapped\"\n              WHEN \"Brisant\" THEN origin = \"sendung\"\n              WHEN \"Jump\" THEN origin = \"sendung\"\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\n              WHEN \"klassik\" THEN origin = \"klassik\"\n              WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\n              ELSE True\n            END\n          )\n        END\n),\nmin_time_from_base AS (\n  -- This with statement will used in order to find out which is the last valid upload(e.g. the one with valid successor)\n  SELECT MIN(pre_timestamp) min_time FROM lagged_data\n  WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10\n), \nmax_time_from_base AS (\n    -- THis with statement will be used if no gap exists\n    SELECT MAX(time) as max_time FROM lagged_data\n    WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10\n),\ncleaned_lagged_data AS (\n  SELECT * from lagged_data \n  WHERE\n  time <= (SELECT COALESCE(min_time_from_base.min_time,max_time_from_base.max_time )\n  FROM max_time_from_base, min_time_from_base)\n),\nadjusted_lagged_data AS (\n    SELECT\n        time,\n        pre_timestamp,\n        -- Calculate time difference in minutes\n        TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) as time_diff,\n        -- Adjust visits count based on time difference\n        CASE\n            WHEN FALSE AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10 THEN\n                (m_visits - prev_m_visits) / TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) * 10\n            ELSE\n                m_visits - prev_m_visits\n        END as visits_past_5_minutes_adjusted\n    FROM\n        cleaned_lagged_data\n),\ndaily_data AS (\n  SELECT\n    TIMESTAMP(date) as time,\n    m_visits as visits_past_5_minutes_adjusted,\n    TIMESTAMP_SUB(TIMESTAMP(date), INTERVAL 10 MINUTE) as pre_timestamp\n  FROM\n    `Piano.total_visits${feverCurveDataset:raw}`\n  WHERE\n    site_level2 = \"$LRA\"\n    AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} --$Vergleichszeitraum\n    AND site_level2 = \"$LRA\"\n        AND page_chapter1 = \"$Redaktionen_mapped\"\n        AND page_chapter2 = \"$Unterkapitel\"\n        AND sendungs_id = \"$Sendung\"\n        AND CASE\n          \"$LRA\"\n          WHEN \"ndr.de\" THEN True\n          WHEN \"eurovision.de\" THEN True\n          ELSE (\n            CASE\n              \"$Redaktionen_mapped\"\n              WHEN \"Brisant\" THEN origin = \"sendung\"\n              WHEN \"Jump\" THEN origin = \"sendung\"\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\n              ELSE True\n            END\n          )\n        END\n)\nSELECT\n    DATE_SUB(DATE_ADD(TIMESTAMP_ADD(time, INTERVAL 1 SECOND), INTERVAL ${time_shift} DAY), INTERVAL 2 HOUR) as time,\n    DATE_SUB(DATE_ADD(TIMESTAMP_ADD(pre_timestamp, INTERVAL 1 SECOND), INTERVAL ${time_shift} DAY), INTERVAL 2 HOUR) as pre_timestamp,\n    MAX(visits_past_5_minutes_adjusted) as visits_past_5_minutes,\n    \"${type}\" as type,\n    \"${Vergleichszeitraumlabels:text}\" as refId,\n    \"${Glaettung:text}\" as glaettung,\n    \"Vergleichszeitraum\" as zeitraum\nFROM\n    ${dataset}\nWHERE\n    visits_past_5_minutes_adjusted IS NOT NULL\n    AND visits_past_5_minutes_adjusted > 0\n     AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10 OR TIMESTAMP_DIFF(time, pre_timestamp, HOUR) = 1\n     AND  CASE \"${Zeitraum:text}\"\n     WHEN \"Gestern\" THEN EXTRACT(date from time) = \"$bq_fever\"\n     WHEN \"Heute\" THEN EXTRACT(date from time) = \"$bq_fever\"\n      WHEN \"Heute -7d\" THEN EXTRACT(date from time) = \"$bq_fever\"\n     ELSE True\n     END\n     \nGROUP BY time, pre_timestamp, type, refId\nORDER BY\n    time ASC\n\n  ${lim}\n",
            "refId": "Vergleichszeitraum",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Verlaufsdiagramm Visits",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 11
        },
        "id": 153,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": " ",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 5,
          "x": 0,
          "y": 12
        },
        "id": 30,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Visits')), 'Visits')\r\nFROM(\r\nSELECT 'Visits' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 5,
          "x": 5,
          "y": 12
        },
        "id": 32,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Bounce Rate in %')), 'Bounce Rate in %')\r\nFROM(\r\nSELECT 'Bounce Rate in %' as Bounce\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 5,
          "x": 10,
          "y": 12
        },
        "id": 48,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Page Views / Visits')), 'Page Views / Visits')\r\nFROM(\r\nSELECT 'Page Views / Visits' as pi_visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 5,
          "x": 15,
          "y": 12
        },
        "id": 128,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Time spent/Visit in s')), 'Time spent/Visit in s')\r\nFROM(\r\nSELECT 'Time spent/Visit in s' as Audio_Videostarts\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 20,
          "y": 12
        },
        "id": 50,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Audio- & Videostarts')), 'Audio- & Videostarts')\r\nFROM(\r\nSELECT 'Audio- & Videostarts' as Audio_Videostarts\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 3,
          "x": 0,
          "y": 14
        },
        "id": 14,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- cache version \r\n\r\nSELECT \r\n  SUM(COALESCE(m_visits,0)) as summe\r\nFROM \r\n  `Piano.total_visits${dataset_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "${Zeitraum:text}",
                "summe": "${Zeitraumlabels:text} ${Uhrzeit:text}",
                "visits": "${Zeitraum:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Vergleichszeitraumlabels:text} ${Uhrzeit:text}"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 3,
          "y": 14
        },
        "id": 18,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH adjusted_lagged_data AS (\r\nSELECT\r\n        TIMESTAMP(tmstp) as time,\r\n        FIRST_VALUE(m_visits) OVER(ORDER by tmstp DESC) as summe\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`  \r\n  WHERE TRUE\r\n     AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    AND site_level2 = \"$LRA\"\r\n        AND page_chapter1 = \"$Redaktionen_mapped\"\r\n        AND page_chapter2 = \"$Unterkapitel\"\r\n        AND sendungs_id = \"$Sendung\"\r\n        AND CASE\r\n          \"$LRA\"\r\n          WHEN \"ndr.de\" THEN True\r\n          WHEN \"eurovision.de\" THEN True\r\n          ELSE (\r\n            CASE\r\n              \"$Redaktionen_mapped\"\r\n              WHEN \"Brisant\" THEN origin = \"sendung\"\r\n              WHEN \"Jump\" THEN origin = \"sendung\"\r\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\r\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\r\n              WHEN \"klassik\" THEN origin = \"klassik\"\r\n              WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\r\n              ELSE True\r\n            END\r\n          )\r\n        END\r\n        ORDER BY tmstp DESC\r\n        LIMIT 1\r\n),\r\ndaily_data AS (\r\n  SELECT \r\n  SUM(COALESCE(m_visits,0)) as summe\r\nFROM \r\n  `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} )\r\nSELECT * FROM ${dataset_kpi}\r\n     \r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 3,
          "x": 5,
          "y": 14
        },
        "id": 22,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- cache version \r\n\r\nSELECT \r\n  SUM(COALESCE(m_bounce_rate*m_visits,0))/SUM(COALESCE(m_visits,0))*100 as summe,\r\nFROM \r\n  `Piano.total_visits${dataset_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "bounce": "${Zeitraum:text}",
                "bounce_rate": "${Zeitraum:text}",
                "f0_": "${Zeitraum:text}",
                "summe": "${Zeitraumlabels:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 8,
          "y": 14
        },
        "id": 24,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH adjusted_lagged_data AS (\r\nSELECT\r\n        TIMESTAMP(tmstp) as time,\r\n        -- SUM(COALESCE(m_bounce_rate*m_visits,0))/SUM(COALESCE(m_visits,0))*100 as summe\r\n        COALESCE(FIRST_VALUE(m_bounce_rate) OVER(ORDER by tmstp DESC) *m_visits,0)/COALESCE(FIRST_VALUE(m_visits) OVER(ORDER by tmstp DESC),0)*100 as summe\r\n        --FIRST_VALUE(m_bounce_rate) OVER(ORDER by tmstp DESC) as summe\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`  \r\n  WHERE TRUE\r\n     AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    AND site_level2 = \"$LRA\"\r\n        AND page_chapter1 = \"$Redaktionen_mapped\"\r\n        AND page_chapter2 = \"$Unterkapitel\"\r\n        AND sendungs_id = \"$Sendung\"\r\n        AND CASE\r\n          \"$LRA\"\r\n          WHEN \"ndr.de\" THEN True\r\n          WHEN \"eurovision.de\" THEN True\r\n          ELSE (\r\n            CASE\r\n              \"$Redaktionen_mapped\"\r\n              WHEN \"Brisant\" THEN origin = \"sendung\"\r\n              WHEN \"Jump\" THEN origin = \"sendung\"\r\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\r\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\r\n              WHEN \"klassik\" THEN origin = \"klassik\"\r\n              WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\r\n              ELSE True\r\n            END\r\n          )\r\n        END\r\n        ORDER BY tmstp DESC\r\n        LIMIT 1\r\n),\r\ndaily_data AS (\r\n  SELECT \r\n  SUM(COALESCE(m_bounce_rate*m_visits,0))/SUM(COALESCE(m_visits,0))*100 as summe\r\nFROM \r\n  `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mappped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} )\r\nSELECT * FROM ${dataset_kpi}\r\n     \r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "summe": false,
                "time": false
              },
              "indexByName": {},
              "renameByName": {
                "bounce": "${Vergleichszeitraum:text}",
                "bounce_rate": "${Vergleichszeitraumlabels:text} ${Uhrzeit:text}",
                "summe": "${Vergleichszeitraumlabels:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 2,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 3,
          "x": 10,
          "y": 14
        },
        "id": 36,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- cache version \r\n\r\nSELECT \r\n  SUM(COALESCE(m_page_loads,0))/SUM(COALESCE(m_visits,1)) as PI_per_visit,\r\nFROM \r\n  `Piano.total_visits${dataset_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "PI_per_visit": "${Zeitraumlabels:text} ${Uhrzeit:text}",
                "impression_durchschnitt": "${Zeitraum:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 2,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 13,
          "y": 14
        },
        "id": 46,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH adjusted_lagged_data AS (\r\nSELECT\r\n        TIMESTAMP(tmstp) as time,\r\n       COALESCE(FIRST_VALUE(m_page_loads)OVER(ORDER BY tmstp desc),0)/COALESCE(FIRST_VALUE(m_visits) OVER (ORDER BY tmstp DESC),1) as PI_per_visit\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`  \r\n  WHERE TRUE\r\n     AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    AND site_level2 = \"$LRA\"\r\n        AND page_chapter1 = \"$Redaktionen_mapped\"\r\n        AND page_chapter2 = \"$Unterkapitel\"\r\n        AND sendungs_id = \"$Sendung\"\r\n        AND CASE\r\n          \"$LRA\"\r\n          WHEN \"ndr.de\" THEN True\r\n          WHEN \"eurovision.de\" THEN True\r\n          ELSE (\r\n            CASE\r\n              \"$Redaktionen_mapped\"\r\n              WHEN \"Brisant\" THEN origin = \"sendung\"\r\n              WHEN \"Jump\" THEN origin = \"sendung\"\r\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\r\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\r\n              WHEN \"klassik\" THEN origin = \"klassik\"\r\n              WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\r\n              ELSE True\r\n            END\r\n          )\r\n        END\r\n        ORDER BY tmstp DESC\r\n        LIMIT 1\r\n),\r\ndaily_data AS (\r\n  SELECT \r\n    SUM(COALESCE(m_page_loads,0))/SUM(COALESCE(m_visits,1)) as PI_per_visit,\r\nFROM \r\n  `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} )\r\nSELECT * FROM ${dataset_kpi}\r\n     \r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "PI_per_visit": "${Vergleichszeitraumlabels:text} ${Uhrzeit:text}",
                "impression_durchschnitt": "${Vergleichszeitraum:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 3,
          "x": 15,
          "y": 14
        },
        "id": 134,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  SUM(m_visits * m_time_spent_per_visits/1000) / SUM(m_visits) AS time_spent\r\nFROM \r\n  `Piano.total_visits${dataset_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "time_spent": "${Zeitraumlabels:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 18,
          "y": 14
        },
        "id": 132,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "    WITH adjusted_lagged_data AS(SELECT\r\n        TIMESTAMP(tmstp) as time,\r\n         (m_visits * m_time_spent_per_visits/1000) / (m_visits) AS time_spent\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}` \r\n  WHERE TRUE\r\n     AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    AND site_level2 = \"$LRA\"\r\n        AND page_chapter1 = \"$Redaktionen_mapped\"\r\n        AND page_chapter2 = \"$Unterkapitel\"\r\n        AND sendungs_id = \"$Sendung\"\r\n        AND CASE\r\n          \"$LRA\"\r\n          WHEN \"ndr.de\" THEN True\r\n          WHEN \"eurovision.de\" THEN True\r\n          ELSE (\r\n            CASE\r\n              \"$Redaktionen_mapped\"\r\n              WHEN \"Brisant\" THEN origin = \"sendung\"\r\n              WHEN \"Jump\" THEN origin = \"sendung\"\r\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\r\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\r\n              WHEN \"klassik\" THEN origin = \"klassik\"\r\n              WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\r\n              ELSE True\r\n            END\r\n          )\r\n        END\r\n        ORDER BY tmstp DESC\r\n        LIMIT 1\r\n  ),\r\ndaily_data AS (\r\n SELECT \r\n  SUM(m_visits * m_time_spent_per_visits/1000) / SUM(m_visits) AS time_spent\r\nFROM \r\n  `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n)\r\nSELECT * FROM ${dataset_kpi}",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "time_spent": "${Vergleichszeitraumlabels:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 2,
            "mappings": [],
            "min": 2,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 2,
          "x": 20,
          "y": 14
        },
        "id": 38,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\nAND $sendungs_id_tags_filter\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN ('live', 'Live')",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "summe": "${Zeitraumlabels:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 2,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 22,
          "y": 14
        },
        "id": 42,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\nAND $sendungs_id_tags_filter\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN ('live', 'Live')",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "summe": "${Vergleichszeitraumlabels:text} "
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 3,
          "y": 17
        },
        "id": 20,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\nWITH adjusted_lagged_data AS (\r\nSELECT\r\n        TIMESTAMP(tmstp) as time,\r\n        FIRST_VALUE(m_visits) OVER(ORDER by tmstp DESC) as summe\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`  \r\n  WHERE TRUE\r\n     AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    AND site_level2 = \"$LRA\"\r\n        AND page_chapter1 = \"$Redaktionen_mapped\"\r\n        AND page_chapter2 = \"$Unterkapitel\"\r\n        AND sendungs_id = \"$Sendung\"\r\n        AND CASE\r\n          \"$LRA\"\r\n          WHEN \"ndr.de\" THEN True\r\n          WHEN \"eurovision.de\" THEN True\r\n          ELSE (\r\n            CASE\r\n              \"$Redaktionen_mapped\"\r\n              WHEN \"Brisant\" THEN origin = \"sendung\"\r\n              WHEN \"Jump\" THEN origin = \"sendung\"\r\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\r\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\r\n              WHEN \"klassik\" THEN origin = \"klassik\"\r\n              WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\r\n              ELSE True\r\n            END\r\n          )\r\n        END\r\n        ORDER BY tmstp DESC\r\n        LIMIT 1\r\n),\r\ndaily_data AS (\r\n  SELECT \r\n  SUM(COALESCE(m_visits,0)) as summe\r\nFROM \r\n  `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} )\r\nSELECT summe as past_sum FROM ${dataset_kpi}\r\n)\r\n, current_value AS (\r\nSELECT \r\n  SUM(COALESCE(m_visits,0)) as current_sum\r\nFROM \r\n  `Piano.total_visits${dataset_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  )\r\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 8,
          "y": 17
        },
        "id": 26,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\nWITH adjusted_lagged_data AS (\r\nSELECT\r\n        TIMESTAMP(tmstp) as time,\r\n        -- SUM(COALESCE(m_bounce_rate*m_visits,0))/SUM(COALESCE(m_visits,0))*100 as summe\r\n        COALESCE(FIRST_VALUE(m_bounce_rate) OVER(ORDER by tmstp DESC) *m_visits,0)/COALESCE(FIRST_VALUE(m_visits) OVER(ORDER by tmstp DESC),0)*100 as summe\r\n        --FIRST_VALUE(m_bounce_rate) OVER(ORDER by tmstp DESC) as past\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`  \r\n  WHERE TRUE\r\n     AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    AND site_level2 = \"$LRA\"\r\n        AND page_chapter1 = \"$Redaktionen_mapped\"\r\n        AND page_chapter2 = \"$Unterkapitel\"\r\n        AND sendungs_id = \"$Sendung\"\r\n        AND CASE\r\n          \"$LRA\"\r\n          WHEN \"ndr.de\" THEN True\r\n          WHEN \"eurovision.de\" THEN True\r\n          ELSE (\r\n            CASE\r\n              \"$Redaktionen_mapped\"\r\n              WHEN \"Brisant\" THEN origin = \"sendung\"\r\n              WHEN \"Jump\" THEN origin = \"sendung\"\r\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\r\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\r\n              WHEN \"klassik\" THEN origin = \"klassik\"\r\n              WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\r\n              ELSE True\r\n            END\r\n          )\r\n        END\r\n        ORDER BY tmstp DESC\r\n        LIMIT 1\r\n),\r\ndaily_data AS (\r\n  SELECT \r\n  SUM(COALESCE(m_bounce_rate*m_visits,0))/SUM(COALESCE(m_visits,0))*100 as summe \r\nFROM \r\n  `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote})\r\nSELECT summe as past_sum FROM ${dataset_kpi}),\r\ncurrent_value AS (\r\nSELECT \r\n  SUM(COALESCE(m_bounce_rate*m_visits,0))/SUM(COALESCE(m_visits,0))*100 as current_sum,\r\nFROM \r\n  `Piano.total_visits${dataset_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  )\r\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 13,
          "y": 17
        },
        "id": 44,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\nWITH adjusted_lagged_data AS (\r\nSELECT\r\n        TIMESTAMP(tmstp) as time,\r\n       COALESCE(FIRST_VALUE(m_page_loads)OVER(ORDER BY tmstp desc),0)/COALESCE(FIRST_VALUE(m_visits) OVER (ORDER BY tmstp DESC),1) as PI_per_visit\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`  \r\n  WHERE TRUE\r\n     AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    AND site_level2 = \"$LRA\"\r\n        AND page_chapter1 = \"$Redaktionen_mapped\"\r\n        AND page_chapter2 = \"$Unterkapitel\"\r\n        AND sendungs_id = \"$Sendung\"\r\n        AND CASE\r\n          \"$LRA\"\r\n          WHEN \"ndr.de\" THEN True\r\n          WHEN \"eurovision.de\" THEN True\r\n          ELSE (\r\n            CASE\r\n              \"$Redaktionen_mapped\"\r\n              WHEN \"Brisant\" THEN origin = \"sendung\"\r\n              WHEN \"Jump\" THEN origin = \"sendung\"\r\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\r\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\r\n              WHEN \"klassik\" THEN origin = \"klassik\"\r\n              WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\r\n              ELSE True\r\n            END\r\n          )\r\n        END\r\n        ORDER BY tmstp DESC\r\n        LIMIT 1\r\n),\r\ndaily_data AS (\r\n  SELECT \r\n    SUM(COALESCE(m_page_loads,0))/SUM(COALESCE(m_visits,1)) as PI_per_visit,\r\nFROM \r\n  `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} )\r\nSELECT PI_per_visit as past_sum FROM ${dataset_kpi} )\r\n     \r\n, current_value AS (\r\nSELECT \r\n  SUM(COALESCE(m_page_loads,0))/SUM(COALESCE(m_visits,1)) as current_sum,\r\nFROM \r\n  `Piano.total_visits${dataset_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  )\r\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 18,
          "y": 17
        },
        "id": 130,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\n    WITH adjusted_lagged_data AS(SELECT\r\n        TIMESTAMP(tmstp) as time,\r\n         (m_visits * m_time_spent_per_visits/1000) / (m_visits) AS time_spent\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}` \r\n  WHERE TRUE\r\n     AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    AND site_level2 = \"$LRA\"\r\n        AND page_chapter1 = \"$Redaktionen_mapped\"\r\n        AND page_chapter2 = \"$Unterkapitel\"\r\n        AND sendungs_id = \"$Sendung\"\r\n        AND CASE\r\n          \"$LRA\"\r\n          WHEN \"ndr.de\" THEN True\r\n          WHEN \"eurovision.de\" THEN True\r\n          ELSE (\r\n            CASE\r\n              \"$Redaktionen_mapped\"\r\n              WHEN \"Brisant\" THEN origin = \"sendung\"\r\n              WHEN \"Jump\" THEN origin = \"sendung\"\r\n              WHEN \"Sputnik\" THEN origin = \"sendung\"\r\n              WHEN \"Alle Kapitel 1\" THEN origin = \"sendung\"\r\n              WHEN \"klassik\" THEN origin = \"klassik\"\r\n              WHEN \"sorbisches-programm\" THEN origin = \"serbski\"\r\n              ELSE True\r\n            END\r\n          )\r\n        END\r\n        ORDER BY tmstp DESC\r\n        LIMIT 1\r\n  ),\r\ndaily_data AS (\r\n SELECT \r\n  SUM(m_visits * m_time_spent_per_visits/1000) / SUM(m_visits) AS time_spent\r\nFROM \r\n  `Piano.total_visits${dataset_vergleichs_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n)\r\nSELECT time_spent as past_sum FROM ${dataset_kpi}\r\n), current_value AS (\r\nSELECT\r\n  SUM(m_visits * m_time_spent_per_visits/1000) / SUM(m_visits) AS current_sum\r\nFROM \r\n  `Piano.total_visits${dataset_zeitraum:raw}`\r\nWHERE \r\nsite_level2 = \"$LRA\"\r\nAND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2 = \"$Unterkapitel\"\r\nAND sendungs_id = \"$Sendung\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  )\r\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 22,
          "y": 17
        },
        "id": 40,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\nSELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as past_sum\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\nAND $sendungs_id_tags_filter\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}), \r\n\r\ncurrent_value AS (\r\nSELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as current_sum\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\nAND $sendungs_id_tags_filter\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n  )\r\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 20
        },
        "id": 139,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": " ",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 21
        },
        "id": 56,
        "panels": [],
        "title": "Kapitel Visits",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 9,
          "w": 24,
          "x": 0,
          "y": 22
        },
        "id": 52,
        "options": {
          "displayMode": "gradient",
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": false
          },
          "maxVizHeight": 300,
          "minVizHeight": 10,
          "minVizWidth": 0,
          "namePlacement": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "showUnfilled": false,
          "sizing": "auto",
          "valueMode": "color"
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "\r\nWITH nachrichten AS (\r\n  SELECT \r\n  CASE page_chapter2 WHEN \"thueringen\" THEN \"ThÃ¼ringen\" WHEN \"sachsen\" THEN \"Sachsen\" WHEN \"sachsen-anhalt\" THEN \"Sachsen-Anhalt\" WHEN \"deutschland\" THEN \"Deutschland\" WHEN \"welt\" THEN \"Welt\" ELSE page_chapter2 END as Chapter,\r\n  SUM(COALESCE(m_visits,0)) as summe\r\n  FROM   `Piano.total_visits${dataset_zeitraum:raw}`\r\n  WHERE page_chapter1 = \"nachrichten\" AND page_chapter2 IN (\"sachsen\",\"sachsen-anhalt\",\"thueringen\",\"deutschland\",\"welt\", \"hamburg\", \"info\", \"mecklenburg-vorpommern\", \"niedersachsen\", \"schleswig-holstein\") AND site_level2 = \"$LRA\" AND sendungs_id = \"$Sendung\" AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  GROUP BY page_chapter2\r\n), ratgeber AS(\r\n  SELECT \r\n  \"Ratgeber\" as Chapter,\r\n  SUM(COALESCE(m_visits,0)) as summe\r\n  FROM   `Piano.total_visits${dataset_zeitraum:raw}`\r\n  WHERE page_chapter1 = \"ratgeber\" AND site_level2 = \"$LRA\" AND page_chapter2 = \"Alle Kapitel 2\" AND sendungs_id = \"$Sendung\" AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  GROUP BY Chapter\r\n--), app_aktuell AS (\r\n--  SELECT\r\n--  \"App Aktuell\" as Chapter,\r\n--  SUM(COALESCE(m_visits,0)) as summe\r\n--  FROM Piano.total_visits\r\n--  WHERE page_chapter1 = \"nachrichten\" AND page_chapter2 IN (\"app_aktuell\",\"app-aktuell\") AND site_level2 = \"$LRA\" AND sendungs_id = \"$Sendung\" AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n), ndr_kapitel as (\r\n  SELECT CASE page_chapter1 \r\n    WHEN \"nachrichten\" THEN \"Nachrichten\" \r\n    WHEN \"kultur\" THEN \"Kultur\" \r\n    WHEN \"sport\" THEN \"Sport\" \r\n    WHEN \"geschichte\" THEN \"Geschichte\"\r\n    WHEN \"ratgeber\" THEN \"Ratgeber\"\r\n    END as Chapter,\r\n  SUM(COALESCE(m_visits,0)) as summe\r\n  FROM  `Piano.total_visits${dataset_zeitraum:raw}`\r\n  WHERE   site_level2 = \"$LRA\" AND page_chapter1 IN (\"nachrichten\",\"kultur\",\"sport\", \"geschichte\", \"ratgeber\") AND page_chapter2 = \"$Unterkapitel\" AND sendungs_id = \"$Sendung\" AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  GROUP BY Chapter ), mdr as(\r\n SELECT * FROM(\r\nSELECT\r\nChapter,\r\nsumme FROM nachrichten\r\n  WHERE Chapter IN (\"ThÃ¼ringen\", \"Sachsen\" ,\"Sachsen-Anhalt\",\"Deutschland\", \"Welt\" ) \r\nUNION ALL\r\nSELECT\r\nChapter,\r\nsumme FROM ratgeber\r\n--UNION ALL \r\n--SELECT\r\n--Chapter,\r\n--summe FROM app_aktuell\r\n)), mdr_kapitel AS (\r\n  SELECT CASE \r\n    WHEN page_chapter1 = \"sport\" THEN \"Sport\" \r\n    WHEN page_chapter1 = \"kultur\" THEN \"Kultur\" \r\n    WHEN page_chapter1 = \"wissen\" THEN \"Wissen\" \r\n    ELSE page_chapter1\r\n    END as Chapter,\r\n  SUM(COALESCE(m_visits,0)) as summe\r\n  FROM  `Piano.total_visits${dataset_zeitraum:raw}`\r\n  WHERE   site_level2 = \"$LRA\" AND page_chapter1 IN (\"sport\",\"wissen\",\"kultur\") AND page_chapter2 = \"$Unterkapitel\" AND sendungs_id = \"$Sendung\" AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  GROUP BY Chapter\r\n), mdr_not_nachrichten AS (\r\n  SELECT * FROM mdr_kapitel\r\n  UNION ALL\r\n  SELECT * FROM nachrichten\r\n  WHERE Chapter IN (\"ThÃ¼ringen\", \"Sachsen\" ,\"Sachsen-Anhalt\",\"Deutschland\", \"Welt\" )\r\n)\r\nSELECT \r\n    Chapter, \r\n    summe \r\nFROM \r\n    (SELECT \r\n         'ndr_kapitel' as source_table, \r\n         Chapter, \r\n         summe \r\n     FROM ndr_kapitel\r\n     UNION ALL\r\n     SELECT \r\n         'mdr' as source_table, \r\n         Chapter, \r\n         summe \r\n      FROM mdr\r\n      UNION ALL\r\n     SELECT \r\n         'nachrichten' as source_table, \r\n         Chapter, \r\n         summe \r\n     FROM nachrichten\r\n     UNION ALL\r\n     SELECT\r\n     'mdr_not_nachrichten' as source_table,\r\n     Chapter,\r\n     summe\r\n     FROM mdr_not_nachrichten) as unified_table\r\nWHERE \r\n    source_table = CASE WHEN '$LRA' = 'ndr.de' AND \"$Redaktionen_mapped\" = \"nachrichten\" THEN 'nachrichten'\r\n                        WHEN '$LRA' = 'ndr.de' AND \"$Redaktionen_mapped\"!= \"nachrichten\" THEN 'ndr_kapitel'\r\n                        WHEN '$LRA' = 'mdr.de' AND \"$Redaktionen_mapped\" = \"nachrichten\" THEN 'mdr'\r\n                        WHEN '$LRA' = 'mdr.de' AND \"$Redaktionen_mapped\" != \"nachrichten\" THEN 'mdr_not_nachrichten'\r\n                    END\r\nORDER BY \r\n    summe DESC",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Kapitel Visits | $Zeitraumlabels",
        "type": "bargauge"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 31
        },
        "id": 145,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": " ",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 32
        },
        "id": 60,
        "panels": [],
        "title": "Top Artikel",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "bounce_rate * 100"
              },
              "properties": [
                {
                  "id": "custom.cellOptions",
                  "value": {
                    "mode": "gradient",
                    "type": "gauge"
                  }
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00b0de",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "displayName",
                  "value": "Bounce Rate"
                },
                {
                  "id": "decimals",
                  "value": 1
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "m_suchmaschinen_anteil_visits * 100"
              },
              "properties": [
                {
                  "id": "custom.cellOptions",
                  "value": {
                    "mode": "gradient",
                    "type": "gauge"
                  }
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00b0de",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "displayName",
                  "value": "Suchmaschinenanteil"
                },
                {
                  "id": "custom.width",
                  "value": 180
                },
                {
                  "id": "decimals",
                  "value": 1
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "m_homepage_anteil_visits * 100"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "custom.cellOptions",
                  "value": {
                    "mode": "gradient",
                    "type": "gauge"
                  }
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00b0de",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Homepageanteil"
                },
                {
                  "id": "decimals",
                  "value": 1
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "page_views"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "Page Views"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "content_id_sophora"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Sophora ID"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "content_titel"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Artikel"
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "targetBlank": true,
                      "title": "${__data.fields.url}",
                      "url": "${__data.fields.url}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "visits"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Visits"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "custom.width",
                  "value": 90
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Datum"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "time: DD.MM.YY | HH:mm \\U\\h\\r"
                },
                {
                  "id": "custom.width",
                  "value": 144
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Artikel"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 517
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora ID"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 205
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Bounce Rate"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 115
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Homepageanteil"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 141
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "url"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Page Views"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 109
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 14,
          "w": 24,
          "x": 0,
          "y": 33
        },
        "id": 62,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Visits"
            }
          ]
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\npublishing_date, \r\ncontent_titel,\r\nsum(m_visits) as visits,\r\nsum(m_page_loads) as page_views,\r\nCASE WHEN SUM(IFNULL(m_visits,0))>0 THEN SUM(m_bounce_rate*m_visits)/SUM(IFNULL(m_visits,0)) ELSE -1 END AS bounce_rate,\r\nCASE WHEN SUM(IFNULL(m_visits,0))>0 THEN SUM(m_suchmaschinen_anteil_visits*m_visits)/SUM(IFNULL(m_visits,0)) ELSE -1 END AS m_suchmaschinen_anteil_visits,\r\nCASE WHEN SUM(IFNULL(m_visits,0))>0 THEN SUM(m_homepage_anteil_visits*m_visits)/SUM(IFNULL(m_visits,0)) ELSE -1 END AS m_homepage_anteil_visits,\r\nCASE \r\n  WHEN \"$Redaktionen_mapped\" = \"Alle Kapitel 1\"  THEN page_chapter1 \r\n  WHEN \"$Redaktionen_mapped\" = \"nachrichten\"  THEN page_chapter2 \r\nEND AS Kapitel,\r\ncontent_id_sophora, url\r\nFROM\r\n(\r\nSELECT\r\nFIRST_VALUE(publishing_date) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as publishing_date, \r\nFIRST_VALUE(content_id_sophora) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as content_id_sophora, \r\npage_chapter2, page_chapter1,\r\nm_visits,\r\nm_page_loads,\r\nm_bounce_rate,\r\nm_suchmaschinen_anteil_visits,\r\nm_homepage_anteil_visits, \r\nFIRST_VALUE(url) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as url, \r\nFIRST_VALUE(content_titel) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as content_titel, \r\nFROM \r\n  ${articles_table:raw}\r\nWHERE site_level2 = \"$LRA\" AND\r\n\"$Redaktionen_mapped\" IN UNNEST(page_chapter1_tags) \r\nAND \"$Unterkapitel\" IN UNNEST(page_chapter2_tags)\r\nAND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND content_id_sophora NOT LIKE '%index%'\r\nAND content_id_sophora NOT LIKE '%N/A%'\r\nAND content_id_sophora NOT LIKE '%verteilseite%'\r\nAND content_id_sophora NOT LIKE '%nachrichtenfeed%'\r\nAND page_chapter1 NOT LIKE \"CONT\"\r\nAND objekt_typ NOT LIKE 'indexPage'\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}) \r\nGROUP BY content_id_sophora, content_titel, publishing_date, page_chapter2, page_chapter1, url, publishing_date ORDER BY 4 DESC \r\n\r\nLIMIT 100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top 100 Web Artikel",
        "transformations": [
          {
            "id": "calculateField",
            "options": {
              "binary": {
                "left": "bounce_rate",
                "operator": "*",
                "reducer": "sum",
                "right": "100"
              },
              "mode": "binary",
              "reduce": {
                "reducer": "sum"
              }
            }
          },
          {
            "id": "calculateField",
            "options": {
              "binary": {
                "left": "m_suchmaschinen_anteil_visits",
                "operator": "*",
                "reducer": "sum",
                "right": "100"
              },
              "mode": "binary",
              "reduce": {
                "reducer": "sum"
              }
            }
          },
          {
            "id": "calculateField",
            "options": {
              "binary": {
                "left": "m_homepage_anteil_visits",
                "operator": "*",
                "reducer": "sum",
                "right": "100"
              },
              "mode": "binary",
              "reduce": {
                "reducer": "sum"
              }
            }
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "bounce_rate": true,
                "bounce_rate * 100": false,
                "m_homepage_anteil_visits": true,
                "m_homepage_anteil_visits * 100": true,
                "m_suchmaschinen_anteil_visits": true,
                "m_suchmaschinen_anteil_visits * 100": false,
                "url": false
              },
              "indexByName": {
                "Kapitel": 11,
                "bounce_rate": 4,
                "bounce_rate * 100": 7,
                "content_id_sophora": 10,
                "content_titel": 1,
                "m_homepage_anteil_visits": 6,
                "m_homepage_anteil_visits * 100": 9,
                "m_suchmaschinen_anteil_visits": 5,
                "m_suchmaschinen_anteil_visits * 100": 8,
                "page_views": 3,
                "publishing_date": 0,
                "url": 12,
                "visits": 2
              },
              "renameByName": {
                "f0_": "Artikel",
                "f1_": "Visits",
                "f2_": "Page Impressions",
                "f3_": "Bounce rate",
                "f4_": "Suchmachinenanteil",
                "f5_": "Homepageanteil",
                "publishing_date": "Datum",
                "uuid": "Sophora ID"
              }
            }
          },
          {
            "id": "convertFieldType",
            "options": {
              "conversions": [
                {
                  "destinationType": "string",
                  "targetField": "m_suchmaschinen_anteil_visits * 100"
                },
                {
                  "destinationType": "string",
                  "targetField": "m_homepage_anteil_visits * 100"
                },
                {
                  "destinationType": "string",
                  "targetField": "bounce_rate * 100"
                },
                {
                  "destinationType": "time",
                  "targetField": "publishing_date"
                }
              ],
              "fields": {}
            }
          }
        ],
        "type": "table"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 47
        },
        "id": 140,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": " ",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 48
        },
        "id": 70,
        "panels": [],
        "title": "Top Audios & Videos ",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 2,
          "x": 2,
          "y": 49
        },
        "id": 104,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 30
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Audio')), '')\r\nFROM(\r\nSELECT 'Audio' as Audio\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 9,
          "x": 4,
          "y": 49
        },
        "id": 78,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Wiedergaben')), 'Wiedergaben')\r\nFROM(\r\nSELECT 'Wiedergaben' as Wiedergaben\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 9,
          "x": 13,
          "y": 49
        },
        "id": 76,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Wiedergaberate')), 'Wiedergaberate')\r\nFROM(\r\nSELECT 'Wiedergaberate' as Wiedergaberate\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 2,
          "y": 51
        },
        "id": 72,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 30
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Video')), 'Video')\r\nFROM(\r\nSELECT 'Video' as Video\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 51
        },
        "id": 80,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\nAND $sendungs_id_tags_filter\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Vergleichszeitraumlabels:text}"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 7,
          "y": 51
        },
        "id": 94,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND \r\nAND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN ('live', 'Live')",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "displayName": "y",
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 10,
          "y": 51
        },
        "id": 84,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH current_value AS (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as current_sum\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n), past_value AS (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as past_sum\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} \r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n)\r\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 2,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 13,
          "y": 51
        },
        "id": 98,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  SUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\nAND bi_av_broadcasting_type NOT LIKE '%Live%'\r\nAND bi_av_broadcasting_type NOT LIKE '%live%'\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN (\"live\", \"Live\")",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 2,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Vergleichszeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 16,
          "y": 51
        },
        "id": 100,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  SUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) as summe\r\n  --AVG(m_av_average_playback_completion_rate) as summe\r\n  -- AVG(m_av_playbacks)/AVG(av_content_duration) as summe\r\n  --SUM(COALESCE(m_av_playbacks,0))/SUM(COALESCE(av_content_duration,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} \r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\nAND bi_av_broadcasting_type NOT LIKE '%Live%'\r\nAND bi_av_broadcasting_type NOT LIKE '%live%'\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 19,
          "y": 51
        },
        "id": 90,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH current_value AS (\r\n  SELECT\r\n  SUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) as current_sum\r\n  -- AVG(m_av_average_playback_completion_rate) as current_sum\r\n   -- AVG(m_av_playbacks)/AVG(av_content_duration) as summe\r\n  --SUM(COALESCE(m_av_playbacks,0))/SUM(COALESCE(av_content_duration,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\n), past_value AS (\r\n  SELECT\r\n  SUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) as past_sum\r\n  --AVG(m_av_average_playback_completion_rate) as past_sum\r\n   -- AVG(m_av_playbacks)/AVG(av_content_duration) as summe\r\n  --SUM(COALESCE(m_av_playbacks,0))/SUM(COALESCE(av_content_duration,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} \r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\nAND bi_av_broadcasting_type NOT LIKE '%Live%'\r\nAND bi_av_broadcasting_type NOT LIKE '%live%'\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\n)\r\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#f5f5f5",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 2,
          "y": 54
        },
        "id": 74,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 30
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Audio')), 'Audio')\r\nFROM(\r\nSELECT 'Audio' as Audio\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 54
        },
        "id": 92,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN (\"live\", \"Live\")",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Vergleichszeitraumlabels:text}"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 7,
          "y": 54
        },
        "id": 137,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN (\"live\", \"Live\")",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 10,
          "y": 54
        },
        "id": 96,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH current_value AS (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as current_sum\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN (\"live\", \"Live\")\r\n), past_value AS (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as past_sum\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} \r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN (\"live\", \"Live\")\r\n)\r\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 2,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 13,
          "y": 54
        },
        "id": 86,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  --AVG(m_av_average_playback_completion_rate) as summe\r\n  SUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN (\"live\", \"Live\")",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 2,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Vergleichszeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 16,
          "y": 54
        },
        "id": 88,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  SUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) as summe\r\n  --AVG(m_av_average_playback_completion_rate) as summe\r\n  -- AVG(m_av_playbacks)/AVG(av_content_duration) as summe\r\n  --SUM(COALESCE(m_av_playbacks,0))/SUM(COALESCE(av_content_duration,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} \r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\nAND bi_av_broadcasting_type NOT LIKE '%Live%'\r\nAND bi_av_broadcasting_type NOT LIKE '%live%'\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN (\"live\", \"Live\")",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 19,
          "y": 54
        },
        "id": 102,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH current_value AS (\r\n  SELECT\r\n  SUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) as current_sum\r\n  -- AVG(m_av_average_playback_completion_rate) as current_sum\r\n   -- AVG(m_av_playbacks)/AVG(av_content_duration) as summe\r\n  --SUM(COALESCE(m_av_playbacks,0))/SUM(COALESCE(av_content_duration,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN (\"live\", \"Live\")\r\n), past_value AS (\r\n  SELECT\r\n  SUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) as past_sum\r\n  --AVG(m_av_average_playback_completion_rate) as past_sum\r\n   -- AVG(m_av_playbacks)/AVG(av_content_duration) as summe\r\n  --SUM(COALESCE(m_av_playbacks,0))/SUM(COALESCE(av_content_duration,0)) as summe\r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE \r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND AND\r\n\"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) AND\r\n\"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} \r\nAND (av_content_type = \"Audio\" OR av_content_type = \"audio\")\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nAND bi_av_broadcasting_type NOT IN (\"live\", \"Live\")\r\n)\r\nSELECT ((current_sum-past_sum)/past_sum)*100 FROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 57
        },
        "id": 141,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": " ",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "bi_av_publication_date"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Publiziert"
                },
                {
                  "id": "custom.align",
                  "value": "left"
                },
                {
                  "id": "unit",
                  "value": "time: DD.MM.YYYY | HH:mm \\U\\h\\r"
                },
                {
                  "id": "custom.width",
                  "value": 180
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "bi_av_content"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Titel"
                },
                {
                  "id": "custom.align",
                  "value": "left"
                },
                {
                  "id": "custom.width",
                  "value": 300
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "targetBlank": true,
                      "title": "${__data.fields.url}",
                      "url": "${__data.fields.url}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "wiedergabe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Wiedergaben"
                },
                {
                  "id": "custom.align",
                  "value": "right"
                },
                {
                  "id": "custom.width",
                  "value": 100
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "av_content_duration"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "MedienlÃ¤nge"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width",
                  "value": 140
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "av_content_type"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Typ"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width",
                  "value": 85
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "device_type"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "GerÃ¤tetyp"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width",
                  "value": 150
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "wiedergaberate * 100"
              },
              "properties": [
                {
                  "id": "custom.cellOptions",
                  "value": {
                    "mode": "gradient",
                    "type": "gauge"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Wiedergabe"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00b0de",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "bi_av_broadcasting_type"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 561
                },
                {
                  "id": "displayName",
                  "value": "Ausspielungsart"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Ausspielungsart"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 173
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Titel"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 513
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Wiedergaben"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 130
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "wiedergaberate * 100"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Wiedergaberate"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora ID"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 213
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Publiziert"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 168
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "url"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 14,
          "w": 24,
          "x": 0,
          "y": 58
        },
        "id": 106,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Wiedergaben"
            }
          ]
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "-- cache version \r\n\r\nSELECT \r\nbi_av_publication_date,\r\nbi_av_content, bi_av_content_id,\r\nbi_av_url as url,\r\nsum(m_av_playbacks) as wiedergabe,\r\nCONCAT(CONCAT(\r\n\r\nÂ  CASE WHEN LENGTH(CAST(DIV(av_content_duration,60) AS String))<2 THEN CONCAT(\"0\",CAST(DIV(av_content_duration,60) AS String)) ELSE CAST(DIV(av_content_duration,60) AS String)Â  END ,\r\n\r\nÂ  \":\",CASE WHEN LENGTH(CAST(MOD(av_content_duration,60) AS String))<2 THEN CONCAT(\"0\",CAST(MOD(av_content_duration,60) AS String)) ELSE CAST(MOD(av_content_duration,60) AS String)Â  END),\" Min\") as av_content_duration,\r\nSUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) wiedergaberate,\r\nav_content_type,\r\nbi_av_broadcasting_type,\r\n--device_type,\r\nFROM\r\n(\r\nSELECT\r\nFIRST_VALUE(bi_av_publication_date) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_publication_date, \r\nm_av_playbacks,\r\nCAST(av_content_duration/1000 AS INT) as av_content_duration,\r\nm_av_average_playback_completion_rate,\r\nav_content_type, bi_av_content_id,\r\nbi_av_broadcasting_type, \r\nFIRST_VALUE(bi_av_url) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_url, \r\n\r\n--device_type,\r\nFIRST_VALUE(bi_av_content) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_content, \r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\n  WHERE\r\nCASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND \r\nAND \"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) \r\nAND \"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND bi_av_content_id NOT LIKE '%index%'\r\nAND bi_av_broadcasting_type = \"ondemand\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote})\r\nWHERE m_av_playbacks > 0\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nGROUP BY bi_av_publication_date,bi_av_content,av_content_duration,av_content_type,bi_av_content_id, bi_av_broadcasting_type, bi_av_url\r\n--,device_type \r\nORDER BY 5 DESC\r\nLimit 100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top 100 Web Audios & Videos on Demand",
        "transformations": [
          {
            "id": "calculateField",
            "options": {
              "binary": {
                "left": "wiedergaberate",
                "operator": "*",
                "reducer": "sum",
                "right": "100"
              },
              "mode": "binary",
              "reduce": {
                "reducer": "sum"
              }
            }
          },
          {
            "id": "convertFieldType",
            "options": {
              "conversions": [
                {
                  "destinationType": "string",
                  "targetField": "wiedergaberate * 100"
                }
              ],
              "fields": {}
            }
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "bi_av_broadcasting_type": true,
                "bi_av_url": true,
                "wiedergaberate": true
              },
              "indexByName": {
                "av_content_duration": 4,
                "av_content_type": 7,
                "bi_av_broadcasting_type": 8,
                "bi_av_content": 1,
                "bi_av_content_id": 2,
                "bi_av_publication_date": 0,
                "wiedergabe": 3,
                "wiedergaberate": 5,
                "wiedergaberate * 100": 6
              },
              "renameByName": {
                "bi_av_broadcasting_type": "",
                "bi_av_content_id": "Sophora ID",
                "bi_av_url": "",
                "device_type": "",
                "url": "",
                "wiedergaberate * 100": "Wiedergaberate"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "bi_av_publication_date"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Publiziert"
                },
                {
                  "id": "custom.align",
                  "value": "left"
                },
                {
                  "id": "unit",
                  "value": "time: DD.MM.YYYY | HH:mm \\U\\h\\r"
                },
                {
                  "id": "custom.width",
                  "value": 180
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "bi_av_content"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Titel"
                },
                {
                  "id": "custom.align",
                  "value": "left"
                },
                {
                  "id": "custom.width",
                  "value": 300
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "targetBlank": true,
                      "title": "${__data.fields.url}",
                      "url": "${__data.fields.url}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "wiedergabe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Wiedergaben"
                },
                {
                  "id": "custom.align",
                  "value": "right"
                },
                {
                  "id": "custom.width",
                  "value": 100
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "av_content_duration"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "MedienlÃ¤nge"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width",
                  "value": 140
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "av_content_type"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Typ"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width",
                  "value": 85
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "device_type"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "GerÃ¤tetyp"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "custom.width",
                  "value": 150
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "wiedergaberate * 100"
              },
              "properties": [
                {
                  "id": "custom.cellOptions",
                  "value": {
                    "mode": "gradient",
                    "type": "gauge"
                  }
                },
                {
                  "id": "displayName",
                  "value": "Wiedergabe"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00b0de",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "bi_av_broadcasting_type"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 561
                },
                {
                  "id": "displayName",
                  "value": "Ausspielungsart"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Ausspielungsart"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 173
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Titel"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 513
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Wiedergaben"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 130
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "wiedergaberate * 100"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Wiedergaberate"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora ID"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 213
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Publiziert"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 168
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "url"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 72
        },
        "id": 156,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Wiedergaben"
            }
          ]
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nbi_av_publication_date,\r\nbi_av_content, bi_av_content_id,\r\nbi_av_url as url,\r\nsum(m_av_playbacks) as wiedergabe,\r\nav_content_type,\r\nbi_av_broadcasting_type,\r\nFROM\r\n(\r\nSELECT\r\nFIRST_VALUE(bi_av_publication_date) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_publication_date, \r\nm_av_playbacks,\r\nav_content_type, bi_av_content_id,\r\nbi_av_broadcasting_type, \r\nFIRST_VALUE(bi_av_url) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_url, \r\n\r\n--device_type,\r\nFIRST_VALUE(bi_av_content) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_content, \r\nFROM \r\n  ${av_table:raw}\r\n$sendungen_av_join_filter\r\nWHERE CASE \"$Sendung\"\r\nWHEN \"Panorama - Das Erste\" THEN site_level2 IN (\"$LRA\", \"daserste.ndr.de\")\r\nELSE site_level2 IN (\"$LRA\")\r\nEND \r\nAND \"$Redaktionen_mapped\" IN UNNEST(bi_av_page_chapter1_tags) \r\nAND \"$Unterkapitel\" IN UNNEST(bi_av_page_chapter2_tags)\r\n-- AND \"$Sendung\" IN UNNEST(sendungs_id_tags)\r\nAND bi_av_content_id NOT LIKE '%index%'\r\nAND bi_av_broadcasting_type = \"live\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote})\r\nWHERE m_av_playbacks > 0\r\nAND ((\"$LRA\" = 'mdr.de' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'mdr.de')\r\nGROUP BY bi_av_publication_date,bi_av_content,\r\nav_content_type,bi_av_content_id, bi_av_broadcasting_type, bi_av_url\r\n--,device_type \r\nORDER BY 5 DESC\r\nLimit 100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top 100 Web Audios & Videos Livestreams",
        "transformations": [
          {
            "id": "calculateField",
            "options": {
              "binary": {
                "left": "wiedergaberate",
                "operator": "*",
                "reducer": "sum",
                "right": "100"
              },
              "mode": "binary",
              "reduce": {
                "reducer": "sum"
              }
            }
          },
          {
            "id": "convertFieldType",
            "options": {
              "conversions": [
                {
                  "destinationType": "string",
                  "targetField": "wiedergaberate * 100"
                }
              ],
              "fields": {}
            }
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "bi_av_broadcasting_type": true,
                "bi_av_url": true,
                "wiedergaberate": true
              },
              "indexByName": {
                "av_content_duration": 4,
                "av_content_type": 7,
                "bi_av_broadcasting_type": 8,
                "bi_av_content": 1,
                "bi_av_content_id": 2,
                "bi_av_publication_date": 0,
                "wiedergabe": 3,
                "wiedergaberate": 5,
                "wiedergaberate * 100": 6
              },
              "renameByName": {
                "bi_av_broadcasting_type": "",
                "bi_av_content_id": "Sophora ID",
                "bi_av_url": "",
                "device_type": "",
                "url": "",
                "wiedergaberate * 100": "Wiedergaberate"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 85
        },
        "id": 163,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": " ",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 86
        },
        "id": 108,
        "panels": [],
        "title": "Distribution",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 12,
          "w": 6,
          "x": 0,
          "y": 87
        },
        "id": 110,
        "options": {
          "displayMode": "gradient",
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": false
          },
          "maxVizHeight": 300,
          "minVizHeight": 10,
          "minVizWidth": 0,
          "namePlacement": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "showUnfilled": true,
          "sizing": "auto",
          "valueMode": "color"
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Piano",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \n  SUM(m_visits), \n  src_referrer_site_domain \nFROM\n  ${distro_table:raw}\nWHERE \nsite_level2 = \"$LRA\"\nAND page_chapter1 = \"$Redaktionen_mapped\"\nAND page_chapter2 = \"$Unterkapitel\"\nAND sendungs_id = \"$Sendung\"\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\nAND src_referrer_site_domain NOT LIKE '%N/A%'\nAND CASE WHEN \n      site_level2 = \"mdr.de\" \n      THEN (distribution = \"web\" OR distribution =\"amp\")\n      ELSE 1=1 END \nGROUP BY src_referrer_site_domain \nORDER BY 1 DESC\nLIMIT 15",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "name": "SUM",
                  "parameters": [
                    {
                      "name": "m_visits",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "src_referrer_site_domain",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "name": "src_referrer_site_domain",
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {},
                "id": "ab88b988-0123-4456-b89a-b1885261c89a",
                "type": "group"
              }
            },
            "table": "distro"
          }
        ],
        "title": "Web | Top Verweiser Domains | $Zeitraumlabels",
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 12,
          "w": 9,
          "x": 6,
          "y": 87
        },
        "id": 118,
        "options": {
          "legend": {
            "displayMode": "table",
            "placement": "right",
            "showLegend": true,
            "values": [
              "percent",
              "value"
            ]
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \n  SUM(m_visits), \n  device_type \nFROM\n  ${distro_table:raw}\nWHERE \nsite_level2 = \"$LRA\"\nAND page_chapter1 = \"$Redaktionen_mapped\"\nAND page_chapter2 = \"$Unterkapitel\"\nAND sendungs_id = \"$Sendung\"\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\nAND device_type NOT LIKE '%N/A%'\nAND CASE WHEN \n      site_level2 = \"mdr.de\" \n      THEN (distribution = \"web\" OR distribution =\"amp\")\n      ELSE 1=1 END \nGROUP BY device_type \nORDER BY 1 DESC\nLIMIT 15",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Web | Devices | $Zeitraumlabels",
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 12,
          "w": 9,
          "x": 15,
          "y": 87
        },
        "id": 116,
        "options": {
          "legend": {
            "displayMode": "table",
            "placement": "right",
            "showLegend": true,
            "values": [
              "percent",
              "value"
            ]
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \n  SUM(m_visits), \n  src \nFROM\n  ${distro_table:raw}\nWHERE  \nsite_level2 = \"$LRA\"\nAND page_chapter1 = \"$Redaktionen_mapped\"\nAND page_chapter2 = \"$Unterkapitel\"\nAND sendungs_id = \"$Sendung\"\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\nAND src NOT LIKE '%N/A%'\nAND CASE WHEN \n      site_level2 = \"mdr.de\" \n      THEN (distribution = \"web\" OR distribution =\"amp\")\n      ELSE 1=1 END \nGROUP BY src \nORDER BY 1 DESC\nLIMIT 15",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Web | Traffic Quellen | $Zeitraumlabels",
        "type": "piechart"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 99
        },
        "id": 143,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": " ",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Visits"
              },
              "properties": [
                {
                  "id": "custom.cellOptions",
                  "value": {
                    "mode": "gradient",
                    "type": "gauge"
                  }
                },
                {
                  "id": "custom.align",
                  "value": "left"
                },
                {
                  "id": "custom.width",
                  "value": 275
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#00b0de",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "referrer"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Referrer"
                },
                {
                  "id": "custom.filterable",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Distribution"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Distribution"
                },
                {
                  "id": "custom.filterable",
                  "value": true
                },
                {
                  "id": "custom.width",
                  "value": 110
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "content_id_sophora"
              },
              "properties": [
                {
                  "id": "custom.filterable",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora ID"
              },
              "properties": [
                {
                  "id": "custom.width"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 14,
          "w": 24,
          "x": 0,
          "y": 100
        },
        "id": 162,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Visits"
            }
          ]
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "dataset": "Piano",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "--cached version\nWITH referrer AS(\nSELECT \n  content_titel,\n  SUM(m_visits) as Visits,\n  referrer,\n  $sophora as content_id_sophora, \n  distribution as Distribution\nFROM\n(\n  SELECT\n  FIRST_VALUE(content_titel) OVER (PARTITION BY $sophora ORDER BY date DESC) as content_titel,\n  --content_titel,\n  m_visits, \n  referrer,\n  $sophora,\n  distribution,\n  date\n  FROM `$distroRefTable`\n  WHERE\n     site_level2 = \"${LRA}\"\n     AND CASE \"${Redaktionen:text}\"\n     WHEN \"Alle Kapitel 1\" THEN TRUE \n     ELSE LOWER(page_chapter1) = LOWER(\"$Redaktionen_mapped\") END\n     AND CASE \"${Unterkapitel:text}\"\n     WHEN \"Alle Kapitel 2\" THEN TRUE\n     ELSE LOWER(page_chapter2) = LOWER(\"$Unterkapitel\") END\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\n    AND referrer NOT LIKE \"%N/A%\"\n)\nGROUP BY \nDistribution, \nreferrer,\ncontent_titel,\ncontent_id_sophora\nORDER BY Visits DESC), \narticles AS (\nSELECT content_id_sophora FROM (\n  SELECT\npublishing_date, \ncontent_titel,\nsum(m_visits) as visits,\nsum(m_page_loads) as page_views,\nCASE WHEN SUM(IFNULL(m_visits,0))>0 THEN SUM(m_bounce_rate*m_visits)/SUM(IFNULL(m_visits,0)) ELSE -1 END AS bounce_rate,\nCASE WHEN SUM(IFNULL(m_visits,0))>0 THEN SUM(m_suchmaschinen_anteil_visits*m_visits)/SUM(IFNULL(m_visits,0)) ELSE -1 END AS m_suchmaschinen_anteil_visits,\nCASE WHEN SUM(IFNULL(m_visits,0))>0 THEN SUM(m_homepage_anteil_visits*m_visits)/SUM(IFNULL(m_visits,0)) ELSE -1 END AS m_homepage_anteil_visits,\nCASE \n  WHEN \"$Redaktionen_mapped\" = \"Alle Kapitel 1\"  THEN page_chapter1 \n  WHEN \"$Redaktionen_mapped\" = \"nachrichten\"  THEN page_chapter2 \nEND AS Kapitel,\ncontent_id_sophora, url\nFROM\n(\nSELECT\nFIRST_VALUE(publishing_date) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as publishing_date, \nFIRST_VALUE(content_id_sophora) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as content_id_sophora, \npage_chapter2, page_chapter1,\nm_visits,\nm_page_loads,\nm_bounce_rate,\nm_suchmaschinen_anteil_visits,\nm_homepage_anteil_visits, \nFIRST_VALUE(url) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as url, \nFIRST_VALUE(content_titel) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as content_titel, \nFROM \n  ${articles_table:raw}\nWHERE site_level2 = \"$LRA\" AND\n\"$Redaktionen_mapped\" IN UNNEST(page_chapter1_tags) \nAND \"$Unterkapitel\" IN UNNEST(page_chapter2_tags)\nAND \"$Sendung\" IN UNNEST(sendungs_id_tags)\nAND content_id_sophora NOT LIKE '%index%'\nAND content_id_sophora NOT LIKE '%N/A%'\nAND content_id_sophora NOT LIKE '%verteilseite%'\nAND content_id_sophora NOT LIKE '%nachrichtenfeed%'\nAND page_chapter1 NOT LIKE \"CONT\"\nAND objekt_typ NOT LIKE 'indexPage'\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}) \nGROUP BY content_id_sophora, content_titel, publishing_date, page_chapter2, page_chapter1, url, publishing_date ORDER BY 4 DESC \n))\nSELECT DISTINCT * FROM referrer JOIN articles ON referrer.content_id_sophora = articles.content_id_sophora ORDER BY Visits DESC LIMIT 100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "name": "SUM",
                  "parameters": [
                    {
                      "name": "m_visits",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "src_referrer_site_domain",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "name": "src_referrer_site_domain",
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {},
                "id": "ab88b988-0123-4456-b89a-b1885261c89a",
                "type": "group"
              }
            },
            "table": "distro"
          }
        ],
        "title": "Web | Top Referrer (nach Artikeln) | $Zeitraum",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "content_id_sophora_1": true
              },
              "includeByName": {},
              "indexByName": {
                "Distribution": 2,
                "Visits": 4,
                "content_id_sophora": 3,
                "content_titel": 0,
                "referrer": 1
              },
              "renameByName": {
                "Distribution": "",
                "content_id_sophora": "Sophora ID",
                "content_titel": "Artikel",
                "distribution": "",
                "f0_": "",
                "referrer": "",
                "src_referrer_site_domain": ""
              }
            }
          }
        ],
        "transparent": true,
        "type": "table"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 114
        },
        "id": 142,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": " ",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 115
        },
        "id": 144,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": " ",
          "mode": "html"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      }
    ],
    "preload": false,
    "refresh": "1m",
    "schemaVersion": 40,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "text": "NDR",
            "value": "NDR"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "media_house",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT distinct media_house FROM `ndr-code-bi-dashboard.Piano.Profiles`\nWHERE LRA = \"$LRA\"",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr.de",
            "value": "ndr.de"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "includeAll": false,
          "name": "LRA",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT distinct LRA FROM `ndr-code-bi-dashboard.Piano.Profiles`\nORDER BY (\n  CASE\n    WHEN REGEXP_CONTAINS(LOWER(\"${__user.email}\"), LOWER(REPLACE(LRA,\".de\",\"\")))\n    THEN 1\n    ELSE 0\n  END\n) DESC",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Alle Kapitel 1",
            "value": "Alle Kapitel 1"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "includeAll": false,
          "name": "Redaktionen",
          "options": [],
          "query": {
            "dataset": "Piano",
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT * FROM(\nSELECT distinct page_chapter1 FROM `ndr-code-bi-dashboard.Piano.Profiles`\nWHERE LRA = \"$LRA\"\nUNION DISTINCT\nSELECT CASE \"$LRA\"\nWHEN \"mdr.de\" THEN \"kultur\" END\nUNION DISTINCT\nSELECT CASE \"$LRA\"\nWHEN \"mdr.de\" THEN \"MDR ThÃ¼ringen - Das Radio\" END\nUNION DISTINCT\nSELECT CASE \"$LRA\"\nWHEN \"mdr.de\" THEN \"in-aller-freundschaft\" END\nUNION DISTINCT\nSELECT CASE \"$LRA\"\nWHEN \"mdr.de\" THEN \"altpapier\" END\n)\nWHERE page_chapter1 != \"\"\nORDER BY page_chapter1 ASC\n-- â€œaltpapier",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_chapter1",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "998ab889-cdef-4012-b456-71866fb55755": {
                    "properties": {
                      "field": "LRA",
                      "operator": "equal",
                      "value": [
                        "$LRA"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "a8bbba98-0123-4456-b89a-b1866fb55755",
                "type": "group"
              },
              "whereString": "LRA = '$LRA'"
            },
            "table": "Profiles"
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Alle Kapitel 2",
            "value": "Alle Kapitel 2"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "includeAll": false,
          "name": "Unterkapitel",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT distinct page_chapter2 FROM `ndr-code-bi-dashboard.Piano.Profiles`\r\nWHERE LRA = \"$LRA\" AND page_chapter1 = \"$Redaktionen_mapped\"\r\nAND page_chapter2  NOT IN (\"app-aktuell\", \"app_aktuell\")\r\nUNION DISTINCT\r\nSELECT \"Alle Kapitel 2\"\r\nORDER BY page_chapter2 ASC",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Hamburg",
            "value": "Hamburg"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "includeAll": false,
          "name": "Sendung",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT distinct sendungs_id FROM `ndr-code-bi-dashboard.Piano.Profiles`\r\nWHERE LRA = \"$LRA\" AND page_chapter1 = \"$Redaktionen_mapped\" AND page_chapter2=\"$Unterkapitel\"\r\nUNION DISTINCT\r\nSELECT \"Alle Sendungs-ID\"\r\nORDER BY sendungs_id ASC",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "date >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)",
            "value": "date >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Vergleichszeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"date = CURRENT_DATE()\"\r\n  WHEN \"Heute\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\"\r\n  WHEN \"Heute -7d\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Gestern\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 8 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"date >= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY),INTERVAL 7 DAY) as saturday) AND date <= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY), INTERVAL 7 DAY) as sunday)\"\r\n  WHEN \"Letzte 7 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"date >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "48",
            "value": "48"
          },
          "hide": 2,
          "includeAll": false,
          "name": "filled_size_headline",
          "options": [
            {
              "selected": true,
              "text": "48",
              "value": "48"
            }
          ],
          "query": "48",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "Letzte 31-60 Tage",
            "value": "Letzte 31-60 Tage"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Vergleichszeitraumlabels",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"Vorletzte Stunde\"\r\n  WHEN \"Heute\" THEN \"Gestern\"\r\n  WHEN \"Heute -7d\" THEN \"Heute vor 7 Tagen\"\r\n  WHEN \"Gestern\" THEN \"Gestern vor 7 Tagen\"\r\n  WHEN \"Letztes Wochenende\" THEN \"Vorletztes Wochenende\"\r\n  WHEN \"Letzte 7 Tage\" THEN \"Letzte 8-14 Tage\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"Letzte 31-60 Tage\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "13",
            "value": "13"
          },
          "hide": 2,
          "includeAll": false,
          "name": "filled_size",
          "options": [
            {
              "selected": true,
              "text": "13",
              "value": "13"
            }
          ],
          "query": "13",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "date >=Â  DATE_SUB(CURRENT_DATE(), INTERVALÂ  30 DAY) AND date < CURRENT_DATE()",
            "value": "date >=Â  DATE_SUB(CURRENT_DATE(), INTERVALÂ  30 DAY) AND date < CURRENT_DATE()"
          },
          "includeAll": false,
          "name": "Zeitraum",
          "options": [
            {
              "selected": false,
              "text": "Letzte Stunde",
              "value": "CAST(tmstp AS DATE) = CURRENT_DATE()"
            },
            {
              "selected": false,
              "text": "Heute",
              "value": "date = CURRENT_DATE"
            },
            {
              "selected": false,
              "text": "Heute -7d",
              "value": "date = CURRENT_DATE()"
            },
            {
              "selected": false,
              "text": "Gestern",
              "value": "date = DATE_SUB(CURRENT_DATE(), INTERVAL  1 DAY)"
            },
            {
              "selected": false,
              "text": "Letztes Wochenende",
              "value": "date >= (SELECTÂ saturdayÂ FROM(SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(),WEEK(MONDAY)) - INTERVAL 2 DAY) as saturday)) AND date <= (SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(),WEEK(MONDAY)) - INTERVAL 1 DAY) as sunday)"
            },
            {
              "selected": false,
              "text": "Letzte 7 Tage",
              "value": "date >=Â  DATE_SUB(CURRENT_DATE(), INTERVALÂ  7 DAY) AND date < CURRENT_DATE()"
            },
            {
              "selected": true,
              "text": "Letzte 30 Tage",
              "value": "date >=Â  DATE_SUB(CURRENT_DATE(), INTERVALÂ  30 DAY) AND date < CURRENT_DATE()"
            }
          ],
          "query": "Letzte Stunde : CAST(tmstp AS DATE) = CURRENT_DATE(),    Heute : date = CURRENT_DATE,  Heute -7d : date = CURRENT_DATE(), Gestern : date = DATE_SUB(CURRENT_DATE()\\, INTERVAL  1 DAY), Letztes Wochenende : Â date >= (SELECTÂ saturdayÂ FROM(SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\,WEEK(MONDAY)) - INTERVAL 2 DAY) as saturday)) AND date <= (SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\,WEEK(MONDAY)) - INTERVAL 1 DAY) as sunday), Letzte 7 Tage : date >=Â  DATE_SUB(CURRENT_DATE()\\, INTERVALÂ  7 DAY) AND date < CURRENT_DATE(), Letzte 30 Tage : date >=Â  DATE_SUB(CURRENT_DATE()\\, INTERVALÂ  30 DAY) AND date < CURRENT_DATE()",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "30",
            "value": "30"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "time_shift",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST(time_shift AS STRING) FROM( SELECT\r\nCASE\r\nWHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN 0\r\nWHEN \"${Zeitraum:text}\" = \"Heute\" THEN 1\r\nWHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN 7\r\nWHEN \"${Zeitraum:text}\" = \"Gestern\" THEN 7\r\nWHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN 7\r\nWHEN CONTAINS_SUBSTR(\"${Zeitraum:text}\", \"7\") THEN 7\r\nWHEN CONTAINS_SUBSTR(\"${Zeitraum:text}\", \"30\") THEN 30 END AS time_shift)",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_zeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"\"\n  WHEN \"Letzte Stunde\" THEN \"_last_hour\"\n  ELSE \"\"\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_vergleichs_zeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Letzte Stunde\" THEN \"_last_2_hour\"\n  ELSE \"\"\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "_daily",
            "value": "_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_articles_zeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"_today\"\n  WHEN \"Letzte Stunde\" THEN \"_last_hour\"\n  ELSE \"_daily\"\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2025-05-06",
            "value": "2025-05-06"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "bq_timeframe_end",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\n  CASE \n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', last_sunday)\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 1 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 1 DAY))\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\n  END AS relevant_value\nFROM `grafana.current_date`",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2025-04-07",
            "value": "2025-04-07"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "bq_timeframe_start",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\n  CASE \n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', last_saturday)\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', interval_7_day)\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', interval_30_day)\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\n  END AS relevant_value\nFROM `grafana.current_date`",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2025-03-08",
            "value": "2025-03-08"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "bq_comp_timeframe_start",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\n  CASE \n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(yesterday, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(last_saturday, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_7_day, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_30_day, INTERVAL 30 DAY))\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\n  END AS relevant_value\nFROM `grafana.current_date`",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2025-04-06",
            "value": "2025-04-06"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "bq_comp_timeframe_end",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\n  CASE \n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(yesterday, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(last_sunday, INTERVAL 7 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_7_day, INTERVAL 1 DAY))\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_30_day, INTERVAL 1 DAY))\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\n  END AS relevant_value\nFROM `grafana.current_date`",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "daily_data",
            "value": "daily_data"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"adjusted_lagged_data\"\r\n  WHEN \"Heute -7d\" THEN  \"adjusted_lagged_data\"\r\n  WHEN \"Letzte Stunde\" THEN \"adjusted_lagged_data\"\r\n  WHEN \"Gestern\" THEN \"adjusted_lagged_data\"\r\n  ELSE \"daily_data\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "True",
            "value": "True"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Zeitraumfever",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \" EXTRACT(Hour from tmstp) <= ((SELECT EXTRACT(HOUR FROM max_tmstp) from min_time))\"\r\n  WHEN \"Heute -7d\" THEN  \" EXTRACT(Hour from tmstp) <= ((SELECT EXTRACT(HOUR FROM max_tmstp) from min_time))\"\r\n  WHEN \"Gestern\" THEN  \"EXTRACT(Hour from tmstp) <= 24\"\r\n  WHEN \"Letzte Stunde\" THEN \"DATETIME_DIFF((SELECT min_tmstp FROM min_time), tmstp, MINUTE) <=70 AND tmstp <= ((SELECT min_tmstp FROM min_time))\"\r\n  ELSE \"True\"\r\n  END\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "lim",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"\"\n  WHEN \"Gestern\" THEN  \"\"\n  WHEN \"Letzte Stunde\" THEN \"LIMIT 7\"\n  ELSE \"\"\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "bar",
            "value": "bar"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "type",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"line\"\n  WHEN \"Heute -7d\" THEN  \"line\"\n  WHEN \"Gestern\" THEN  \"line\"\n  WHEN \"Letzte Stunde\" THEN \"line\"\n  ELSE \"bar\"\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "feverCurveDataset",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"_today_append\"\r\n  WHEN \"Heute -7d\" THEN  \"_today_append\"\r\n  WHEN \"Gestern\" THEN \"_today_append\"\r\n  WHEN \"Letzte Stunde\" THEN \"_today_append\"\r\n  ELSE \"\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "GlÃ¤tten",
            "value": "GlÃ¤tten"
          },
          "hide": 2,
          "includeAll": false,
          "name": "Glaettung",
          "options": [
            {
              "selected": true,
              "text": "GlÃ¤tten",
              "value": "GlÃ¤tten"
            },
            {
              "selected": false,
              "text": "Nicht GlÃ¤tten",
              "value": "Nicht GlÃ¤tten"
            }
          ],
          "query": "GlÃ¤tten, Nicht GlÃ¤tten",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "2025-05-07 10:55:31.234105",
            "value": "2025-05-07 10:55:31.234105"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "comp_fever",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\n  CASE \n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN CURRENT_DATETIME(\"Europe/Berlin\")\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN  CURRENT_DATETIME(\"Europe/Berlin\")--FORMAT_DATE('%Y-%m-%d-', yesterday)\n    ELSE  CURRENT_DATETIME(\"Europe/Berlin\")\n  END AS relevant_value\n--FROM `grafana.current_date`",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Uhrzeit",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\nWHEN \"Heute\" THEN FORMAT_DATE('%H:%M', TIMESTAMP_ADD(MAX(tmstp), INTERVAL 1 SECOND))\r\nWHEN \"Heute -7d\" THEN FORMAT_DATE('%H:%M', TIMESTAMP_ADD(MAX(tmstp), INTERVAL 1 SECOND))\r\nELSE \"\" END\r\nFROM Piano.total_visits_today_append",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Letzte 30 Tage",
            "value": "Letzte 30 Tage"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Zeitraumlabels",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \n  CASE \"${Zeitraum:text}\"\n  WHEN \"Heute -7d\" THEN \"Heute\"\n  ELSE \"${Zeitraum:text}\"\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Piano.articles_joined_daily",
            "value": "Piano.articles_joined_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "articles_table",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"Piano.articles_joined_today\"\n  WHEN \"Heute -7d\" THEN  \"Piano.articles_joined_today\"\n  WHEN \"Letzte Stunde\" THEN \"Piano.articles_joined_last_hour\"\n  ELSE \"Piano.articles_joined_daily\"\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Piano.av_joined_daily",
            "value": "Piano.av_joined_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_table",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"Piano.av_joined_today\"\n  WHEN \"Heute -7d\" THEN  \"Piano.av_joined_today\"\n  WHEN \"Letzte Stunde\" THEN \"Piano.av_joined_last_hour\"\n  ELSE \"Piano.av_joined_daily\"\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Piano.distro_joined_daily",
            "value": "Piano.distro_joined_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "distro_table",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"Piano.distro_joined_today\"\n  WHEN \"Heute -7d\" THEN  \"Piano.distro_joined_today\"\n  WHEN \"Letzte Stunde\" THEN \"Piano.distro_joined_last_hour\"\n  ELSE \"Piano.distro_joined_daily\"\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Piano.av_joined_daily",
            "value": "Piano.av_joined_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_table_comp",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Letzte Stunde\" THEN \"Piano.av_last_2_hour\"\n  ELSE \"Piano.av_joined_daily\"\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "daily_data",
            "value": "daily_data"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_kpi",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"adjusted_lagged_data\"\r\n  WHEN \"Heute -7d\" THEN  \"adjusted_lagged_data\"\r\n  WHEN \"Letzte Stunde\" THEN \"daily_data\"\r\n  WHEN \"Gestern\" THEN \"adjusted_lagged_data\"\r\n  ELSE \"daily_data\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr-code-bi-dashboard.Piano.NDR_articles_distro_referrer_daily",
            "value": "ndr-code-bi-dashboard.Piano.NDR_articles_distro_referrer_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "distroRefTable",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  CASE \"${LRA:text}\"\r\n  WHEN \"mdr.de\" THEN \"ndr-code-bi-dashboard.Piano.MDR_articles_distro_referrer_$distroRefAppendix\"\r\n  WHEN \"kika.de\" THEN \"ndr-code-bi-dashboard.Piano.MDR_articles_distro_referrer_$distroRefAppendix\"\r\n  WHEN \"ndr.de\" THEN \"ndr-code-bi-dashboard.Piano.NDR_articles_distro_referrer_$distroRefAppendix\"\r\n  WHEN \"eurovision.de\" THEN \"ndr-code-bi-dashboard.Piano.NDR_articles_distro_referrer_$distroRefAppendix\"\r\n  WHEN \"ardkultur.de\" THEN \"ndr-code-bi-dashboard.Piano.NDR_articles_distro_referrer_$distroRefAppendix\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "content_id_sophora",
            "value": "content_id_sophora"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "sophora",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\nCASE \"${LRA:text}\"\r\nWHEN \"mdr.de\" THEN \"cms_id\"\r\nWHEN \"kika.de\" THEN \"cms_id\"\r\nWHEN \"ndr.de\" THEN \"content_id_sophora\"\r\nWHEN \"eurovision.de\" THEN \"content_id_sophora\"\r\nWHEN \"ardkultur.de\" THEN \"content_id_sophora\"\r\nEND as cis",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "daily",
            "value": "daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "distroRefAppendix",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \nCASE \"${Zeitraum:text}\"\n  WHEN \"Heute\" THEN  \"today\"\n  WHEN \"Heute -7d\" THEN  \"today\"\n  WHEN \"Gestern\" THEN  \"daily\"\n  WHEN \"Letzte Stunde\" THEN \"last_hour\"\n  ELSE \"daily\"\n  END\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Alle Kapitel 1",
            "value": "Alle Kapitel 1"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Redaktionen_mapped",
          "options": [],
          "query": {
            "dataset": "Piano",
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"\"\"$Redaktionen\"\"\"\n       WHEN \"MDR ThÃ¼ringen - Das Radio\" THEN  \"mdr-thueringen\"\n       ELSE \"$Redaktionen\"\n       END",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_chapter1",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "998ab889-cdef-4012-b456-71866fb55755": {
                    "properties": {
                      "field": "LRA",
                      "operator": "equal",
                      "value": [
                        "$LRA"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "a8bbba98-0123-4456-b89a-b1866fb55755",
                "type": "group"
              },
              "whereString": "LRA = '$LRA'"
            },
            "table": "Profiles"
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "2000-01-01",
            "value": "2000-01-01"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "bq_fever",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${Zeitraum:text}\"\r\n     WHEN \"Gestern\" THEN  DATE(DATE_SUB(CURRENT_DATE, INTERVAL 1 DAY))\r\n     WHEN \"Heute\" THEN  DATE(CURRENT_DATE)\r\n      WHEN \"Heute -7d\" THEN DATE(CURRENT_DATE)\r\n      ELSE DATE(2000,1,1)\r\n     END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "'Hamburg Journal', 'NDR 90,3 Aktuell', 'Hamburg Journal 18:00 Uhr', 'Hamburg Heute - Nachrichten Podcast', '\"Feel Hamburg\"', 'Das Hamburger Hafenkonzert', 'Wi snackt platt', 'Der Hamburg-Kommentar', 'Narichten op Platt', 'Hamburg Sounds - der Podcast'",
            "value": "'Hamburg Journal', 'NDR 90,3 Aktuell', 'Hamburg Journal 18:00 Uhr', 'Hamburg Heute - Nachrichten Podcast', '\"Feel Hamburg\"', 'Das Hamburger Hafenkonzert', 'Wi snackt platt', 'Der Hamburg-Kommentar', 'Narichten op Platt', 'Hamburg Sounds - der Podcast'"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "ndr_sendungen_av_filter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT STRING_AGG(CONCAT(\"'\", REPLACE(shows, \"'\", \"\\\\\\\\'\"), \"'\"), \", \") FROM ndr-code-bi-dashboard.Piano.ndr_sendungen_av_filter, UNNEST(shows) AS shows\r\nWHERE sendung = \"$Sendung\"\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "TRUE",
            "value": "TRUE"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "sendungs_id_tags_filter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE\r\nWHEN '$LRA' = 'ndr.de' AND '$Sendung' != 'Alle Sendungs-ID' THEN 'TRUE'\r\nELSE '\"$Sendung\" IN UNNEST(sendungs_id_tags)' END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "JOIN (SELECT DISTINCT sendungen FROM UNNEST(['Hamburg Journal', 'NDR 90,3 Aktuell', 'Hamburg Journal 18:00 Uhr', 'Hamburg Heute - Nachrichten Podcast', '\"Feel Hamburg\"', 'Das Hamburger Hafenkonzert', 'Wi snackt platt', 'Der Hamburg-Kommentar', 'Narichten op Platt', 'Hamburg Sounds - der Podcast']) AS sendungen) ON sendungen IN UNNEST(sendungs_id_tags)",
            "value": "JOIN (SELECT DISTINCT sendungen FROM UNNEST(['Hamburg Journal', 'NDR 90,3 Aktuell', 'Hamburg Journal 18:00 Uhr', 'Hamburg Heute - Nachrichten Podcast', '\"Feel Hamburg\"', 'Das Hamburger Hafenkonzert', 'Wi snackt platt', 'Der Hamburg-Kommentar', 'Narichten op Platt', 'Hamburg Sounds - der Podcast']) AS sendungen) ON sendungen IN UNNEST(sendungs_id_tags)"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "sendungen_av_join_filter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \r\nWHEN '$LRA' = 'ndr.de' AND '$Sendung' != 'Alle Sendungs-ID' THEN '''JOIN (SELECT DISTINCT sendungen FROM UNNEST([$ndr_sendungen_av_filter]) AS sendungen) ON sendungen IN UNNEST(sendungs_id_tags)'''\r\nELSE '' END\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "2023-05-01T00:00:00.000Z",
      "to": "2023-05-09T16:12:25.000Z"
    },
    "timepicker": {
      "hidden": true,
      "refresh_intervals": [
        "1m"
      ]
    },
    "timezone": "",
    "title": "Piano Web Desktop mit LÃ¤nderfilter",
    "uid": "be10red7dxr0gd",
    "version": 15,
    "weekStart": ""
  }
}
