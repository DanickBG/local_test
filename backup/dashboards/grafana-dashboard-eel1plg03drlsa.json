{
  "meta": {
    "type": "db",
    "canSave": true,
    "canEdit": true,
    "canAdmin": true,
    "canStar": true,
    "canDelete": true,
    "slug": "d0cda3c",
    "url": "/d/eel1plg03drlsa/d0cda3c",
    "expires": "0001-01-01T00:00:00Z",
    "created": "2025-05-06T07:34:16Z",
    "updated": "2025-05-07T10:03:16Z",
    "updatedBy": "daniel hristov dev",
    "createdBy": "daniel hristov dev",
    "version": 7,
    "hasAcl": false,
    "isFolder": false,
    "folderId": 660,
    "folderUid": "folder-F9a5Uxn4k",
    "folderTitle": "Prototypes",
    "folderUrl": "/dashboards/f/folder-F9a5Uxn4k/prototypes",
    "provisioned": false,
    "provisionedExternalId": "",
    "annotationsPermissions": {
      "dashboard": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      },
      "organization": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      }
    }
  },
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "description": "mit letzter Stunde und Heute vor 7 Tagen",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 1671,
    "links": [],
    "panels": [
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 9,
          "x": 0,
          "y": 0
        },
        "id": 101,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "# ðŸ“Š Hinweis\n\n- Audio- und Video-Daten ohne Livestream-Nutzung, mit Ausnahme der Livestream-Tabelle.",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 3
        },
        "id": 6,
        "panels": [],
        "title": "Verlaufsdiagramme",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 4
        },
        "id": 2,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const sPreTimes = context.panel.data.series.map(s => s.fields.find(f => f.name === 'pre_timestamp').values);\nconst series = context.panel.data.series.map((s) => {\n  const sData = s.fields.find((f) => f.name === 'visits_past_5_minutes').values || s.fields.find((f) => f.type === 'number').values;\n  let sTime = s.fields.find((f) => f.name === 'time').values\n  const type = s.fields.find((f) => f.name === 'type').values[0]\n  const refId = s.fields.find((f) => f.name === 'refId').values[0]\n  const glaettung = s.fields.find((f) => f.name === 'glaettung').values[0]\n  const zeitraum = s.fields.find((f) => f.name === 'zeitraum').values[0]\n  if (type === \"bar\") {\n    sTime = sTime.map(timestamp => {\n      const date = new Date(timestamp);\n      const day = date.getDate().toString().padStart(2, '0'); // Ensure two digits\n      const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based\n      return `${day}.${month}`; // Format as DD.MM\n    });\n  }\n  console.log(\"Glaettung\", glaettung)\n  console.log(\"REF ID\", refId)\n  console.log(\"Zeitraum\", zeitraum)\n  //const color = \"GÃ¤tten\" && refId === \"Heute\" ? \"#f5ee1d\" : \"#241df5\"\n  let color;\n  if (glaettung === \"GlÃ¤tten\" && zeitraum === \"Zeitraum\" && type === \"line\") {\n    color = \"#6aaa96\"; // heute // Light Petrol = #6aaa96 \n  } else if (glaettung === \"GlÃ¤tten\" && zeitraum != \"Zeitraum\" && type === \"line\") {\n    color = \"#004c6d\"; // gestern //  Dark-Petrol #004c6d\n  } else if (glaettung != \"GlÃ¤tten\" && zeitraum === \"Zeitraum\" && type === \"line\") {\n    color = \"#6aaa96\"; // heute // \n  } else if (glaettung != \"GlÃ¤tten\" && zeitraum != \"Zeitraum\" && type === \"line\") {\n    color = \"#004c6d\"; //gestern\n  }\n  else if (type === \"bar\" && zeitraum === \"Zeitraum\") {\n    color = \"#6aaa96\";\n  }\n  else if (type === \"bar\" && zeitraum != \"Zeitraum\") {\n    color = \"#004c6d\";\n  }\n  console.log(\"sTime\", sTime)\n  console.log(\"type\", type)\n  console.log(\"refId\", refId)\n  console.log(\"Sdata\", sData)\n\n  return {\n    name: refId,\n    type: type,\n    smooth: true,\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.9,\n    },\n    itemStyle: {\n      color: color,\n      width: 10\n    },\n\n    lineStyle: {\n      width: 1,\n      color: color\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nconst xAxisType = context.panel.data.series.map((s) => {\n  const type = s.fields.find((f) => f.name === 'type').values[0]\n  let xAxisType;\n  if (type == \"bar\") {\n    xAxisType = \"category\"\n  }\n  else {\n    xAxisType = \"time\"\n  }\n  return xAxisType\n})[0]\n\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    formatter: function (params) {\n      let tooltipContent = '';\n      params.forEach(function (item) {\n        const date = new Date(item.data[0]);\n        const tenMinutesInMilliseconds = 10 * 60 * 1000; // 10 minutes in milliseconds\n        const date_start = new Date(date.getTime() - tenMinutesInMilliseconds);\n        console.log(\"Date start\", date_start)\n        const preDate = new Date(sPreTimes[item.seriesIndex][item.dataIndex]);\n        const currentDate = new Date(item.data[0]); // current timestamp\n\n        // Format times\n        let preHours = preDate.getHours().toString().padStart(2, '0');\n        let preMinutes = preDate.getMinutes().toString().padStart(2, '0');\n        let currentHours = currentDate.getHours().toString().padStart(2, '0');\n        let currentMinutes = currentDate.getMinutes().toString().padStart(2, '0');\n\n        const intervalStart = preHours + ':' + preMinutes;\n        const intervalEnd = currentHours + ':' + currentMinutes;\n        const intervalString = intervalStart + '-' + intervalEnd;\n\n\n        let number = Math.floor(item.data[1]);\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n\n        if (item.componentSubType === \"bar\") {\n          tooltipContent += item.marker + item.seriesName + \" Visits: \" + formattedNumber + '<br/>';\n        }\n        else {\n          tooltipContent += item.marker + item.seriesName + \" \" + intervalString + \" Visits: \" + formattedNumber + '<br/>';\n        }\n      });\n      return tooltipContent;\n    }\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: context.panel.data.series.map((s) => {\n      const refId = s.fields.find((f) => f.name === \"refId\").values[0];\n      return refId;\n    }),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: xAxisType,\n  },\n  yAxis: {\n    type: 'value',\n    min: '0',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    },\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '10%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "dataset": "Piano",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH lagged_data AS (\r\n  SELECT\r\n    TIMESTAMP(tmstp) as time,\r\n    SUM(m_visits) as m_visits,\r\n    LAG(SUM(m_visits)) OVER (ORDER BY tmstp) as prev_m_visits,\r\n    LAG(TIMESTAMP(tmstp)) OVER (ORDER BY tmstp) as pre_timestamp\r\n  FROM\r\n    `Piano.total_visits_today_append`\r\n  WHERE\r\n    $webFilter\r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n    AND source != \"mdr_app\"\r\n    GROUP BY tmstp\r\n    ORDER by time DESC\r\n    ${lim}\r\n\r\n    -- 09:00     --> 09:20. --- > 09:30\r\n\r\n),\r\nmin_time_from_base AS (\r\n  -- This with statement will used in order to find out which is the last valid upload(e.g. the one with valid successor)\r\n  SELECT MIN(pre_timestamp) min_time FROM lagged_data\r\n  WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10\r\n), \r\nmax_time_from_base AS (\r\n    -- THis with statement will be used if no gap exists\r\n    SELECT MAX(time) as max_time FROM lagged_data\r\n    WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10\r\n),\r\ncleaned_lagged_data AS (\r\n  SELECT * from lagged_data \r\n  WHERE\r\n  time <= (SELECT COALESCE( min_time_from_base.min_time, max_time_from_base.max_time )\r\n  FROM max_time_from_base, min_time_from_base)\r\n),\r\ndaily_data AS (\r\n  SELECT\r\n     TIMESTAMP(date, \"Europe/Berlin\") as time,\r\n    TIMESTAMP_SUB(TIMESTAMP(date,  \"Europe/Berlin\"), INTERVAL 10 MINUTE) as pre_timestamp,\r\n    m_visits as visits_past_5_minutes_adjusted,\r\n    \"${type}\" as type, \"${Zeitraumlabels:text}\" as refId\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`\r\n  WHERE\r\n    $webFilter\r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n    ORDER BY time DESC\r\n),\r\nadjusted_lagged_data AS (\r\n  SELECT\r\n    DATE_SUB(time, INTERVAL 1 hour) as time,\r\n    DATE_SUB(pre_timestamp, INTERVAL 1 hour) as pre_timestamp,\r\n    -- Calculate time difference in minutes\r\n    TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) as time_diff,\r\n    -- Adjust visits count based on time difference\r\n    CASE\r\n      WHEN FALSE AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10 OR TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) < 0 AND \"${Glaettung:text}\" = \"GlÃ¤tten\" THEN\r\n        (m_visits - prev_m_visits) / TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) * 10\r\n      ELSE\r\n        m_visits - prev_m_visits\r\n    END as visits_past_5_minutes_adjusted,\r\n    \"${type}\" as type, \r\n    \"${Zeitraumlabels:text}\" as refId\r\n  FROM\r\n    cleaned_lagged_data\r\n)\r\nSELECT\r\n TIMESTAMP_ADD(time, INTERVAL 1 SECOND) as time,\r\n  TIMESTAMP_ADD(pre_timestamp, INTERVAL 1 SECOND) as pre_timestamp,\r\n  MAX(ROUND(visits_past_5_minutes_adjusted)) as visits_past_5_minutes,\r\n  type,\r\n  refId,\r\n   \"${Glaettung:text}\" as glaettung,\r\n   \"Zeitraum\" as zeitraum\r\nFROM\r\n  ${dataset}\r\nWHERE\r\n  visits_past_5_minutes_adjusted IS NOT NULL\r\n  AND visits_past_5_minutes_adjusted > 0\r\n  AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10 OR TIMESTAMP_DIFF(time, pre_timestamp, HOUR) = 1\r\n  GROUP BY time, pre_timestamp, type, refId\r\nORDER BY\r\n  time ASC\r\n  ${lim}\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "*",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "898a98b9-cdef-4012-b456-718f0afd79be": {
                    "properties": {
                      "field": "site_level2",
                      "operator": "equal",
                      "value": [
                        "$LRA"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "99988abb-4567-489a-bcde-f18f0b1b484d": {
                    "properties": {
                      "field": "page_chapter2",
                      "operator": "equal",
                      "value": [
                        "$Unterkapitel"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "a999aba9-0123-4456-b89a-b18f0b1bb814": {
                    "properties": {
                      "field": "sendungs_id",
                      "operator": "equal",
                      "value": [
                        "$Sendung"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "abb8a88a-89ab-4cde-b012-318f0b1b20fb": {
                    "properties": {
                      "field": "page_chapter1",
                      "operator": "equal",
                      "value": [
                        "$Redaktionen"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b988b9bb-0123-4456-b89a-b18f0afd79be",
                "type": "group"
              },
              "whereString": "(site_level2 = '$LRA' AND page_chapter1 = '$Redaktionen' AND page_chapter2 = '$Unterkapitel' AND sendungs_id = '$Sendung')"
            },
            "table": "total_visits"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH min_time AS ( \r\n      SELECT\r\n        MIN(tmstp) as min_tmstp,\r\n        MAX(tmstp) as max_tmstp\r\n        FROM\r\n      (SELECT distinct tmstp\r\n      from\r\n        `Piano.total_visits${feverCurveDataset:raw}`\r\n      WHERE\r\n        date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n        AND $webFilter\r\n        ORDER BY tmstp DESC\r\n        ${lim}\r\n        )\r\n    )\r\n    , lagged_data AS (\r\n    SELECT\r\n        TIMESTAMP(tmstp) as time,\r\n        SUM(m_visits) as m_visits,\r\n        LAG(SUM(m_visits)) OVER (ORDER BY tmstp) as prev_m_visits,\r\n        LAG(TIMESTAMP(tmstp)) OVER (ORDER BY tmstp) as pre_timestamp\r\n  FROM\r\n     `Piano.total_visits_today_append`\r\n  WHERE\r\n     date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND $Zeitraumfever \r\n    AND source != \"mdr_app\"\r\n    AND $webFilter\r\n    GROUP BY tmstp\r\n),\r\nmin_time_from_base AS (\r\n  -- This with statement will used in order to find out which is the last valid upload(e.g. the one with valid successor)\r\n  SELECT MIN(pre_timestamp) min_time FROM lagged_data\r\n  WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10\r\n), \r\nmax_time_from_base AS (\r\n    -- THis with statement will be used if no gap exists\r\n    SELECT MAX(time) as max_time FROM lagged_data\r\n    WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10\r\n),\r\ncleaned_lagged_data AS (\r\n  SELECT * from lagged_data \r\n  WHERE\r\n  time <= (SELECT COALESCE(min_time_from_base.min_time,max_time_from_base.max_time )\r\n  FROM max_time_from_base, min_time_from_base)\r\n),\r\nadjusted_lagged_data AS (\r\n    SELECT\r\n        time,\r\n        pre_timestamp,\r\n        -- Calculate time difference in minutes\r\n        TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) as time_diff,\r\n        -- Adjust visits count based on time difference\r\n        CASE\r\n            WHEN FALSE AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10 THEN\r\n                (m_visits - prev_m_visits) / TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) * 10\r\n            ELSE\r\n                m_visits - prev_m_visits\r\n        END as visits_past_5_minutes_adjusted\r\n    FROM\r\n        cleaned_lagged_data\r\n),\r\ndaily_data AS (\r\n  SELECT\r\n    TIMESTAMP(date) as time,\r\n    m_visits as visits_past_5_minutes_adjusted,\r\n    TIMESTAMP_SUB(TIMESTAMP(date), INTERVAL 10 MINUTE) as pre_timestamp\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`\r\n  WHERE\r\n    date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND $webFilter\r\n)\r\nSELECT\r\n    DATE_SUB(DATE_ADD(TIMESTAMP_ADD(time, INTERVAL 1 SECOND), INTERVAL ${time_shift} DAY), INTERVAL 1 HOUR) as time,\r\n    DATE_SUB(DATE_ADD(TIMESTAMP_ADD(pre_timestamp, INTERVAL 1 SECOND), INTERVAL ${time_shift} DAY), INTERVAL 1 HOUR) as pre_timestamp,\r\n    MAX(visits_past_5_minutes_adjusted) as visits_past_5_minutes,\r\n    \"${type}\" as type,\r\n    \"${Vergleichszeitraumlabels:text}\" as refId,\r\n    \"${Glaettung:text}\" as glaettung,\r\n    \"Vergleichszeitraum\" as zeitraum\r\nFROM\r\n    ${dataset}\r\nWHERE\r\n    visits_past_5_minutes_adjusted IS NOT NULL\r\n    AND visits_past_5_minutes_adjusted > 0\r\n     AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10 OR TIMESTAMP_DIFF(time, pre_timestamp, HOUR) = 1\r\n     AND  CASE \"${Zeitraum:text}\"\r\n     WHEN \"Gestern\" THEN EXTRACT(date from time) = \"$bq_fever\"\r\n     WHEN \"Heute\" THEN EXTRACT(date from time) = \"$bq_fever\"\r\n      WHEN \"Heute -7d\" THEN EXTRACT(date from time) = \"$bq_fever\"\r\n     ELSE True\r\n     END\r\n     \r\nGROUP BY time, pre_timestamp, type, refId\r\nORDER BY\r\n    time ASC\r\n\r\n  ${lim}\r\n",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Visits - Web - Verlaufsdiagramm",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "Hinweis: Momentan keine Web-AV-Messung fÃ¼r die NDR LÃ¤nder mÃ¶glich.",
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 4
        },
        "id": 3,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 550
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const categoryColors = {\n  'A': '#82E0BB',\n  'B': '#0062A9'\n}\nsType = 'bar';\nsAxis = 'category';\n\nconst series = context.panel.data.series.map((s) => {\n  const sData = s.fields.find((f) => f.name === 'm_av_playbacks').values || s.fields.find((f) => f.type === 'number').values;\n  let sTime = s.fields.find((f) => f.name === 'time').values || s.fields.find((f) => f.type === 'time').values;\n  const sName = s.fields.find((f) => f.name === 'Zeitraum').values;\n\n  sTime = sTime.map(timestamp => {\n    const date = new Date(timestamp);\n    const day = date.getDate().toString().padStart(2, '0'); // Ensure two digits\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based\n    return `${day}.${month}`; // Format as DD.MM\n  });\n\n  console.info(\"sType:\", sType)\n\n  return {\n    name: sName[0],\n    type: sType,\n    smooth: true,\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.5,\n    },\n    lineStyle: {\n      width: 2,\n    },\n    itemStyle: {\n      color: categoryColors[s.refId] || '#000',\n      opacity: 0.9, // Standardfarbe, falls keine Kategorie vorhanden ist\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    //extraCssText: 'text-align: justify;',\n    formatter: function (params) {\n      let dateString = params[0].value[0].toString();\n      let day = dateString.substr(8, 2);\n      let month = dateString.substr(5, 2);\n      let year = dateString.substr(0, 4);\n      let newDate = day + '.' + month + '.' + year;\n      let tooltipContent = '<span style=\"font-weight:bold;\">' //+ newDate + '</span><br/>';\n      params.forEach(function (item) {\n        let number = item.value[1];\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n        tooltipContent += item.marker + item.seriesName + ': <span style=\"font-weight:bold;\">' + formattedNumber + '</span><br/>';\n      });\n      return tooltipContent\n    },\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    //data: ,\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: sAxis,\n  },\n  yAxis: {\n    type: 'value',\n    //min: 'dataMin',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    },\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '10%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "dataset": "Piano",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT sum(COALESCE(m_av_playbacks,0)) as m_av_playbacks , date as time, \"${Zeitraumlabels:text}\" as Zeitraum\r\nFROM  `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`\r\nWHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND $avwebFilter\r\nAND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\nGROUP BY date\r\nORDER BY date\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "898a98b9-cdef-4012-b456-718f0afd79be": {
                    "properties": {
                      "value": [],
                      "valueSrc": []
                    },
                    "type": "rule"
                  }
                },
                "id": "b988b9bb-0123-4456-b89a-b18f0afd79be",
                "type": "group"
              }
            },
            "table": "av"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT sum(COALESCE(m_av_playbacks,0)) as m_av_playbacks, \r\ndate_ADD(date, INTERVAL $Tage $Einheit) as time,\r\n '${Vergleichszeitraum:text}' as Zeitraum\r\nFROM `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve_comp}` \r\nWHERE date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\nAND $avwebFilter\r\nAND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\nGROUP BY date\r\nORDER BY date",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Wiedergaben - Web - Verlaufsdiagramm",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 10
        },
        "id": 10,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 11
        },
        "id": 4,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 1604
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = context.panel.data.series.map((s) => {\n  const sData = s.fields.find((f) => f.name === 'visits_past_5_minutes').values || s.fields.find((f) => f.type === 'number').values;\n  let sTime = s.fields.find((f) => f.name === 'time').values || s.fields.find((f) => f.type === 'time').values;\n  const categoryColors = {\n    'A': '#A8DAD2',\n    'B': '#0D9685'\n  };\n\n  const type = s.fields.find((f) => f.name === 'type').values[0]\n  if (type === \"bar\") {\n    sTime = sTime.map(timestamp => {\n      const date = new Date(timestamp);\n      const day = date.getDate().toString().padStart(2, '0'); // Ensure two digits\n      const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based\n      return `${day}.${month}`; // Format as DD.MM\n    });\n  }\n  const refId = s.fields.find((f) => f.name === \"refId\").values[0]\n  const glaettung = s.fields.find((f) => f.name === 'glaettung').values[0]\n  const zeitraum = s.fields.find((f) => f.name === 'zeitraum').values[0]\n  let color;\n  console.log(glaettung, \"Glaettung\")\n  console.log(zeitraum, \"Zeitraum\")\n  if (glaettung === \"GlÃ¤tten\" && zeitraum === \"Zeitraum\" && type === \"line\") {\n    color = \"#6aaa96\"; // heute // Light Petrol\n  } else if (glaettung === \"GlÃ¤tten\" && zeitraum != \"Zeitraum\" && type === \"line\") {\n    color = \"#004c6d\"; // gestern / dark Petrol\n  } else if (glaettung != \"GlÃ¤tten\" && zeitraum === \"Zeitraum\" && type === \"line\") {\n    color = \"#6aaa96\"; // heute // Light Petrol\n  } else if (glaettung != \"GlÃ¤tten\" && zeitraum != \"Zeitraum\" && type === \"line\") {\n    color = \"#004c6d\"; // gestern / dark Petrol\n  }\n  else if (type === \"bar\") {\n    color = \"#6aaa96\"; // heute // Light Petrol\n  }\n  else if (type === \"bar\") {\n    color = \"#004c6d\"; // gestern / dark Petrol\n  }\n  console.log(\"COLOR\", color)\n  return {\n    name: zeitraum,\n    type: type,\n    showSymbol: false,\n    smooth: true,\n    areaStyle: {\n      opacity: 0.9,\n    },\n    itemStyle: {\n      color: categoryColors[s.refId] || '#000',\n    },\n    lineStyle: {\n      width: 1,\n      color\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\nconst xAxisType = context.panel.data.series.map((s) => {\n  const type = s.fields.find((f) => f.name === 'type').values[0]\n  let xAxisType;\n  if (type == \"bar\") {\n    xAxisType = \"category\"\n  }\n  else {\n    xAxisType = \"time\"\n  }\n  return xAxisType\n})[0]\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    formatter: function (params) {\n      let tooltipContent = '';\n      params.forEach(function (item) {\n        const date = new Date(item.data[0]);\n        const tenMinutesInMilliseconds = 10 * 60 * 1000; // 10 minutes in milliseconds\n        const date_start = new Date(date.getTime() - tenMinutesInMilliseconds);\n        console.log(\"Date start\", date_start)\n        // const date_start = new Date(item.data[0]);\n        //date_start.setMinutes(date.getMinutes() - 10)\n\n        let hours = date.getHours().toString().padStart(2, '0');\n        let minutes = date.getMinutes().toString().padStart(2, '0');\n        let hours_start = date_start.getHours().toString().padStart(2, '0');\n        let minutes_start = date_start.getMinutes().toString().padStart(2, '0');\n        const timeString = hours_start + ':' + minutes_start;\n        const timestring_end = hours + ':' + minutes;\n        const intervalString = timeString + '-' + timestring_end\n\n        let number = Math.floor(item.data[1]);\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n\n        if (item.componentSubType === \"bar\") {\n          tooltipContent += item.marker + item.seriesName + \" Visits: \" + formattedNumber + '<br/>';\n        }\n        else {\n          tooltipContent += item.marker + item.seriesName + \" \" + intervalString + \" Visits: \" + formattedNumber + '<br/>';\n        }\n      });\n      return tooltipContent;\n    }\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: context.panel.data.series.map((s) => {\n      const refId = s.fields.find((f) => f.name === \"zeitraum\").values[0];\n      return refId;\n    }),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: xAxisType,\n  },\n  yAxis: {\n    type: 'value',\n    min: '0',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    },\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '10%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "dataset": "Piano",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH lagged_data AS (\r\n  SELECT\r\n    TIMESTAMP(tmstp) as time,\r\n    SUM(m_visits) as m_visits,\r\n    LAG(SUM(m_visits)) OVER (ORDER BY tmstp) as prev_m_visits,\r\n    LAG(TIMESTAMP(tmstp)) OVER (ORDER BY tmstp) as pre_timestamp\r\n  FROM\r\n    `Piano.total_visits_today_append`\r\n  WHERE\r\n    $webFilter\r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n    AND source != \"mdr_app\"\r\n    GROUP BY tmstp\r\n    ORDER by time DESC\r\n    ${lim}\r\n\r\n    -- 09:00     --> 09:20. --- > 09:30\r\n\r\n),\r\nmin_time_from_base AS (\r\n  -- This with statement will used in order to find out which is the last valid upload(e.g. the one with valid successor)\r\n  SELECT MIN(pre_timestamp) min_time FROM lagged_data\r\n  WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10\r\n), \r\nmax_time_from_base AS (\r\n    -- THis with statement will be used if no gap exists\r\n    SELECT MAX(time) as max_time FROM lagged_data\r\n    WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10\r\n),\r\ncleaned_lagged_data AS (\r\n  SELECT * from lagged_data \r\n  WHERE\r\n  time <= (SELECT COALESCE( min_time_from_base.min_time, max_time_from_base.max_time )\r\n  FROM max_time_from_base, min_time_from_base)\r\n),\r\ndaily_data AS (\r\n  SELECT\r\n     TIMESTAMP(date, \"Europe/Berlin\") as time,\r\n    TIMESTAMP_SUB(TIMESTAMP(date,  \"Europe/Berlin\"), INTERVAL 10 MINUTE) as pre_timestamp,\r\n    m_visits as visits_past_5_minutes_adjusted,\r\n    \"${type}\" as type, \"${Zeitraumlabels:text}\" as refId\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`\r\n  WHERE\r\n    $webFilter\r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n    ORDER BY time DESC\r\n),\r\nadjusted_lagged_data AS (\r\n  SELECT\r\n    DATE_SUB(time, INTERVAL 1 hour) as time,\r\n    DATE_SUB(pre_timestamp, INTERVAL 1 hour) as pre_timestamp,\r\n    -- Calculate time difference in minutes\r\n    TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) as time_diff,\r\n    -- Adjust visits count based on time difference\r\n    CASE\r\n      WHEN FALSE AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10 OR TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) < 0 AND \"${Glaettung:text}\" = \"GlÃ¤tten\" THEN\r\n        (m_visits - prev_m_visits) / TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) * 10\r\n      ELSE\r\n        m_visits - prev_m_visits\r\n    END as visits_past_5_minutes_adjusted,\r\n    \"${type}\" as type, \r\n    \"${Zeitraumlabels:text}\" as refId\r\n  FROM\r\n    cleaned_lagged_data\r\n)\r\nSELECT\r\n  TIMESTAMP_ADD(time, INTERVAL 1 SECOND) as time,\r\n  TIMESTAMP_ADD(pre_timestamp, INTERVAL 1 SECOND) as pre_timestamp,\r\n  MAX(ROUND(visits_past_5_minutes_adjusted)) as visits_past_5_minutes,\r\n  type,\r\n  refId,\r\n   \"${Glaettung:text}\" as glaettung,\r\n   \"Web\" as zeitraum,\r\nFROM\r\n  ${dataset}\r\nWHERE\r\n  visits_past_5_minutes_adjusted IS NOT NULL\r\n  AND visits_past_5_minutes_adjusted > 0\r\n  AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10 OR TIMESTAMP_DIFF(time, pre_timestamp, HOUR) = 1\r\n  GROUP BY time, pre_timestamp, type, refId\r\nORDER BY\r\n  time ASC\r\n  ${lim}\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "*",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "898a98b9-cdef-4012-b456-718f0afd79be": {
                    "properties": {
                      "field": "site_level2",
                      "operator": "equal",
                      "value": [
                        "$LRA"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "99988abb-4567-489a-bcde-f18f0b1b484d": {
                    "properties": {
                      "field": "page_chapter2",
                      "operator": "equal",
                      "value": [
                        "$Unterkapitel"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "a999aba9-0123-4456-b89a-b18f0b1bb814": {
                    "properties": {
                      "field": "sendungs_id",
                      "operator": "equal",
                      "value": [
                        "$Sendung"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "abb8a88a-89ab-4cde-b012-318f0b1b20fb": {
                    "properties": {
                      "field": "page_chapter1",
                      "operator": "equal",
                      "value": [
                        "$Redaktionen"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b988b9bb-0123-4456-b89a-b18f0afd79be",
                "type": "group"
              },
              "whereString": "(site_level2 = '$LRA' AND page_chapter1 = '$Redaktionen' AND page_chapter2 = '$Unterkapitel' AND sendungs_id = '$Sendung')"
            },
            "table": "total_visits"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH sumdata AS (\r\n  SELECT\r\n    TIMESTAMP(tmstp) as tmstp,\r\n    CASE \"$LRA\"\r\n    WHEN \"NDR\" THEN MAX(m_visits)\r\n    ELSE SUM(DISTINCT m_visits)\r\n    END\r\n     as m_visits FROM\r\n     `Piano.total_visits${feverCurveDataset:raw}`\r\n  WHERE\r\n  $appFilter \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  GROUP by tmstp\r\n  \r\n),\r\nlagged_data AS (\r\n  SELECT\r\n    TIMESTAMP(tmstp) as time,\r\n    m_visits - LAG(m_visits) OVER (\r\n      ORDER BY\r\n        tmstp\r\n    ) as visits_past_5_minutes,\r\n    LAG(m_visits) OVER (ORDER BY tmstp) as prev_m_visits,\r\n    LAG(TIMESTAMP(tmstp)) OVER (ORDER BY tmstp) as pre_timestamp,\r\n    m_visits\r\n  FROM\r\n    sumdata\r\n    ORDER BY tmstp DESC\r\n  ${lim}\r\n    \r\n),\r\nmin_time_from_base AS (\r\n  -- This with statement will used in order to find out which is the last valid upload(e.g. the one with valid successor)\r\n  SELECT MIN(pre_timestamp) min_time FROM lagged_data\r\n  WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10\r\n), \r\nmax_time_from_base AS (\r\n    -- THis with statement will be used if no gap exists\r\n    SELECT MAX(time) as max_time FROM lagged_data\r\n    WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) = 10\r\n),\r\ncleaned_lagged_data AS (\r\n  SELECT * from lagged_data \r\n  WHERE\r\n  time <= (SELECT COALESCE(max_time_from_base.max_time, min_time_from_base.min_time )\r\n  FROM max_time_from_base, min_time_from_base)\r\n),\r\nadjusted_lagged_data AS (\r\n    SELECT\r\n        time,\r\n        pre_timestamp,\r\n        -- Calculate time difference in minutes\r\n        TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) as time_diff,\r\n        -- Adjust visits count based on time difference\r\n           CASE\r\n      WHEN FALSE AND TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) > 10 OR TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) < 10 AND \"${Glaettung:text}\" = \"GlÃ¤tten\" THEN\r\n        (m_visits - prev_m_visits) / TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) * 10\r\n      ELSE\r\n        m_visits - prev_m_visits\r\n        END as visits_past_5_minutes\r\n    FROM\r\n        cleaned_lagged_data\r\n        WHERE TIMESTAMP_DIFF(time, pre_timestamp, MINUTE) >= 10\r\n      ORDER BY time DESC\r\n      ${lim}\r\n),\r\n\r\ndaily_data AS (\r\n  SELECT\r\n     TIMESTAMP(date) as time,\r\n    SUM(m_visits) as visits_past_5_minutes\r\n  FROM\r\n    `Piano.total_visits${feverCurveDataset:raw}`\r\n  WHERE\r\n  $appFilter \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  GROUP BY date\r\n)\r\n\r\nSELECT\r\n    DATE_SUB(TIMESTAMP_ADD(time, INTERVAL 1 SECOND), INTERVAL 1 hour) as time,\r\n  visits_past_5_minutes, \"${type}\" as type, \"${Zeitraumlabels:text}\" as refId,\r\n     \"${Glaettung:text}\" as glaettung,\r\n   \"App\" as zeitraum\r\nFROM\r\n  ${dataset}\r\nWHERE\r\n  visits_past_5_minutes IS NOT NULL\r\n  AND $Zeitraumfever_app \r\nORDER BY\r\n  time ASC\r\n${lim}\r\n",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Visits - Web & App | ${Zeitraumlabels:text}",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 11
        },
        "id": 7,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 693
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const categoryColors = {\n  'A': '#A8DAD2',\n  'B': '#0D9685'\n};\n\nlet sAxis = 'time';\nlet sType = 'line';\nsType = 'bar';\nsAxis = 'category';\n\nconst series = context.panel.data.series.map((s) => {\n  const sData = s.fields.find((f) => f.name === 'm_av_playbacks').values || s.fields.find((f) => f.type === 'number').values;\n  let sTime = s.fields.find((f) => f.name === 'time').values || s.fields.find((f) => f.type === 'time').values;\n  const sName = s.fields.find((f) => f.name === 'Zeitraum').values\n  const sTypeArray = s.fields.find((f) => f.name === 'Darstellung').values || s.fields.find((f) => f.name === 'Darstellung').values;\n\n  sTime = sTime.map(timestamp => {\n    const date = new Date(timestamp);\n    const day = date.getDate().toString().padStart(2, '0'); // Ensure two digits\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based\n    return `${day}.${month}`; // Format as DD.MM\n  });\n\n  return {\n    name: sName[0],\n    //type: 'line',\n    type: sType,\n    showSymbol: false,\n    smooth: true,\n    areaStyle: {\n      opacity: 0,\n    },\n    lineStyle: {\n      width: 2,\n    },\n    itemStyle: {\n      color: categoryColors[s.refId] || '#000',\n      opacity: 0.9, // Standardfarbe, falls keine Kategorie vorhanden ist\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => context.panel.chart.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\ncontext.panel.chart.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  context.grafana.locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n    formatter: function (params) {\n      let dateString = params[0].value[0].toString();\n      let day = dateString.substr(8, 2);\n      let month = dateString.substr(5, 2);\n      let year = dateString.substr(0, 4);\n      let newDate = day + '.' + month + '.' + year;\n      let tooltipContent = '<span style=\"font-weight:bold;\">' //+ newDate + '</span><br/>';\n      params.forEach(function (item) {\n        let number = item.value[1];\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(number);\n        tooltipContent += item.marker + item.seriesName + ': <span style=\"font-weight:bold;\">' + formattedNumber + '</span><br/>';\n      });\n      return tooltipContent\n    },\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    //data: ,\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    //type: 'time',\n    type: sAxis,\n  },\n  yAxis: {\n    type: 'value',\n    //min: 'dataMin',\n    axisLabel: {\n      formatter: function (value, index) {\n        let formattedNumber = new Intl.NumberFormat('de-DE').format(value);\n        return formattedNumber\n      }\n    },\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '10%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.1.0",
        "targets": [
          {
            "dataset": "Piano",
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT sum(m_av_playbacks) as m_av_playbacks , date as time, 'Web' AS Zeitraum,'${Zeitraum:text}' as Darstellung\r\nFROM  `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`\r\n$sendungen_av_join_filter\r\nWHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND $avwebFilter\r\nAND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\nGROUP BY date\r\nORDER BY date\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "*",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": {
                  "898a98b9-cdef-4012-b456-718f0afd79be": {
                    "properties": {
                      "field": "site_level2",
                      "operator": "equal",
                      "value": [
                        "$LRA"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "99988abb-4567-489a-bcde-f18f0b1b484d": {
                    "properties": {
                      "field": "page_chapter2",
                      "operator": "equal",
                      "value": [
                        "$Unterkapitel"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "a999aba9-0123-4456-b89a-b18f0b1bb814": {
                    "properties": {
                      "field": "sendungs_id",
                      "operator": "equal",
                      "value": [
                        "$Sendung"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  },
                  "abb8a88a-89ab-4cde-b012-318f0b1b20fb": {
                    "properties": {
                      "field": "page_chapter1",
                      "operator": "equal",
                      "value": [
                        "$Redaktionen"
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "text"
                      ]
                    },
                    "type": "rule"
                  }
                },
                "id": "b988b9bb-0123-4456-b89a-b18f0afd79be",
                "type": "group"
              },
              "whereString": "(site_level2 = '$LRA' AND page_chapter1 = '$Redaktionen' AND page_chapter2 = '$Unterkapitel' AND sendungs_id = '$Sendung')"
            },
            "table": "total_visits"
          },
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as m_av_playbacks,\r\n  date as time,\r\n'App' as Zeitraum,\r\n '${Vergleichszeitraum:text}' as Darstellung\r\nFROM  \r\n  `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`\r\n  WHERE ${av_condition} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND ($av_app_condition_audio OR $av_app_condition_video)\r\nGROUP BY date\r\nORDER BY date",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Wiedergaben - Web & App | ${Zeitraumlabels:text}",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 17
        },
        "id": 14,
        "panels": [],
        "title": "KPI Boxes",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 18
        },
        "id": 19,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 4,
          "y": 18
        },
        "id": 20,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 40
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Visits')), 'Visits')\r\nFROM(\r\nSELECT 'Visits' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 9,
          "y": 18
        },
        "id": 21,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 40
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Pageviews / Visits')), 'Page Views / Visit')\r\nFROM(\r\nSELECT 'Page Views / Visit' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 14,
          "y": 18
        },
        "id": 22,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 40
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Time spent / Visit in Sec.')), 'Time spent / Visit in Sec.')\r\nFROM(\r\nSELECT 'Time spent / Visit in Sec.' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 19,
          "y": 18
        },
        "id": 23,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 40
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Audio- & Videostarts')), 'Audio- & Videostarts')\r\nFROM(\r\nSELECT 'Audio- & Videostarts' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 4,
          "x": 0,
          "y": 21
        },
        "id": 16,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 54
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Web & App')), 'Web & App')\r\nFROM(\r\nSELECT 'Web & App' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text} ${Uhrzeit:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 3,
          "x": 4,
          "y": 21
        },
        "id": 24,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {},
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\n    WHERE $webFilter AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}),\r\na as (\r\n  WITH adjusted_lagged_data AS (\r\n  SELECT\r\n     SUM(m_visits) as summe FROM\r\n     `Piano.total_visits${feverCurveDataset:raw}`\r\n  WHERE\r\n  $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n    GROUP BY site_level2, tmstp\r\n  ORDER BY summe DESC\r\n  LIMIT 1\r\n),\r\ndaily_data AS (SELECT\r\n  sum(m_visits) as summe\r\nFROM\r\n  `Piano.total_visits${dataset_zeitraum_app:raw}`\r\nWHERE $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  )\r\nSELECT summe as m_visits, 1 as id FROM ${dataset_not_fevercurve} )\r\nSELECT  w.m_visits + a.m_visits as Zeitraum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum ${Uhrzeit:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 7,
          "y": 21
        },
        "id": 25,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 18
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    GROUP BY site_level2, tmstp\r\n    ORDER BY tmstp DESC\r\n    LIMIT 1), daily_data AS(\r\n       SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_web:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    )\r\n    SELECT * FROM ${dataset_kpi}),\r\na as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT  SUM(m_visits) as m_visits, 1 as id\r\n  FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n  GROUP BY site_level2, tmstp\r\n  ORDER BY m_visits DESC\r\n  LIMIT 1),\r\n  daily_data AS(\r\n    SELECT  SUM(m_visits) as m_visits, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_app:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote})\r\n  SELECT * FROM ${dataset_kpi}\r\n  )\r\n\r\n\r\nSELECT  w.m_visits + a.m_visits as Zeitraum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n\r\n\r\n\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "f0_"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text} ${Uhrzeit:text}"
                },
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 1
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 3,
          "x": 9,
          "y": 21
        },
        "id": 31,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {},
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  SELECT m_visits, date, m_page_loads, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\n  WHERE \r\n    ($webFilter\r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n    ) \r\n),\r\na as (\r\n  SELECT m_visits, date, m_page_loads, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_app:raw}` \r\n  WHERE $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n)\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size_big - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\")) FROM \r\n(\r\nSELECT ROUND(SUM(w.m_page_loads+a.m_page_loads)/SUM(w.m_visits + a.m_visits),1) as summe\r\nFROM w \r\nJOIN a ON w.id = a.id)\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "f0_"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum ${Uhrzeit}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 12,
          "y": 21
        },
        "id": 32,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 18
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, SUM(COALESCE(m_page_loads,0)) as m_page_loads,1 as id\r\n    FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    GROUP BY site_level2, tmstp\r\n    ORDER BY tmstp DESC\r\n    LIMIT 1), daily_data AS(\r\n       SELECT  m_visits, m_page_loads, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_web:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    )\r\n    SELECT * FROM ${dataset_kpi}),\r\na as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT   SUM(COALESCE(m_visits,0)) as m_visits,  SUM(COALESCE(m_page_loads,0)) as m_page_loads, 1 as id\r\n  FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n  GROUP BY site_level2, tmstp\r\n  ORDER BY m_visits DESC\r\n  LIMIT 1),\r\n  daily_data AS(\r\n    SELECT  m_visits, m_page_loads, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_app:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote})\r\n  SELECT * FROM ${dataset_kpi}\r\n  )\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size_big - CHAR_LENGTH(CAST(summe as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(summe) as NUMERIC)) AS STRING), \",\", \".\")) FROM \r\n(\r\nSELECT ROUND(SUM(w.m_page_loads+a.m_page_loads)/SUM(w.m_visits + a.m_visits),1) as summe\r\nFROM w \r\nJOIN a ON w.id = a.id)\r\n\r\n\r\n\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "displayName": "${Zeitraum:text} ${Uhrzeit:text}",
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text} ${Uhrzeit:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 3,
          "x": 14,
          "y": 21
        },
        "id": 38,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 30
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM  `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\n  WHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n   AND $webFilter\r\n),\r\na as(\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_app:raw}`  \r\n   WHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n   AND $appFilter\r\n)\r\nSELECT  CONCAT(REPLACE(CAST(ROUND((a.time_spent + w.time_spent)/(a.visits + w.visits),1) as STRING), '.', ','), ' Sek.') as Zeitraum\r\nFROM w \r\nJOIN a ON w.id = a.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum ${Uhrzeit}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 17,
          "y": 21
        },
        "id": 33,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 18
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "hide": false,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n    FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    GROUP BY site_level2, tmstp\r\n    ORDER BY tmstp DESC\r\n    LIMIT 1), daily_data AS(\r\n       SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_web:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    )\r\n    SELECT * FROM ${dataset_kpi}),\r\na as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT   SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n  GROUP BY site_level2, tmstp\r\n  ORDER BY visits DESC\r\n  LIMIT 1),\r\n  daily_data AS(\r\n    SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_app:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote})\r\n  SELECT * FROM ${dataset_kpi}\r\n  )\r\nSELECT  CONCAT(REPEAT(\" \", $filled_size_big - CHAR_LENGTH(CAST(summe as STRING))), summe) as Zeitraum FROM \r\n(\r\nSELECT CONCAT(REPLACE(CAST(ROUND((a.time_spent + w.time_spent)/(a.visits + w.visits),1) as STRING), '.', ','), ' Sek.') as summe\r\nFROM w \r\nJOIN a ON w.id = a.id)\r\n\r\n\r\n\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text} ${Uhrzeit}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 3,
          "x": 19,
          "y": 21
        },
        "id": 39,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 30
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as \r\n(\r\n  SELECT \r\n    SUM(COALESCE(m_av_playbacks,0)) as Zeitraum, 1 as id\r\n  FROM ${dataset_zeitraum_av:raw}\r\n  $sendungen_av_join_filter\r\n  WHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} AND $avwebFilter\r\n  AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'MDR')\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n\r\n),\r\napp as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum, 1 as id\r\nFROM  \r\n  ${dataset_zeitraum_av:raw}\r\n  WHERE ${av_condition} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND ($av_app_condition_audio OR $av_app_condition_video)\r\nAND ($av_app_condition_audio OR $av_app_condition_video)\r\n  AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n\r\n\r\n )\r\nSELECT COALESCE(SUM(web.Zeitraum),0) + COALESCE(SUM(app.Zeitraum),0) as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 22,
          "y": 21
        },
        "id": 34,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 18
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as \r\n(\r\n  SELECT \r\n    SUM(COALESCE(m_av_playbacks,0)) as Zeitraum, 1 as id\r\n  FROM ${dataset_vergleichszeitraum_av}\r\n  $sendungen_av_join_filter\r\n  WHERE date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} AND $avwebFilter\r\n  AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'MDR')\r\n      AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n\r\n),\r\napp as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum, 1 as id\r\nFROM  \r\n  ${dataset_vergleichszeitraum_av}  \r\n  WHERE ${av_condition} \r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} \r\nAND ($av_app_condition_audio OR $av_app_condition_video)\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n\r\n\r\n )\r\nSELECT COALESCE(SUM(web.Zeitraum),0) + COALESCE(SUM(app.Zeitraum),0) as Zeitraum\r\n\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 7,
          "y": 25
        },
        "id": 26,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 18
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\n  with w as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    GROUP BY site_level2, tmstp\r\n    ORDER BY tmstp DESC\r\n    LIMIT 1), daily_data AS(\r\n       SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_web:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    )\r\n    SELECT * FROM ${dataset_kpi}),\r\na as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT  SUM(m_visits) as m_visits, 1 as id\r\n  FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n  GROUP BY site_level2, tmstp\r\n  ORDER BY m_visits DESC\r\n  LIMIT 1),\r\n  daily_data AS(\r\n    SELECT  SUM(m_visits) as m_visits, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_app:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote})\r\n  SELECT * FROM ${dataset_kpi}\r\n  )\r\n\r\n\r\nSELECT  w.m_visits + a.m_visits as past_sum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n),\r\ncurrent_value AS (\r\nwith w as (\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\n    WHERE $webFilter AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}),\r\na as (\r\n  WITH adjusted_lagged_data AS (\r\n  SELECT\r\n     SUM(m_visits) as summe FROM\r\n     `Piano.total_visits${feverCurveDataset:raw}`\r\n  WHERE\r\n  $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n    GROUP BY site_level2, tmstp\r\n  ORDER BY summe DESC\r\n  LIMIT 1\r\n),\r\ndaily_data AS (SELECT\r\n  sum(m_visits) as summe\r\nFROM\r\n  `Piano.total_visits${dataset_zeitraum_app:raw}`\r\nWHERE $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  )\r\nSELECT summe as m_visits, 1 as id FROM ${dataset_not_fevercurve})\r\nSELECT  w.m_visits + a.m_visits as current_sum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n  )\r\nSELECT CASE\r\n    WHEN current_sum / past_sum - 1 > 0 THEN CONCAT(\"+\",REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"%\")\r\n    ELSE CONCAT(REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"%\") END,\r\nFROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz in %"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web & App",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Differenz"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 12,
          "y": 25
        },
        "id": 35,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 18
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\n  with w as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, SUM(COALESCE(m_page_loads,0)) as m_page_loads,1 as id\r\n    FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    GROUP BY site_level2, tmstp\r\n    ORDER BY tmstp DESC\r\n    LIMIT 1), daily_data AS(\r\n       SELECT  m_visits, m_page_loads, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_web:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    )\r\n    SELECT * FROM ${dataset_kpi}),\r\na as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT   SUM(COALESCE(m_visits,0)) as m_visits,  SUM(COALESCE(m_page_loads,0)) as m_page_loads, 1 as id\r\n  FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n  GROUP BY site_level2, tmstp\r\n  ORDER BY m_visits DESC\r\n  LIMIT 1),\r\n  daily_data AS(\r\n    SELECT  m_visits, m_page_loads, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_app:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote})\r\n  SELECT * FROM ${dataset_kpi}\r\n  )\r\nSELECT ROUND(SUM(w.m_page_loads+a.m_page_loads)/SUM(w.m_visits + a.m_visits),1) as past_sum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n),\r\ncurrent_value AS (\r\nwith w as (\r\n  SELECT m_visits, date, m_page_loads, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\n  WHERE \r\n    ($webFilter\r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n    ) \r\n),\r\na as (\r\n  SELECT m_visits, date, m_page_loads, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_app:raw}` \r\n  WHERE $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n)\r\nSELECT ROUND(SUM(w.m_page_loads+a.m_page_loads)/SUM(w.m_visits + a.m_visits),1) as current_sum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n  )\r\nSELECT CASE\r\n    WHEN current_sum / past_sum - 1 > 0 THEN CONCAT(\"+\",REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"%\")\r\n    ELSE CONCAT(REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"%\") END,\r\nFROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "f0_": "Differenz"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Differenz"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 17,
          "y": 25
        },
        "id": 36,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 18
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\n with w as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n    FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n    GROUP BY site_level2, tmstp\r\n    ORDER BY tmstp DESC\r\n    LIMIT 1), daily_data AS(\r\n       SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_web:raw}` \r\n    WHERE $webFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n    )\r\n    SELECT * FROM ${dataset_kpi}),\r\na as (\r\n  with adjusted_lagged_data AS(\r\n  SELECT   SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM  `Piano.total_visits${feverCurveDataset:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\n  AND tmstp  <= DATETIME_SUB(\"${comp_fever}\", INTERVAL $time_shift DAY)\r\n  GROUP BY site_level2, tmstp\r\n  ORDER BY visits DESC\r\n  LIMIT 1),\r\n  daily_data AS(\r\n    SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_vergleichs_zeitraum_app:raw}` \r\n  WHERE $appFilter AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote})\r\n  SELECT * FROM ${dataset_kpi}\r\n  )\r\nSELECT ROUND((a.time_spent + w.time_spent)/(a.visits + w.visits),1) as past_sum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n),\r\ncurrent_value AS (\r\nwith w as (\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM  `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\n  WHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n   AND $webFilter\r\n),\r\na as(\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits) as time_spent, SUM(m_visits)as visits, 2 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_app:raw}`  \r\n   WHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n   AND $appFilter\r\n)\r\nSELECT  ROUND((a.time_spent + w.time_spent)/(a.visits + w.visits),1) as current_sum\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n  )\r\nSELECT CASE\r\n    WHEN current_sum / past_sum - 1 > 0 THEN CONCAT(\"+\",REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"%\")\r\n    ELSE CONCAT(REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"\") END AS Differenz,\r\nFROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Differenz"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 2,
          "x": 22,
          "y": 25
        },
        "id": 37,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 18
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\n  with web as \r\n(\r\n  SELECT \r\n    SUM(COALESCE(m_av_playbacks,0)) as Zeitraum, 1 as id\r\n  FROM ${dataset_vergleichszeitraum_av}\r\n  $sendungen_av_join_filter\r\n  WHERE date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} AND $avwebFilter\r\n  AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'MDR')\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n\r\n),\r\napp as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum, 1 as id\r\nFROM  \r\n  ${dataset_vergleichszeitraum_av}  \r\n  WHERE ${av_condition} \r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} \r\nAND ($av_app_condition_audio OR $av_app_condition_video) \r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n\r\n )\r\nSELECT  COALESCE(SUM(web.Zeitraum),0) + COALESCE(SUM(app.Zeitraum),0) as past_sum\r\n\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n),\r\ncurrent_value AS (\r\nwith web as \r\n(\r\n  SELECT \r\n    SUM(COALESCE(m_av_playbacks,0)) as Zeitraum, 1 as id\r\n  FROM ${dataset_zeitraum_av} \r\n  $sendungen_av_join_filter\r\n  WHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} AND $avwebFilter\r\n  AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'MDR')\r\n  AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n),\r\napp as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum, 1 as id\r\nFROM  \r\n  ${dataset_zeitraum_av}  \r\n  WHERE ${av_condition} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND ($av_app_condition_audio OR $av_app_condition_video)\r\nAND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n )\r\nSELECT COALESCE(SUM(web.Zeitraum),0) + COALESCE(SUM(app.Zeitraum),0) as current_sum\r\n\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n  )\r\nSELECT CASE\r\n    WHEN current_sum / past_sum - 1 > 0 THEN CONCAT(\"+\",REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"%\")\r\n    ELSE CONCAT(REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"\") END AS Differenz,\r\nFROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 29
        },
        "id": 17,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 54
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Web')), 'Web')\r\nFROM(\r\nSELECT 'Web' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 29
        },
        "id": 60,
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "horizontal",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT  SUM(COALESCE(m_visits,0)) as m_visits\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\n    WHERE $webFilter AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "includeByName": {},
              "indexByName": {},
              "renameByName": {
                "m_visits": "${Zeitraumlabels:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 2,
          "x": 7,
          "y": 29
        },
        "id": 30,
        "options": {
          "displayLabels": [
            "percent"
          ],
          "legend": {
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true,
            "values": []
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  SELECT  SUM(COALESCE(m_visits,0)) as m_visits, 1 as id\r\n    FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\n    WHERE $webFilter AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}),\r\na as (\r\n  WITH adjusted_lagged_data AS (\r\n  SELECT\r\n     SUM(m_visits) as summe FROM\r\n     `Piano.total_visits${feverCurveDataset:raw}`\r\n  WHERE\r\n  $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n    GROUP BY site_level2, tmstp\r\n  ORDER BY summe DESC\r\n  LIMIT 1\r\n),\r\ndaily_data AS (SELECT\r\n  sum(m_visits) as summe\r\nFROM\r\n  `Piano.total_visits${dataset_zeitraum_app:raw}`\r\nWHERE $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  )\r\nSELECT summe as m_visits, 1 as id FROM ${dataset_not_fevercurve} )\r\nSELECT  w.m_visits as Web, a.m_visits as App\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n\r\n\r\n\r\n",
            "refId": "a",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "${Zeitraumlabels:text} ${Uhrzeit:text}"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 9,
          "y": 29
        },
        "id": 40,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT ROUND(SUM(m_page_loads)/SUM(m_visits),1) as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\n  WHERE \r\n    ($webFilter\r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n    ) ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "includeByName": {},
              "indexByName": {},
              "renameByName": {
                "id": "${Zeitraumlabels:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 2,
          "x": 12,
          "y": 29
        },
        "id": 97,
        "options": {
          "displayMode": "gradient",
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": false
          },
          "maxVizHeight": 300,
          "minVizHeight": 10,
          "minVizWidth": 0,
          "namePlacement": "auto",
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "sizing": "auto",
          "text": {},
          "valueMode": "color"
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  SELECT SUM(m_page_loads)/SUM(m_visits) as m_visits, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\n  WHERE $webFilter\r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n),\r\na as (\r\n  SELECT SUM(m_page_loads)/SUM(m_visits) as m_visits, 1 as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_app:raw}` \r\n  WHERE $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n)\r\nSELECT  w.m_visits as Web, a.m_visits as App\r\nFROM w \r\nJOIN a ON w.id = a.id\r\n\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 14,
          "y": 29
        },
        "id": 41,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT  SUM(m_time_spent_per_visits/1000 * m_visits)/SUM(m_visits) as id\r\nFROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\nWHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} AND $webFilter ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "includeByName": {},
              "indexByName": {},
              "renameByName": {
                "id": "${Zeitraumlabels:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "decimals": 1,
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 2,
          "x": 17,
          "y": 29
        },
        "id": 98,
        "options": {
          "displayMode": "gradient",
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": false
          },
          "maxVizHeight": 300,
          "minVizHeight": 10,
          "minVizWidth": 0,
          "namePlacement": "auto",
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "sizing": "auto",
          "text": {},
          "valueMode": "color"
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with w as (\r\n  SELECT  SUM(m_time_spent_per_visits/1000 * m_visits)/SUM(m_visits) as Zeitraum, 1 as id\r\nFROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_web:raw}` \r\nWHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} AND $webFilter \r\n),\r\na as(\r\n   SELECT  SUM(m_time_spent_per_visits/1000 * m_visits)/SUM(m_visits) as Zeitraum, 1 as id\r\nFROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_app:raw}` \r\nWHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} AND $appFilter \r\n)\r\nSELECT  w.Zeitraum as Web, a.Zeitraum as App\r\nFROM w \r\nJOIN a ON w.id = a.id",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text} ${Uhrzeit}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 19,
          "y": 29
        },
        "id": 42,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n    SUM(COALESCE(m_av_playbacks,0)) as Zeitraum\r\n  FROM ${dataset_zeitraum_av:raw}\r\n  $sendungen_av_join_filter\r\n  WHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} AND $avwebFilter\r\n      AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'MDR')\r\n      AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 2,
          "x": 22,
          "y": 29
        },
        "id": 48,
        "options": {
          "displayLabels": [
            "percent"
          ],
          "legend": {
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as \r\n(\r\n  SELECT \r\n    SUM(COALESCE(m_av_playbacks,0)) as Zeitraum, 1 as id\r\n  FROM ${dataset_zeitraum_av:raw} \r\n  $sendungen_av_join_filter\r\n  WHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} AND $avwebFilter\r\n      AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n      AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'MDR')\r\n\r\n),\r\napp as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum, 1 as id\r\nFROM  \r\n  ${dataset_zeitraum_av:raw}\r\n  WHERE ${av_condition} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND ($av_app_condition_audio OR $av_app_condition_video)\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n\r\n )\r\nSELECT SUM(web.Zeitraum) as Web, SUM(app.Zeitraum) as App\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 32
        },
        "id": 18,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 54
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('App')), 'App')\r\nFROM(\r\nSELECT 'App' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "summe"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 32
        },
        "id": 27,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH adjusted_lagged_data AS (\r\n  SELECT\r\n     SUM(m_visits) as summe FROM\r\n     `Piano.total_visits${feverCurveDataset:raw}`\r\n  WHERE\r\n  $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n    GROUP BY site_level2, tmstp\r\n  ORDER BY summe DESC\r\n  LIMIT 1\r\n),\r\ndaily_data AS (SELECT\r\n  sum(m_visits) as summe\r\nFROM\r\n  `Piano.total_visits${dataset_zeitraum_app:raw}`\r\nWHERE $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  )\r\nSELECT * FROM ${dataset_not_fevercurve} ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {},
              "renameByName": {
                "m_visits": "${Zeitraum:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 9,
          "y": 32
        },
        "id": 43,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "  SELECT ROUND(SUM(m_page_loads)/SUM(m_visits),1) as id\r\n  FROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_app:raw}` \r\n  WHERE \r\n    ($appFilter\r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n    ) ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "includeByName": {},
              "indexByName": {},
              "renameByName": {
                "id": "${Zeitraumlabels:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraum:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 14,
          "y": 32
        },
        "id": 44,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT  SUM(m_time_spent_per_visits/1000 * m_visits)/SUM(m_visits) as id\r\nFROM `ndr-code-bi-dashboard.Piano.total_visits${dataset_zeitraum_app:raw}` \r\nWHERE date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} AND $appFilter ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "includeByName": {},
              "indexByName": {},
              "renameByName": {
                "id": "${Zeitraumlabels:text} ${Uhrzeit:text}"
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text} ${Uhrzeit}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 19,
          "y": 32
        },
        "id": 45,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\nFROM  \r\n  ${dataset_zeitraum_av:raw}\r\n  WHERE ${av_condition} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND ($av_app_condition_audio OR $av_app_condition_video)\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 18,
          "x": 0,
          "y": 35
        },
        "id": 100,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "Hinweis: Momentan keine Web-AV-Messung fÃ¼r die NDR LÃ¤nder mÃ¶glich.",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 37
        },
        "id": 51,
        "panels": [],
        "title": "Top Artikel",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Sophora ID"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "visits_web"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Web"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "visits_app"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "App"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "page_views"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Page V."
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "page_web"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Web"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "page_app"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "App"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Artikel"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 455
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "title": "${__data.fields.url}",
                      "url": "${__data.fields.url}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora ID"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 328
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Visits"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 98
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 91
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 85
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Page V."
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 95
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Publiziert"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 251
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "url"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Visits"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "page_views"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 38
        },
        "id": 62,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  SELECT publishing_date, content_id_sophora, content_titel, url, IFNULL(SUM(m_visits),0) as m_visits, IFNULL(SUM(m_page_loads),0) as m_page_loads, uuid, page_chapter1 as Kapitel FROM(\r\n  SELECT   \r\n    FIRST_VALUE(publishing_date) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as publishing_date,\r\n    FIRST_VALUE(content_id_sophora) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as content_id_sophora,\r\n    FIRST_VALUE(content_titel) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as content_titel, \r\n    FIRST_VALUE(url) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as url, \r\n    m_visits,\r\n    m_page_loads, \r\n    uuid,\r\n    page_chapter1\r\n  from `ndr-code-bi-dashboard.Piano.articles${articleTable}` \r\n  WHERE \r\n    $listwebFilter \r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n    AND objekt_typ NOT LIKE 'indexPage'\r\n    AND content_id_sophora NOT LIKE '%index%'\r\n    AND content_id_sophora NOT LIKE '%N/A%'\r\n    AND content_id_sophora NOT LIKE '%verteilseite%'\r\n    AND content_id_sophora NOT LIKE '%nachrichtenfeed%'\r\n    )\r\n    GROUP BY uuid, publishing_date, content_id_sophora, content_titel, url, page_chapter1\r\n),\r\napp as (\r\n  SELECT IFNULL(SUM(m_visits),0) as m_visits, publishing_date, content_id_sophora, content_titel, url, IFNULL(SUM(m_page_loads),0) as m_page_loads, uuid FROM (\r\n  SELECT \r\n    m_visits, \r\n    FIRST_VALUE(publishing_date) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as publishing_date,\r\n    FIRST_VALUE(content_id_sophora) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as content_id_sophora,\r\n    FIRST_VALUE(content_titel) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as content_titel, \r\n    FIRST_VALUE(url) OVER (PARTITION BY uuid ORDER BY publishing_date DESC) as url, \r\n    m_page_loads, \r\n    uuid\r\n  from `ndr-code-bi-dashboard.Piano.articles${articleTable}` \r\n  WHERE CONTAINS_SUBSTR(site_level2, '$app_name')\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n  AND content_id_sophora NOT LIKE '%index%'\r\n  AND content_id_sophora NOT LIKE '%N/A%'\r\n   AND (\r\n        CASE \r\n            WHEN \"$LRA\" = 'NDR' THEN\r\n                content_titel NOT LIKE '%Video Livestream%'\r\n            AND content_titel NOT LIKE '%Startteaser%'\r\n            AND content_titel NOT LIKE '%startteaser%'\r\n            AND content_titel NOT LIKE '%-Anmelden%'\r\n            AND content_titel NOT LIKE '%_Start'\r\n            AND content_titel != 'Anmelden'\r\n            AND content_titel != 'Jetzt lÃ¤uft'\r\n        ELSE\r\n          TRUE\r\n        END))\r\n  GROUP BY uuid, publishing_date, content_id_sophora, content_titel, url\r\n  ),\r\nsum_raw as (\r\n  SELECT \r\n  IFNULL(web.publishing_date, app.publishing_date) as publishing_date,\r\n  IFNULL(web.content_titel, app.content_titel) as content_titel, \r\n  IFNULL(web.content_id_sophora,app.content_id_sophora) as content_id_sophora, \r\n  IFNULL(web.url, app.url) as url,\r\n  IFNULL(web.uuid, app.uuid) as uuid,\r\n  IFNULL(web.m_visits,0) as visits_web, \r\n  IFNULL(app.m_visits,0) as visits_app, \r\n  IFNULL(web.m_page_loads,0) as page_web, \r\n  IFNULL(app.m_page_loads,0) as page_app, \r\n  Kapitel\r\n  FROM web\r\n  FULL JOIN app \r\n  ON web.uuid = app.uuid\r\n)\r\nSELECT \r\n  IF(LENGTH(MAX(publishing_date)) > 4,FORMAT_DATETIME('%d.%m.%Y | %R Uhr', DATETIME(MAX(publishing_date))),MAX(publishing_date)) as Datum, \r\n  content_titel as Artikel, \r\n  content_id_sophora as Sophora, \r\n  MAX(url) as url, \r\n  visits_web + visits_app as Visits, \r\n  visits_web as visits_web, \r\n  visits_app as visits_app, \r\n  page_web + page_app as page_views, \r\n  page_web as page_web, \r\n  page_app as page_app, \r\n  Kapitel\r\nFROM sum_raw\r\nGROUP BY content_titel,  content_id_sophora, uuid, Visits, visits_web, visits_app, page_views, page_web, page_app, Kapitel\r\nORDER BY Visits DESC\r\nLIMIT 100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top Artikel",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "includeByName": {},
              "indexByName": {},
              "renameByName": {
                "Datum": "Publiziert"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 51
        },
        "id": 53,
        "panels": [],
        "title": "AV KPI",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "noValue": "Web",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 52
        },
        "id": 67,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 54
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "refId": "A"
          }
        ],
        "title": "",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 10,
          "x": 4,
          "y": 52
        },
        "id": 68,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 54
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Video - Wiedergaben')), 'Video - Wiedergaben')\r\nFROM(\r\nSELECT 'Video - Wiedergaben' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 10,
          "x": 14,
          "y": 52
        },
        "id": 69,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 54
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Audio - Wiedergaben')), 'Audio - Wiedergaben')\r\nFROM(\r\nSELECT 'Audio - Wiedergaben' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "Bei den LÃ¤ndern vom NDR: Keine Web-AV-Messung mÃ¶glich.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 4,
          "x": 0,
          "y": 55
        },
        "id": 64,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 54
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Web & App')), 'Web & App')\r\nFROM(\r\nSELECT 'Web & App' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "NDR LÃ¤nder: Keine Web-AV-Messung mÃ¶glich.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 5,
          "x": 4,
          "y": 55
        },
        "id": 71,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 30
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\n  1 as id\r\nFROM \r\n  ${dataset_zeitraum_av:raw} \r\n  $sendungen_av_join_filter\r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n    AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n\r\n), app as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\n  1 as id\r\nFROM  \r\n  ${dataset_zeitraum_av:raw}\r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND $av_app_condition_video\r\n\r\n)\r\nSELECT IFNULL(SUM(web.Zeitraum),0) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 9,
          "y": 55
        },
        "id": 72,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "vertical",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\n  1 as id\r\nFROM \r\n  ${dataset_vergleichszeitraum_av:raw} \r\n  $sendungen_av_join_filter\r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\nAND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n), app as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\n  1 as id\r\nFROM  \r\n  ${dataset_vergleichszeitraum_av:raw}\r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\nAND $av_app_condition_video\r\n\r\n)\r\nSELECT IFNULL(SUM(web.Zeitraum),0) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 5,
          "x": 14,
          "y": 55
        },
        "id": 77,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 30
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\n  1 as id\r\nFROM \r\n  ${dataset_zeitraum_av:raw}\r\n  $sendungen_av_join_filter \r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n    AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n\r\n), app as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\n  1 as id\r\nFROM  \r\n  ${dataset_zeitraum_av:raw}\r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND $av_app_condition_audio\r\n\r\n)\r\nSELECT IFNULL(SUM(web.Zeitraum),0) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "$Vergleichszeitraum"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 19,
          "y": 55
        },
        "id": 78,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\n  1 as id\r\nFROM \r\n  ${dataset_vergleichszeitraum_av:raw}\r\n  $sendungen_av_join_filter  \r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\nAND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n), app as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\n  1 as id\r\nFROM  \r\n  ${dataset_vergleichszeitraum_av:raw} \r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} \r\nAND $av_app_condition_audio\r\n\r\n)\r\nSELECT IFNULL(SUM(web.Zeitraum),0) + IFNULL(SUM(app.Zeitraum),0) as Zeitraum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 2,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "f0_"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 9,
          "y": 59
        },
        "id": 73,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\n  with web as (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\n  1 as id\r\nFROM \r\n  ${dataset_vergleichszeitraum_av:raw}  \r\n  $sendungen_av_join_filter\r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\nAND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n), app as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\n  1 as id\r\nFROM  \r\n  ${dataset_vergleichszeitraum_av:raw} \r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote} \r\nAND $av_app_condition_video\r\n\r\n)\r\nSELECT IFNULL(SUM(web.Zeitraum),0) + IFNULL(SUM(app.Zeitraum),0) as past_sum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n),\r\ncurrent_value AS (\r\n  with web as (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\n  1 as id\r\nFROM \r\n  ${dataset_zeitraum_av:raw}\r\n  $sendungen_av_join_filter  \r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n    AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n\r\n), app as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\n  1 as id\r\nFROM  \r\n  ${dataset_zeitraum_av:raw} \r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND $av_app_condition_video\r\n\r\n)\r\nSELECT IFNULL(SUM(web.Zeitraum),0) + IFNULL(SUM(app.Zeitraum),0) as current_sum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n  )\r\nSELECT CASE\r\n    WHEN current_sum / past_sum - 1 > 0 THEN CONCAT(\"+\",REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"%\")\r\n    ELSE CONCAT(REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"\") END,\r\nFROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00817e",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "f0_"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Differenz in %"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 19,
          "y": 59
        },
        "id": 79,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 40
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "WITH past_value as(\r\n  with web as (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\n  1 as id\r\nFROM \r\n  ${dataset_vergleichszeitraum_av:raw}\r\n  $sendungen_av_join_filter  \r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\nAND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n), app as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\n  1 as id\r\nFROM  \r\n  ${dataset_vergleichszeitraum_av:raw} \r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_comp_timeframe_start:doublequote} AND date <= ${bq_comp_timeframe_end:doublequote}\r\nAND $av_app_condition_audio\r\n)\r\nSELECT IFNULL(SUM(web.Zeitraum),0) + IFNULL(SUM(app.Zeitraum),0) as past_sum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n),\r\ncurrent_value AS (\r\nwith web as (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\n  1 as id\r\nFROM \r\n  ${dataset_zeitraum_av:raw}\r\n  $sendungen_av_join_filter  \r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\nAND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n), app as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\n  1 as id\r\nFROM  \r\n  ${dataset_zeitraum_av:raw} \r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND $av_app_condition_audio\r\n)\r\nSELECT IFNULL(SUM(web.Zeitraum),0) + IFNULL(SUM(app.Zeitraum),0) as current_sum\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n  )\r\nSELECT CASE\r\n    WHEN current_sum / past_sum - 1 > 0 THEN CONCAT(\"+\",REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"%\")\r\n    ELSE CONCAT(REPLACE(CAST(ROUND((current_sum / past_sum - 1) * 100,1) AS STRING),\".\",\",\"),\"\") END,\r\nFROM current_value,past_value as relative_difference",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 63
        },
        "id": 65,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 54
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('Web')), 'Web')\r\nFROM(\r\nSELECT 'Web' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "description": "NDR LÃ¤nder: Keine Web-AV-Messung mÃ¶glich.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 63
        },
        "id": 74,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\nFROM \r\n  ${dataset_zeitraum_av:raw}\r\n  $sendungen_av_join_filter\r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n    AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 7,
          "x": 7,
          "y": 63
        },
        "id": 76,
        "options": {
          "displayLabels": [
            "percent"
          ],
          "legend": {
            "displayMode": "table",
            "placement": "right",
            "showLegend": true,
            "values": []
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\n  1 as id\r\nFROM \r\n  ${dataset_zeitraum_av:raw} \r\n  $sendungen_av_join_filter\r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"video\" OR av_content_type = \"Video\")\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n    AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n\r\n), app as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\n  1 as id\r\nFROM  \r\n  ${dataset_zeitraum_av:raw}\r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND $av_app_condition_video\r\n\r\n)\r\nSELECT IFNULL(SUM(web.Zeitraum),0) AS Web, IFNULL(SUM(app.Zeitraum),0) as App\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "a",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 14,
          "y": 63
        },
        "id": 81,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\nFROM \r\n  ${dataset_zeitraum_av:raw}\r\n  $sendungen_av_join_filter\r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\nAND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "semi-dark-blue",
              "mode": "fixed"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a0d6c4",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#1da3a1",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "displayName"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 7,
          "x": 17,
          "y": 63
        },
        "id": 80,
        "options": {
          "displayLabels": [
            "percent"
          ],
          "legend": {
            "displayMode": "list",
            "placement": "right",
            "showLegend": true,
            "values": []
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  SELECT \r\n  SUM(COALESCE(m_av_playbacks,0)) as Zeitraum,\r\n  1 as id\r\nFROM \r\n  ${dataset_zeitraum_av:raw}\r\n  $sendungen_av_join_filter \r\nWHERE \r\n$avwebFilter And\r\ndate >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND (av_content_type = \"audio\" OR av_content_type = \"Audio\")\r\n    AND bi_av_broadcasting_type NOT IN ('live', 'Live')\r\n    AND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') \r\nOR \"$LRA\" <> 'MDR')\r\n\r\n), app as (\r\n  SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\n  1 as id\r\nFROM  \r\n  ${dataset_zeitraum_av:raw}\r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND $av_app_condition_audio\r\n\r\n)\r\nSELECT IFNULL(SUM(web.Zeitraum),0) AS Web, IFNULL(SUM(app.Zeitraum),0) as App\r\nFROM web\r\nJOIN app\r\nON web.id = app.id\r\n\r\n",
            "refId": "a",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "text",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 66
        },
        "id": 66,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 54
          },
          "textMode": "value",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CONCAT(REPEAT(\" \", $filled_size_headline - CHAR_LENGTH('App')), 'App')\r\nFROM(\r\nSELECT 'App' as Visits\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 66
        },
        "id": 75,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\nFROM  \r\n  ${dataset_zeitraum_av:raw}\r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND $av_app_condition_video\r\n\r\n\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#00c7c4",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Zeitraum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "${Zeitraumlabels:text}"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 14,
          "y": 66
        },
        "id": 82,
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/.*/",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "titleSize": 20,
            "valueSize": 34
          },
          "textMode": "value_and_name",
          "wideLayout": true
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  SUM(COALESCE(m_playbutton, m_av_playbacks, 0)) as Zeitraum,\r\nFROM  \r\n  ${dataset_zeitraum_av:raw}\r\n  WHERE ${av_condition_without_live} \r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\nAND $av_app_condition_audio\r\n\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 17,
          "x": 0,
          "y": 69
        },
        "id": 99,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "Hinweis: Momentan keine Web-AV-Messung fÃ¼r die NDR LÃ¤nder mÃ¶glich.",
          "mode": "markdown"
        },
        "pluginVersion": "11.3.1",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 71
        },
        "id": 55,
        "panels": [],
        "title": "Top Audios & Videos on Demand",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Titel"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 606
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "targetBlank": true,
                      "title": "${__data.fields.url}",
                      "url": "${__data.fields.url}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora ID"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 326
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "url"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "MedienlÃ¤nge"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "dthms"
                },
                {
                  "id": "displayName",
                  "value": "LÃ¤nge"
                },
                {
                  "id": "custom.align",
                  "value": "center"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Publiziert"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 257
                },
                {
                  "id": "unit",
                  "value": "time: DD.MM.YYYY | HH:mm \\U\\h\\r"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Wiederg."
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 100
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 107
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 97
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Typ"
              },
              "properties": [
                {
                  "id": "custom.align",
                  "value": "center"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 72
        },
        "id": 87,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  SELECT bi_av_publication_date,\r\n  bi_av_content, \r\n  bi_av_content_id,\r\n  bi_av_url as url,\r\n  sum(m_av_playbacks) as wiedergabe,\r\n  CONCAT(CONCAT(\r\n\r\nÂ  CASE WHEN LENGTH(CAST(DIV(av_content_duration,60) AS String))<2 THEN CONCAT(\"0\",CAST(DIV(av_content_duration,60) AS String)) ELSE CAST(DIV(av_content_duration,60) AS String)Â  END ,\r\n\r\nÂ  \":\",CASE WHEN LENGTH(CAST(MOD(av_content_duration,60) AS String))<2 THEN CONCAT(\"0\",CAST(MOD(av_content_duration,60) AS String)) ELSE CAST(MOD(av_content_duration,60) AS String)Â  END),\" Min\") as av_content_duration,\r\nSUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) wiedergaberate,\r\nav_content_type,\r\nbi_av_broadcasting_type,\r\n   FROM(\r\n  SELECT \r\n    FIRST_VALUE(bi_av_publication_date) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_publication_date,\r\n    CAST(FIRST_VALUE(av_content_duration) OVER (PARTITION BY bi_av_content_id ORDER BY bi_av_publication_date DESC)/1000 AS INT) as av_content_duration,\r\n    m_av_playbacks,\r\n    --CAST(av_content_duration/1000 AS INT) as av_content_duration,\r\n    bi_av_content_id,\r\n    m_av_average_playback_completion_rate,\r\n    bi_av_broadcasting_type,\r\n    FIRST_VALUE(bi_av_content) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_content, \r\n    FIRST_VALUE(bi_av_url) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_url, \r\n    av_content_type\r\n  from\r\n    ${dataset_zeitraum_av:raw} \r\n    $sendungen_av_join_filter\r\n  WHERE\r\n    $avwebFilter\r\n    AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\n    AND bi_av_content_id NOT LIKE '%index%'\r\n    AND bi_av_broadcasting_type = \"ondemand\"\r\n    )\r\n    WHERE m_av_playbacks > 0\r\n  GROUP By\r\n    bi_av_publication_date,bi_av_content,av_content_duration, av_content_type,\r\n    bi_av_content_id, bi_av_broadcasting_type, bi_av_url\r\n),\r\napp as (\r\nSELECT \r\nbi_av_publication_date,\r\nbi_av_content, bi_av_content_id,\r\nbi_av_url as url,\r\nsum(m_av_playbacks) as wiedergabe, \r\nCONCAT(CONCAT(\r\n\r\nÂ  CASE WHEN LENGTH(CAST(DIV(MAX(av_content_duration),60) AS String))<2 THEN CONCAT(\"0\",CAST(DIV(MAX(av_content_duration),60) AS String)) ELSE CAST(DIV(MAX(av_content_duration),60) AS String)Â  END ,\r\n\r\nÂ  \":\",CASE WHEN LENGTH(CAST(MOD(MAX(av_content_duration),60) AS String))<2 THEN CONCAT(\"0\",CAST(MOD(MAX(av_content_duration),60) AS String)) ELSE CAST(MOD(MAX(av_content_duration),60) AS String)Â  END),\" Min\") as av_content_duration,\r\nCASE \"$LRA\"\r\nWHEN \"NDR\" THEN NULL\r\nELSE 100*SUM(m_av_playbacks * m_av_average_playback_completion_rate) / SUM(m_av_playbacks) END as wiedergaberate,\r\nav_content_type,\r\nbi_av_broadcasting_type,\r\n--device_type,\r\nFROM\r\n(\r\nSELECT\r\nFIRST_VALUE($av_pub_date) OVER (PARTITION BY bi_av_content_id ORDER BY COALESCE(m_playbutton, m_av_playbacks) DESC) as bi_av_publication_date,  \r\nCOALESCE(m_playbutton,m_av_playbacks) as m_av_playbacks, \r\nCASE  \r\n      WHEN av_content_duration is NULL THEN NULL\r\n      ELSE CAST((av_content_duration/1000) AS INT) END av_content_duration,\r\n--CAST((av_content_duration/1000) AS INT) as av_content_duration,  \r\nm_av_average_playback_completion_rate, \r\nCOALESCE(objekt_typ, av_content_type) as av_content_type,  --objekt_typ ist die neue Variable anstelle content_typ\r\nCOALESCE(content_id_sophora, bi_av_content_id) as bi_av_content_id,  \r\nCOALESCE(objekt_typ ,bi_av_broadcasting_type) as bi_av_broadcasting_type ,  \r\nFIRST_VALUE(bi_av_url) OVER (PARTITION BY $av_content_id ORDER BY COALESCE(m_playbutton, m_av_playbacks) DESC) as bi_av_url,  \r\n\r\n--device_type,\r\nFIRST_VALUE($av_content) OVER (PARTITION BY COALESCE(content_id_sophora,bi_av_content_id) ORDER BY COALESCE(m_playbutton,m_av_playbacks) DESC) as bi_av_content  \r\nFROM \r\n${dataset_zeitraum_av:raw} \r\nWHERE ${av_condition}\r\nAND COALESCE(content_id_sophora, bi_av_content_id) NOT LIKE '%index%'  \r\nAND COALESCE(objekt_typ, bi_av_broadcasting_type) IN $av_on_demand_filter  \r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote})  \r\nWHERE m_av_playbacks > 0\r\nGROUP BY bi_av_publication_date,bi_av_content,av_content_type,bi_av_content_id, bi_av_broadcasting_type, bi_av_url\r\n),\r\nsum_raw as (\r\n  SELECT\r\n    IFNULL(\r\n      web.bi_av_publication_date,\r\n      app.bi_av_publication_date\r\n    ) as Publiziert,\r\n    IFNULL(web.bi_av_content, app.bi_av_content) as Titel,\r\n    IFNULL(web.bi_av_content_id, app.bi_av_content_id) as bi_av_content_id,\r\n    IFNULL(web.av_content_duration, app.av_content_duration) as av_content_duration,\r\n    IFNULL(web.url, app.url) as url,\r\n    IFNULL(web.wiedergabe, 0) as playbacks_web,\r\n    IFNULL(web.wiedergabe, 0) + IFNULL(app.wiedergabe, 0) as playbacks,\r\n    IFNULL(app.wiedergabe, 0) as playbacks_app,\r\n    IFNULL(web.av_content_type, app.av_content_type) as av_content_type\r\n  FROM\r\n    web FULL\r\n    JOIN app ON web.bi_av_content_id = app.bi_av_content_id \r\n)\r\nSELECT\r\n  *\r\nFROM\r\nsum_raw\r\nORDER BY\r\n  playbacks DESC\r\nLIMIT\r\n  100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top 100 App Audios & Videos on Demand",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {
                "Publiziert": 0,
                "Titel": 1,
                "av_content_duration": 6,
                "av_content_type": 8,
                "bi_av_content_id": 2,
                "playbacks": 3,
                "playbacks_app": 5,
                "playbacks_web": 4,
                "url": 7
              },
              "renameByName": {
                "av_content_duration": "MedienlÃ¤nge",
                "av_content_type": "Typ",
                "bi_av_content_id": "Sophora ID",
                "playbacks": "Wiederg.",
                "playbacks_app": "App",
                "playbacks_web": "Web"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 85
        },
        "id": 57,
        "panels": [],
        "title": "Top Audios & Videos Livestream",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "filterable": true,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Titel"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 606
                },
                {
                  "id": "links",
                  "value": [
                    {
                      "targetBlank": true,
                      "title": "${__data.fields.url}",
                      "url": "${__data.fields.url}"
                    }
                  ]
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sophora ID"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 235
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "url"
              },
              "properties": [
                {
                  "id": "custom.hidden",
                  "value": true
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "av_content_duration"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "dthms"
                },
                {
                  "id": "displayName"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Publiziert"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 257
                },
                {
                  "id": "unit",
                  "value": "time: DD.MM.YYYY | HH:mm \\U\\h\\r"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Wiederg."
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 100
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Web"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 107
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "App"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 97
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 86
        },
        "id": 89,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "enablePagination": true,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Wiederg."
            }
          ]
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\n  SELECT \r\nbi_av_publication_date,\r\nbi_av_content, bi_av_content_id,\r\nbi_av_url as url,\r\nsum(m_av_playbacks) as wiedergabe,\r\nav_content_type,\r\nbi_av_broadcasting_type,\r\n\r\nFROM\r\n(\r\nSELECT\r\nFIRST_VALUE(bi_av_publication_date) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_publication_date, \r\nm_av_playbacks,\r\nav_content_type, bi_av_content_id,\r\nbi_av_broadcasting_type, \r\nFIRST_VALUE(bi_av_url) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_url, \r\n\r\n--device_type,\r\nFIRST_VALUE(bi_av_content) OVER (PARTITION BY bi_av_content_id ORDER BY m_av_playbacks DESC) as bi_av_content, \r\nCAST(av_content_duration/1000 AS INT) as av_content_duration,\r\nFROM \r\n  `ndr-code-bi-dashboard.Piano.av${av_table_fever_curve}`\r\n  $sendungen_av_join_filter\r\nWHERE $avwebFilter_without_live\r\nAND bi_av_content_id NOT LIKE '%index%'\r\nAND bi_av_broadcasting_type = \"live\"\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote})\r\nWHERE m_av_playbacks > 0\r\nAND ((\"$LRA\" = 'MDR' AND bi_av_url NOT LIKE '%app%') OR \"$LRA\" <> 'MDR')\r\nGROUP BY bi_av_publication_date,bi_av_content,\r\nav_content_type,bi_av_content_id, bi_av_broadcasting_type, bi_av_url, av_content_duration\r\n),\r\napp as (\r\n  SELECT \r\nbi_av_publication_date,\r\nbi_av_content, bi_av_content_id,\r\nbi_av_url as url,\r\nsum(m_av_playbacks) as wiedergabe,\r\nav_content_type,\r\nbi_av_broadcasting_type,\r\nFROM\r\n(\r\nSELECT\r\nFIRST_VALUE($av_pub_date) OVER (PARTITION BY $av_content_id ORDER BY COALESCE(m_playbutton, m_av_playbacks) DESC) as bi_av_publication_date, \r\nCOALESCE(m_playbutton,m_av_playbacks) as m_av_playbacks,\r\nCOALESCE(content_typ, av_content_type) as av_content_type, $av_content_id as bi_av_content_id,\r\nbi_av_broadcasting_type, \r\nFIRST_VALUE(bi_av_url) OVER (PARTITION BY $av_content ORDER BY COALESCE(m_playbutton, m_av_playbacks) DESC) as bi_av_url, \r\nCAST(av_content_duration/1000 AS INT) as av_content_duration,\r\n\r\n--device_type,\r\nFIRST_VALUE($av_content) OVER (PARTITION BY $av_content_id ORDER BY COALESCE(m_playbutton, m_av_playbacks) DESC) as bi_av_content, \r\nFROM \r\n${dataset_zeitraum_av:raw} \r\nWHERE ${av_condition_without_live}\r\nAND $av_content_id NOT LIKE '%index%'\r\nAND COALESCE(objekt_typ, bi_av_broadcasting_type) IN $av_live_stream_filter\r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote})\r\nWHERE m_av_playbacks > 0\r\nGROUP BY bi_av_publication_date,bi_av_content,\r\nav_content_type,bi_av_content_id, bi_av_broadcasting_type, bi_av_url, av_content_duration\r\n),\r\nsum_raw as (\r\n  SELECT\r\n    IFNULL(\r\n      web.bi_av_publication_date,\r\n      app.bi_av_publication_date\r\n    ) as bi_av_publication_date,\r\n    IFNULL(web.bi_av_content, app.bi_av_content) as content_titel,\r\n    --IFNULL(web.av_content_duration, app.av_content_duration) as av_content_duration,\r\n    IFNULL(web.bi_av_content_id, app.bi_av_content_id) as bi_av_content_id,\r\n    IFNULL(web.url, app.url) as url,\r\n    IFNULL(web.wiedergabe, 0) as playbacks_web,\r\n    IFNULL(app.wiedergabe, 0) as playbacks_app,\r\n    IFNULL(web.wiedergabe, 0) + IFNULL(app.wiedergabe, 0) as playbacks,\r\n    IFNULL(web.av_content_type, app.av_content_type) as av_content_type\r\n  FROM\r\n    web FULL\r\n    JOIN app ON web.bi_av_content_id = app.bi_av_content_id\r\n)\r\nSELECT\r\n  *\r\nFROM\r\nsum_raw\r\nORDER BY\r\n  playbacks DESC\r\nLIMIT\r\n  100",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Top 100 App Audios & Videos Livestreams",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {
                "av_content_type": 7,
                "bi_av_content_id": 2,
                "bi_av_publication_date": 0,
                "content_titel": 1,
                "playbacks": 3,
                "playbacks_app": 6,
                "playbacks_web": 5,
                "url": 4
              },
              "renameByName": {
                "av_content_type": "Typ",
                "bi_av_content_id": "Sophora ID",
                "bi_av_publication_date": "Publiziert",
                "content_titel": "Titel",
                "playbacks": "Wiederg.",
                "playbacks_app": "App",
                "playbacks_web": "Web"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 99
        },
        "id": 59,
        "panels": [],
        "title": "Distribution",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": [],
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Desktop"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#75b9b0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Mobile Phone"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#95c1ac",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Tablet"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#63b7cc",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "N/A"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a7d9b0",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "TV"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#3c71a6",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Media Player"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#7ca784",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Set Top Box"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#327a8c",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Games Console"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#51e09d",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Vehicle Multimedia System"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#73d9cb",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sonstige"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5c6f84",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Data Collection Terminal"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5c8463",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Digital Home Assistant"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5c7c84",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "VR Headset"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#5c8471",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Digital Whiteboard"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a9d9d2",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "eReader"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#a7bfd9",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 14,
          "x": 5,
          "y": 100
        },
        "id": 96,
        "options": {
          "displayLabels": [
            "percent"
          ],
          "legend": {
            "displayMode": "table",
            "placement": "right",
            "showLegend": true,
            "values": [
              "percent",
              "value"
            ]
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "limit": 25,
            "values": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.3.1",
        "targets": [
          {
            "datasource": {
              "type": "grafana-bigquery-datasource",
              "uid": "qUaUqEk4k"
            },
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "with web as (\r\nSELECT \r\n  SUM(m_visits) as visits, \r\n  device_type \r\nFROM\r\n  ${distro_table:raw}\r\nWHERE $webFilter \r\nAND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote}\r\nAND device_type NOT LIKE '%N/A%'\r\nAND CASE WHEN \r\n      site_level2 = \"mdr.de\" \r\n      THEN (distribution = \"web\" OR distribution =\"amp\")\r\n      ELSE 1=1 END \r\nGROUP BY device_type),\r\napp as (\r\nSELECT\r\ndevice_type,\r\nSUM(m_visits) as visits\r\nFROM\r\n  ${distro_table:raw}\r\nWHERE $appFilter\r\n  AND date >= ${bq_timeframe_start:doublequote} AND date <= ${bq_timeframe_end:doublequote} \r\n  AND device_type NOT LIKE '%N/A%'\r\nGROUP BY device_type \r\n)\r\nSELECT IFNULL(web.visits,0) + IFNULL(app.visits,0) as visits, IFNULL(web.device_type,app.device_type) as device_type\r\nFROM web\r\nFULL JOIN app\r\nUSING(device_type)\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Distribution nach GerÃ¤tetyp - ${Zeitraumlabels:text}",
        "transparent": true,
        "type": "piechart"
      }
    ],
    "preload": false,
    "refresh": false,
    "schemaVersion": 40,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "text": "NDR",
            "value": "NDR"
          },
          "includeAll": false,
          "name": "LRA",
          "options": [
            {
              "selected": true,
              "text": "NDR",
              "value": "NDR"
            },
            {
              "selected": false,
              "text": "MDR",
              "value": "MDR"
            }
          ],
          "query": "NDR,MDR",
          "type": "custom"
        },
        {
          "current": {
            "text": "Alle Kapitel 1",
            "value": "Alle Kapitel 1"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "includeAll": false,
          "name": "Redaktionen",
          "options": [],
          "query": {
            "dataset": "Piano",
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$LRA' LIKE 'MDR') THEN (\r\n  SELECT 'Nachrichten'\r\n  UNION ALL\r\n  SELECT 'Sport'\r\n  UNION ALL\r\n  SELECT 'Sorbisches Programm'\r\n  UNION ALL\r\n  SELECT 'Jump'\r\n);\r\nELSEIF ('$LRA' LIKE 'NDR') THEN (\r\n  SELECT 'Alle Kapitel 1'\r\n  UNION ALL\r\n  SELECT 'Nachrichten'\r\n  UNION ALL\r\n  SELECT 'Kultur'\r\n);\r\nEND IF",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "page_chapter1",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "Profiles"
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "Hamburg",
            "value": "Hamburg"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "includeAll": false,
          "name": "Unterkapitel",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$LRA' LIKE 'MDR' AND '$Redaktionen' LIKE 'Nachrichten') THEN (\r\n  SELECT 'Aktuell'\r\n  UNION ALL\r\n  SELECT 'Sachsen'\r\n  UNION ALL\r\n  SELECT 'Sachsen-Anhalt'\r\n  UNION ALL\r\n  SELECT 'ThÃ¼ringen'\r\n);\r\nELSEIF ('$LRA' LIKE 'NDR' AND '$Redaktionen' LIKE 'Nachrichten') THEN (\r\n  SELECT 'Info'\r\n -- UNION ALL\r\n -- SELECT 'Hamburg'\r\n -- UNION ALL\r\n -- SELECT 'Mecklenburg-Vorpommern'\r\n -- UNION ALL\r\n -- SELECT 'Niedersachsen'\r\n -- UNION ALL\r\n -- SELECT 'Schleswig-Holstein'\r\n);\r\nELSEIF ('$LRA' LIKE 'NDR' AND '$Redaktionen' LIKE 'Alle Kapitel 1') THEN (\r\n  SELECT 'Hamburg'\r\n  UNION ALL\r\n  SELECT 'Mecklenburg-Vorpommern'\r\n  UNION ALL\r\n  SELECT 'Niedersachsen'\r\n  UNION ALL\r\n  SELECT 'Schleswig-Holstein'\r\n);\r\nELSE (SELECT 'Alle Kapitel 2');\r\nEND IF",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Sendung",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  --WHEN 'MDR' THEN 'Alle Sendungs-ID'\r\n  WHEN 'NDR' THEN ''\r\n  ELSE ''\r\n  END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "date >=Â  DATE_SUB(CURRENT_DATE(), INTERVALÂ  30 DAY) AND date < CURRENT_DATE()",
            "value": "date >=Â  DATE_SUB(CURRENT_DATE(), INTERVALÂ  30 DAY) AND date < CURRENT_DATE()"
          },
          "includeAll": false,
          "name": "Zeitraum",
          "options": [
            {
              "selected": false,
              "text": "Letzte Stunde",
              "value": "CAST(tmstp AS DATE) = CURRENT_DATE()"
            },
            {
              "selected": false,
              "text": "Heute",
              "value": "date = CURRENT_DATE"
            },
            {
              "selected": false,
              "text": "Heute -7d",
              "value": "date = CURRENT_DATE()"
            },
            {
              "selected": false,
              "text": "Gestern",
              "value": "date = DATE_SUB(CURRENT_DATE(), INTERVAL  1 DAY)"
            },
            {
              "selected": false,
              "text": "Letztes Wochenende",
              "value": "date >= (SELECTÂ saturdayÂ FROM(SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(),WEEK(MONDAY)) - INTERVAL 2 DAY) as saturday)) AND date <= (SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(),WEEK(MONDAY)) - INTERVAL 1 DAY) as sunday)"
            },
            {
              "selected": false,
              "text": "Letzte 7 Tage",
              "value": "date >=Â  DATE_SUB(CURRENT_DATE(), INTERVALÂ  7 DAY) AND date < CURRENT_DATE()"
            },
            {
              "selected": true,
              "text": "Letzte 30 Tage",
              "value": "date >=Â  DATE_SUB(CURRENT_DATE(), INTERVALÂ  30 DAY) AND date < CURRENT_DATE()"
            }
          ],
          "query": "Letzte Stunde : CAST(tmstp AS DATE) = CURRENT_DATE(),    Heute : date = CURRENT_DATE,  Heute -7d : date = CURRENT_DATE(), Gestern : date = DATE_SUB(CURRENT_DATE()\\, INTERVAL  1 DAY), Letztes Wochenende : Â date >= (SELECTÂ saturdayÂ FROM(SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\,WEEK(MONDAY)) - INTERVAL 2 DAY) as saturday)) AND date <= (SELECT DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\,WEEK(MONDAY)) - INTERVAL 1 DAY) as sunday), Letzte 7 Tage : date >=Â  DATE_SUB(CURRENT_DATE()\\, INTERVALÂ  7 DAY) AND date < CURRENT_DATE(), Letzte 30 Tage : date >=Â  DATE_SUB(CURRENT_DATE()\\, INTERVALÂ  30 DAY) AND date < CURRENT_DATE()",
          "type": "custom"
        },
        {
          "current": {
            "text": "Letzte 31-60 Tage",
            "value": "Letzte 31-60 Tage"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Vergleichszeitraum",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte Stunde' THEN 'Vorletzte Stunde'\r\n    WHEN 'Heute' THEN 'Gestern'\r\n    WHEN 'Heute -7d' THEN 'Heute vor 7 Tagen'\r\n    WHEN 'Gestern' THEN 'Vorgestern'\r\n    WHEN 'Letzte 7 Tage' THEN 'Letzte 8-14 Tage'\r\n    WHEN 'Letztes Wochenende' THEN 'Vorletztes Wochenende'\r\n    WHEN 'Letzte 30 Tage' THEN 'Letzte 31-60 Tage'\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "30",
            "value": "30"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Tage",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST(tage AS STRING) FROM(\r\nSELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte Stunde' THEN 0\r\n    WHEN 'Heute' THEN 1\r\n    WHEN 'Heute -7d' THEN 7\r\n    WHEN 'Gestern' THEN 7\r\n    WHEN 'Letzte 7 Tage' THEN 7\r\n    WHEN 'Letztes Wochenende' THEN 7\r\n    WHEN 'Letzte 30 Tage' THEN 30\r\nEND AS tage)\r\n\r\n\r\n\r\n\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "hh-app",
            "value": "hh-app"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "app_name",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN \"kultur-app\"\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'ndrinfo-app'\r\n          WHEN 'Hamburg' THEN 'hh-app'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mv-app'\r\n          WHEN 'Niedersachsen' THEN 'nds-app'\r\n          WHEN 'Schleswig-Holstein' THEN 'sh-app'\r\n          ELSE 'KEINE APP'\r\n        END\r\n        WHEN \"Alle Kapitel 1\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'ndrinfo-app'\r\n          WHEN 'Hamburg' THEN 'hh-app'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mv-app'\r\n          WHEN 'Niedersachsen' THEN 'nds-app'\r\n          WHEN 'Schleswig-Holstein' THEN 'sh-app'\r\n          ELSE 'KEINE APP'\r\n        END\r\n      ELSE 'KEINE APP'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'app_mdrsport'\r\n      WHEN \"Jump\" THEN 'app_mdrjump'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Aktuell' THEN 'app_mdraktuell'\r\n          WHEN 'Sachsen' THEN 'app_mdrsachsen'\r\n          WHEN 'Sachsen-Anhalt' THEN 'app_mdrsachsenanhalt'\r\n          WHEN 'ThÃ¼ringen' THEN 'app_mdrthueringen'\r\n          ELSE 'KEINE APP'\r\n      END\r\n      WHEN \"Sorbisches Programm\" THEN 'app_mdrserbja'\r\n      ELSE 'KEINE APP'\r\n    END\r\nEND\r\n-- radio-app, orchester-app, hh-app, kultur-app, sesamstraÃŸen-app, ndrinfo-app, sh-app, nds-app, n-joy-app, mv-app",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "ndr.de",
            "value": "ndr.de"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "site_level2",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'MDR' THEN \r\n    CASE '$Redaktionen'\r\n      WHEN 'Jump' THEN 'mdr.de'\r\n      ELSE 'mdr.de'\r\n    END\r\n  WHEN 'NDR' THEN 'ndr.de'\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Alle Kapitel 1",
            "value": "Alle Kapitel 1"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "page_chapter1",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$Redaktionen'\r\n  WHEN 'Nachrichten' THEN 'nachrichten'\r\n  WHEN 'Sport' THEN 'sport'\r\n  WHEN 'Sorbisches Programm' THEN 'sorbisches-programm'\r\n  WHEN 'Jump' THEN 'Jump'\r\n  WHEN 'Kultur' THEN 'kultur'\r\n  WHEN 'Alle Kapitel 1' THEN 'Alle Kapitel 1'\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Alle Kapitel 2",
            "value": "Alle Kapitel 2"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "page_chapter2",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'Alle Kapitel 2'\r\n          WHEN 'Hamburg' THEN 'hamburg'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mecklenburg-vorpommern'\r\n          WHEN 'Niedersachsen' THEN 'niedersachsen'\r\n          WHEN 'Schleswig-Holstein' THEN 'schleswig-holstein'\r\n          ELSE 'Alle Kapitel 2'\r\n        END\r\n      WHEN \"Alle Kapitel 1\" THEN 'Alle Kapitel 2'\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Jump\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Aktuell' THEN 'Alle Kapitel 2'\r\n          WHEN 'Sachsen' THEN 'sachsen'\r\n          WHEN 'Sachsen-Anhalt' THEN 'sachsen-anhalt'\r\n          WHEN 'ThÃ¼ringen' THEN 'thueringen'\r\n          ELSE 'Alle Kapitel 2'\r\n      END\r\n      WHEN \"Sorbisches Programm\" THEN ''\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\nEND\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Hamburg",
            "value": "Hamburg"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "sendungsid",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN 'Alle Sendungs-ID'\r\n      WHEN \"Alle Kapitel 1\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'Alle Sendungs-ID'\r\n          WHEN 'Hamburg' THEN 'Hamburg'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'Mecklenburg-Vorpommern'\r\n          WHEN 'Niedersachsen' THEN 'Niedersachsen'\r\n          WHEN 'Schleswig-Holstein' THEN 'Schleswig-Holstein'\r\n          ELSE 'Alle Sendungs-ID'\r\n        END\r\n      WHEN \"Nachrichten\" THEN 'Alle Sendungs-ID'\r\n      ELSE 'Alle Sendungs-ID'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'Alle Sendungs-ID'\r\n      WHEN \"Jump\" THEN 'Alle Sendungs-ID'\r\n      WHEN \"Nachrichten\" THEN  'Alle Sendungs-ID'\r\n      WHEN \"Sorbisches Programm\" THEN 'Alle Sendungs-ID'\r\n      ELSE 'Alle Sendungs-ID'\r\n    END\r\nEND\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "CONTAINS_SUBSTR(site_level2, \"hh-app\" ) AND  bi_av_broadcasting_type NOT IN (\"live\", \"Live\")",
            "value": "CONTAINS_SUBSTR(site_level2, \"hh-app\" ) AND  bi_av_broadcasting_type NOT IN (\"live\", \"Live\")"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_condition",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'MDR' THEN 'CONTAINS_SUBSTR(bi_av_url, \"$app_name_long\") AND  bi_av_broadcasting_type NOT IN (\"live\", \"Live\")'\r\n  WHEN 'NDR' THEN 'CONTAINS_SUBSTR(site_level2, \"$app_name\" ) AND  bi_av_broadcasting_type NOT IN (\"live\", \"Live\")'\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "KEINE APP",
            "value": "KEINE APP"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "app_name_long",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN 'kultur-app'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'ndrinfo-app'\r\n          WHEN 'Hamburg' THEN 'hh-app'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mv-app'\r\n          WHEN 'Niedersachsen' THEN 'nds-app'\r\n          WHEN 'Schleswig-Holstein' THEN 'sh-app'\r\n          ELSE 'KEINE APP'\r\n        END\r\n      ELSE 'KEINE APP'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'mdrde.sport.app_sport'\r\n      WHEN \"Jump\" THEN 'jump.jump.app_jump'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Aktuell' THEN 'mdrde.nachrichten.app_aktuell'\r\n          WHEN 'Sachsen' THEN 'mdrde.nachrichten.sachsen.app_sachsen'\r\n          WHEN 'Sachsen-Anhalt' THEN 'mdrde.nachrichten.sachsen-anhalt.app_sachsenanhalt'\r\n          WHEN 'ThÃ¼ringen' THEN 'mdrde.nachrichten.thueringen.app_thueringen'\r\n          ELSE 'KEINE APP'\r\n      END\r\n      WHEN \"Sorbisches Programm\" THEN 'mdrde.serbski-program.app_serbja'\r\n      ELSE 'KEINE APP'\r\n    END\r\nEND\r\n-- radio-app, orchester-app, hh-app, kultur-app, sesamstraÃŸen-app, ndrinfo-app, sh-app, nds-app, n-joy-app, mv-app",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "DAY",
            "value": "DAY"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Einheit",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte Stunde' THEN 'DAY'\r\n    WHEN 'Heute' THEN 'DAY'\r\n    WHEN 'Gestern' THEN 'DAY'\r\n    WHEN 'Letzte 7 Tage' THEN 'DAY'\r\n    WHEN 'Letztes Wochenende' THEN 'DAY'\r\n    WHEN 'Letzte 30 Tage' THEN 'DAY'\r\n    ELSE 'DAY'\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "_joined_daily",
            "value": "_joined_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_table_fever_curve",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte Stunde' THEN '_joined_last_hour'\r\n    WHEN 'Heute' THEN '_joined_today'\r\n    WHEN 'Heute -7d' THEN '_joined_today'\r\n    WHEN 'Gestern' THEN '_joined_daily'\r\n    WHEN 'Letzte 7 Tage' THEN '_joined_daily'\r\n    WHEN 'Letztes Wochenende' THEN '_joined_daily'\r\n    WHEN 'Letzte 30 Tage' THEN '_joined_daily'\r\n    ELSE '_joined_daily'\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "07.04.25",
            "value": "07.04.25"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "fromDay",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n  WHEN 'Heute' THEN FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\n  WHEN 'Gestern' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY))\r\n  WHEN 'Letzte 7 Tage' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY))\r\n  WHEN 'Letzte 30 Tage' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY))\r\n  WHEN 'Letztes Wochenende' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(MONDAY)), INTERVAL 2 DAY))\r\n  ELSE FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\nEND\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "07.05.25",
            "value": "07.05.25"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "toDay",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n  WHEN 'Heute' THEN FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\n  WHEN 'Gestern' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY))\r\n  WHEN 'Letzte 7 Tage' THEN FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\n  WHEN 'Letzte 30 Tage' THEN FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\n  WHEN 'Letztes Wochenende' THEN FORMAT_DATE(\"%d.%m.%y\", DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(MONDAY)), INTERVAL 1 DAY))\r\n  ELSE FORMAT_DATE(\"%d.%m.%y\", CURRENT_DATE())\r\nEND\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Alle Kapitel 2",
            "value": "Alle Kapitel 2"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_page_chapter2",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'Alle Kapitel 2'\r\n          WHEN 'Hamburg' THEN 'hamburg'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mecklenburg-vorpommern'\r\n          WHEN 'Niedersachsen' THEN 'niedersachsen'\r\n          WHEN 'Schleswig-Holstein' THEN 'schleswig-holstein'\r\n          ELSE 'Alle Kapitel 2'\r\n        END\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Jump\" THEN 'Alle Kapitel 2'\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Aktuell' THEN 'Alle Kapitel 2'\r\n          WHEN 'Sachsen' THEN 'sachsen'\r\n          WHEN 'Sachsen-Anhalt' THEN 'sachsen-anhalt'\r\n          WHEN 'ThÃ¼ringen' THEN 'thueringen'\r\n          ELSE 'Alle Kapitel 2'\r\n      END\r\n      WHEN \"Sorbisches Programm\" THEN 'Alle Kapitel 2'\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\nEND\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "site_level2 = 'ndr.de' AND page_chapter1 = 'Alle Kapitel 1' AND page_chapter2 = 'Alle Kapitel 2' AND sendungs_id = 'Hamburg' ",
            "value": "site_level2 = 'ndr.de' AND page_chapter1 = 'Alle Kapitel 1' AND page_chapter2 = 'Alle Kapitel 2' AND sendungs_id = 'Hamburg' "
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "webFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$Redaktionen' LIKE 'Sorbisches Programm') THEN (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND (CONTAINS_SUBSTR(page_chapter1, '$page_chapter1') OR CONTAINS_SUBSTR(page_chapter1, 'serbski-program')) AND CONTAINS_SUBSTR(page_chapter2, '$page_chapter2') AND sendungs_id = '$sendungsid'\"\r\n);\r\n--ELSEIF ('$Unterkapitel' LIKE 'Aktuell') THEN (\r\n--  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND CONTAINS_SUBSTR(page_chapter1, '$page_chapter1') AND NOT CONTAINS_SUBSTR(page_chapter2, 'sachsen') AND NOT CONTAINS_SUBSTR(page_chapter2, 'sachsen-anhalt') AND NOT CONTAINS_SUBSTR(page_chapter2, 'thueringen')\"\r\n--);\r\nELSE (\r\n  SELECT \"site_level2 = '$site_level2' AND page_chapter1 = '$page_chapter1' AND page_chapter2 = '$page_chapter2' AND sendungs_id = '$sendungsid' \"\r\n);\r\nEND IF\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "CONTAINS_SUBSTR(site_level2, 'ndr.de') AND 'Alle Kapitel 1' IN UNNEST(bi_av_page_chapter1_tags) AND 'Alle Kapitel 2' IN UNNEST(bi_av_page_chapter2_tags) AND TRUE AND bi_av_broadcasting_type NOT IN ('live', 'Live')",
            "value": "CONTAINS_SUBSTR(site_level2, 'ndr.de') AND 'Alle Kapitel 1' IN UNNEST(bi_av_page_chapter1_tags) AND 'Alle Kapitel 2' IN UNNEST(bi_av_page_chapter2_tags) AND TRUE AND bi_av_broadcasting_type NOT IN ('live', 'Live')"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "avwebFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$Redaktionen' LIKE 'Sorbisches Programm') THEN (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND (('$page_chapter1' IN UNNEST(bi_av_page_chapter1_tags) AND '$av_page_chapter2' IN UNNEST(bi_av_page_chapter2_tags)) OR ('serbski-program' IN UNNEST(bi_av_page_chapter1_tags) AND '$av_page_chapter2' IN UNNEST(bi_av_page_chapter2_tags))) AND '$sendungsid' IN UNNEST(sendungs_id_tags)  AND bi_av_broadcasting_type NOT IN ('live', 'Live')\"\r\n);\r\nELSE (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND '$page_chapter1' IN UNNEST(bi_av_page_chapter1_tags) AND '$av_page_chapter2' IN UNNEST(bi_av_page_chapter2_tags) AND $sendungs_id_tags_filter AND bi_av_broadcasting_type NOT IN ('live', 'Live')\"\r\n);\r\nEND IF\r\n\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "_joined_daily",
            "value": "_joined_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "articleTable",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \r\n  WHEN '${Zeitraum:text}' = \"Letzte Stunde\" THEN \"_joined_last_hour\"\r\n  WHEN '${Zeitraum:text}' = \"Gestern\" THEN \"_joined_daily\" --hier noch Unklarheit welche Tabelle die Richtige ist\r\n  WHEN '${Zeitraum:text}' = \"Heute\" THEN \"_joined_today\"\r\n  WHEN '${Zeitraum:text}' = \"Heute -7d\" THEN \"_joined_today\"\r\n  --WHEN '${Zeitraum:text}' = \"Letzte Stunde\" THEN \"_last_hour\"\r\n  ELSE \"_joined_daily\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "CONTAINS_SUBSTR(site_level2, 'ndr.de') AND 'Alle Kapitel 1' IN UNNEST(page_chapter1_tags) AND 'Alle Kapitel 2' IN UNNEST(page_chapter2_tags) AND 'Hamburg' in UNNEST(sendungs_id_tags)",
            "value": "CONTAINS_SUBSTR(site_level2, 'ndr.de') AND 'Alle Kapitel 1' IN UNNEST(page_chapter1_tags) AND 'Alle Kapitel 2' IN UNNEST(page_chapter2_tags) AND 'Hamburg' in UNNEST(sendungs_id_tags)"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "listwebFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$Redaktionen' LIKE 'Sorbisches Programm') THEN (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND (CONTAINS_SUBSTR(page_chapter1, '$page_chapter1') OR CONTAINS_SUBSTR(page_chapter1, 'serbski-program')) AND CONTAINS_SUBSTR(page_chapter2, '$list_page_chapter2') AND CONTAINS_SUBSTR(sendungs_id, '$sendungsid')\"\r\n);\r\nELSEIF ('$Unterkapitel' LIKE 'Aktuell') THEN (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND CONTAINS_SUBSTR(page_chapter1, '$page_chapter1') AND 'Alle Kapitel 2' IN UNNEST(page_chapter2_tags) AND '$sendungsid' IN UNNEST(sendungs_id_tags)\"\r\n);\r\nELSEIF ('$LRA' LIKE 'MDR' AND '$Redaktionen' LIKE 'Sport') THEN (\r\n  SELECT \"site_level2 = '$site_level2' AND '$page_chapter1' IN UNNEST(page_chapter1_tags) AND 'Alle Kapitel 2' IN UNNEST(page_chapter2_tags) AND '$sendungsid' IN UNNEST(sendungs_id_tags)\"\r\n);\r\nELSE (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND '$page_chapter1' IN UNNEST(page_chapter1_tags) AND '$page_chapter2' IN UNNEST(page_chapter2_tags) AND '$sendungsid' in UNNEST(sendungs_id_tags)\"\r\n);\r\nEND IF\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Alle Kapitel 2",
            "value": "Alle Kapitel 2"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "list_page_chapter2",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'NDR' THEN\r\n    CASE '$Redaktionen'\r\n      WHEN \"Kultur\" THEN ''\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Info'  THEN 'Alle Kapitel 2'\r\n          WHEN 'Hamburg' THEN 'hamburg'\r\n          WHEN 'Mecklenburg-Vorpommern' THEN 'mecklenburg-vorpommern'\r\n          WHEN 'Niedersachsen' THEN 'niedersachsen'\r\n          WHEN 'Schleswig-Holstein' THEN 'schleswig-holstein'\r\n          ELSE 'Alle Kapitel 2'\r\n        END\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\n  WHEN 'MDR' THEN \r\n    CASE \"${Redaktionen}\"\r\n      WHEN \"Sport\" THEN 'sport'\r\n      WHEN \"Jump\" THEN ''\r\n      WHEN \"Nachrichten\" THEN \r\n        CASE '$Unterkapitel'\r\n          WHEN 'Aktuell' THEN ''\r\n          WHEN 'Sachsen' THEN 'sachsen'\r\n          WHEN 'Sachsen-Anhalt' THEN 'sachsen-anhalt'\r\n          WHEN 'ThÃ¼ringen' THEN 'thueringen'\r\n          ELSE 'Alle Kapitel 2'\r\n      END\r\n      WHEN \"Sorbisches Programm\" THEN ''\r\n      ELSE 'Alle Kapitel 2'\r\n    END\r\nEND\r\n\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "site_level2 = 'hh-app' AND page_chapter1 = 'Alle Kapitel 1' AND page_chapter2 = 'Alle Kapitel 2'  AND sendungs_id = 'Alle Sendungs-ID'",
            "value": "site_level2 = 'hh-app' AND page_chapter1 = 'Alle Kapitel 1' AND page_chapter2 = 'Alle Kapitel 2'  AND sendungs_id = 'Alle Sendungs-ID'"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "appFilter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \"site_level2 = '$app_name' AND page_chapter1 = 'Alle Kapitel 1' AND page_chapter2 = 'Alle Kapitel 2'  AND sendungs_id = 'Alle Sendungs-ID'\"",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "date >= DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) AND date <= CURRENT_DATE()",
            "value": "date >= DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) AND date <= CURRENT_DATE()"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "avzeitraumListe",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN \"date >= CURRENT_DATE() AND date <= CURRENT_DATE()\"\r\n  WHEN \"Gestern\" THEN \"date >= DATE_SUB(CURRENT_DATE(),INTERVAL 1 DAY) AND date <= DATE_SUB(CURRENT_DATE(),INTERVAL 1 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"date  >= (SELECT saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_DATE(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday,      DATE(TIMESTAMP_TRUNC(CURRENT_DATE(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND date  <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_DATE(), WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday, DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) ) \"\r\n  WHEN \"Letzte 7 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(),INTERVAL 7 DAY) AND date <= CURRENT_DATE()\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) AND date <= CURRENT_DATE()\"\r\n  ELSE \"False\"\r\nEND",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "date >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)",
            "value": "date >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "comp_var",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"date = CURRENT_DATE()\"\r\n  WHEN \"Heute\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\"\r\n  WHEN \"Heute -7d\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Gestern\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 8 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"date >= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY),INTERVAL 7 DAY) as saturday) AND date <= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY), INTERVAL 7 DAY) as sunday)\"\r\n  WHEN \"Letzte 7 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"date >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "48",
            "value": "48"
          },
          "hide": 2,
          "includeAll": false,
          "name": "filled_size_headline",
          "options": [
            {
              "selected": true,
              "text": "48",
              "value": "48"
            }
          ],
          "query": "48",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "lim",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"\"\r\n  WHEN \"Gestern\" THEN  \"\"\r\n  WHEN \"Letzte Stunde\" THEN \"LIMIT 7\"\r\n  ELSE \"\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "daily_data",
            "value": "daily_data"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"adjusted_lagged_data\"\r\n  WHEN \"Heute -7d\" THEN  \"adjusted_lagged_data\"\r\n  WHEN \"Letzte Stunde\" THEN \"adjusted_lagged_data\"\r\n  WHEN \"Gestern\" THEN \"adjusted_lagged_data\"\r\n  ELSE \"daily_data\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "feverCurveDataset",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"_today_append\"\r\n  WHEN \"Heute -7d\" THEN  \"_today_append\"\r\n  WHEN \"Gestern\" THEN \"_today_append\"\r\n  WHEN \"Letzte Stunde\" THEN \"_today_append\"\r\n  ELSE \"\"\r\n  END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "bar",
            "value": "bar"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "type",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"line\"\r\n  WHEN \"Heute -7d\" THEN  \"line\"\r\n  WHEN \"Gestern\" THEN  \"line\"\r\n  WHEN \"Letzte Stunde\" THEN \"line\"\r\n  ELSE \"bar\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Letzte 30 Tage",
            "value": "Letzte 30 Tage"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Zeitraumlabels",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute -7d\" THEN \"Heute\"\r\n  ELSE \"${Zeitraum:text}\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "True",
            "value": "True"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Zeitraumfever",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \" EXTRACT(Hour from tmstp) <= ((SELECT EXTRACT(HOUR FROM max_tmstp) from min_time))\"\r\n  WHEN \"Heute -7d\" THEN  \" EXTRACT(Hour from tmstp) <= ((SELECT EXTRACT(HOUR FROM max_tmstp) from min_time))\"\r\n  WHEN \"Gestern\" THEN  \"EXTRACT(Hour from tmstp) <= 24\"\r\n  WHEN \"Letzte Stunde\" THEN \"DATETIME_DIFF((SELECT min_tmstp FROM min_time), tmstp, MINUTE) <=70 AND tmstp <= ((SELECT min_tmstp FROM min_time))\"\r\n  ELSE \"True\"\r\n  END\r\n",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "date >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)",
            "value": "date >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Vergleichszeitraum_var",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"date = CURRENT_DATE()\"\r\n  WHEN \"Heute\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\"\r\n  WHEN \"Heute -7d\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Gestern\" THEN \"date = DATE_SUB(CURRENT_DATE(), INTERVAL 8 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"date >= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY),INTERVAL 7 DAY) as saturday) AND date <= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY), INTERVAL 7 DAY) as sunday)\"\r\n  WHEN \"Letzte 7 Tage\" THEN \"date >= DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"date >=  DATE_SUB(CURRENT_DATE(), INTERVAL  60 DAY) AND date < DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY)\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "30",
            "value": "30"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "time_shift",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CAST(time_shift AS STRING) FROM(\r\nSELECT\r\nCASE\r\nWHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN 0\r\nWHEN \"${Zeitraum:text}\" = \"Heute\" THEN 1\r\nWHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN 7\r\nWHEN \"${Zeitraum:text}\" = \"Gestern\" THEN 7\r\nWHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN 7\r\nWHEN CONTAINS_SUBSTR(\"${Zeitraum:text}\", \"7\") THEN 7\r\nWHEN CONTAINS_SUBSTR(\"${Zeitraum:text}\", \"30\") THEN 30 END AS time_shift)",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Letzte 31-60 Tage",
            "value": "Letzte 31-60 Tage"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Vergleichszeitraumlabels",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"Vorletzte Stunde\"\r\n  WHEN \"Heute\" THEN \"Gestern\"\r\n  WHEN \"Heute -7d\" THEN \"Heute vor 7 Tagen\"\r\n  WHEN \"Gestern\" THEN \"Gestern vor 7 Tagen\"\r\n  WHEN \"Letztes Wochenende\" THEN \"Vorletztes Wochenende\"\r\n  WHEN \"Letzte 7 Tage\" THEN \"Letzte 8-14 Tage\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"Letzte 31-60 Tage\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Â EXTRACT(date from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) ",
            "value": "Â EXTRACT(date from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) "
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Zeitraumfever_app",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"Â EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY)\"\r\n  WHEN \"Heute\" THEN \"Â EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY)\"\r\n  WHEN \"Heute -7d\" THEN \"Â EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY)\"\r\n  WHEN \"Gestern\" THEN \"EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) AND EXTRACT(date from time) = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\"\r\n  WHEN \"Letztes Wochenende\" THEN \"Â EXTRACT(date from time) >= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 2 DAY),INTERVAL 0 DAY) as saturday) AND EXTRACT(date from time) <= (SELECT DATE_SUB(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), WEEK(MONDAY)) - INTERVAL 1 DAY), INTERVAL 0 DAY) as sunday)\"\r\n  WHEN \"Letzte 7 Tage\" THEN \"Â EXTRACT(date from time) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\"\r\n  WHEN \"Letzte 30 Tage\" THEN \"Â EXTRACT(date from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  30 DAY) \"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "Uhrzeit",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\nWHEN \"Heute\" THEN FORMAT_DATE('%H:%M', TIMESTAMP_ADD(MAX(tmstp), INTERVAL 1 SECOND))\r\nWHEN \"Heute -7d\" THEN FORMAT_DATE('%H:%M', TIMESTAMP_ADD(MAX(tmstp), INTERVAL 1 SECOND))\r\nELSE \"\" END\r\nFROM Piano.total_visits_today_append\r\nWHERE date = CURRENT_DATE()",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2025-05-07 11:55:05.609643",
            "value": "2025-05-07 11:55:05.609643"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "comp_fever",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  CASE \r\n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN CURRENT_DATETIME(\"Europe/Berlin\")\r\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN  CURRENT_DATETIME(\"Europe/Berlin\")--FORMAT_DATE('%Y-%m-%d-', yesterday)\r\n    ELSE  CURRENT_DATETIME(\"Europe/Berlin\")\r\n  END AS relevant_value\r\n--FROM `grafana.current_date`",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "daily_data",
            "value": "daily_data"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_kpi",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"adjusted_lagged_data\"\r\n  WHEN \"Heute -7d\" THEN  \"adjusted_lagged_data\"\r\n  WHEN \"Letzte Stunde\" THEN \"daily_data\"\r\n  WHEN \"Gestern\" THEN \"adjusted_lagged_data\"\r\n  ELSE \"daily_data\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "10",
            "value": "10"
          },
          "hide": 2,
          "includeAll": false,
          "name": "filled_size_big",
          "options": [
            {
              "selected": true,
              "text": "10",
              "value": "10"
            }
          ],
          "query": "10",
          "skipUrlSync": true,
          "type": "custom"
        },
        {
          "current": {
            "text": "_joined_daily",
            "value": "_joined_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_table_fever_curve_comp",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '${Zeitraum:text}'\r\n    WHEN 'Letzte Stunde' THEN '_last_2_hour'\r\n    WHEN 'Heute' THEN '_joined_daily'\r\n    WHEN 'Gestern' THEN '_joined_daily'\r\n    WHEN 'Letzte 7 Tage' THEN '_joined_daily'\r\n    WHEN 'Letztes Wochenende' THEN '_joined_daily'\r\n    WHEN 'Letzte 30 Tage' THEN '_joined_daily'\r\n    ELSE '_joined_daily'\r\nEND\r\n\r\n\r\n\r\n\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "(objekt_typ = \"video\" OR objekt_typ = \"Video\")",
            "value": "(objekt_typ = \"video\" OR objekt_typ = \"Video\")"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_app_condition_video",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$LRA\"\r\n        WHEN \"MDR\" THEN \"\"\"(av_content_type = \"video\" OR av_content_type = \"Video\")\"\"\"\r\n        WHEN \"NDR\" THEN \"\"\"(objekt_typ = \"video\" OR objekt_typ = \"Video\")\"\"\"\r\n        END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "(objekt_typ = \"audio\" OR objekt_typ = \"Audio\")",
            "value": "(objekt_typ = \"audio\" OR objekt_typ = \"Audio\")"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_app_condition_audio",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$LRA\"\r\n        WHEN \"MDR\" THEN \"\"\"(av_content_type = \"audio\" OR av_content_type = \"Audio\")\"\"\"\r\n        WHEN \"NDR\" THEN \"\"\"(objekt_typ = \"audio\" OR objekt_typ = \"Audio\")\"\"\"\r\n        END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "content_last_editoral_update",
            "value": "content_last_editoral_update"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_pub_date",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$LRA\"\r\n        WHEN \"MDR\" THEN \"\"\"bi_av_publication_date\"\"\"\r\n        WHEN \"NDR\" THEN \"\"\"content_last_editoral_update\"\"\"\r\n        END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "content_id_sophora",
            "value": "content_id_sophora"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_content_id",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$LRA\"\r\n        WHEN \"MDR\" THEN \"\"\"bi_av_content_id\"\"\"\r\n        WHEN \"NDR\" THEN \"\"\"content_id_sophora\"\"\"\r\n        END\r\n        ",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "content_titel",
            "value": "content_titel"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_content",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$LRA\"\r\n        WHEN \"MDR\" THEN \"\"\"bi_av_content\"\"\"\r\n        WHEN \"NDR\" THEN \"\"\"content_titel\"\"\"\r\n        END\r\n        ",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "(\"video\",\"audio\",\"podcast\") ",
            "value": "(\"video\",\"audio\",\"podcast\") "
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_on_demand_filter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$LRA\"\r\n        WHEN \"MDR\" THEN \"\"\"(\"ondemand\") \"\"\"\r\n        WHEN \"NDR\" THEN \"\"\"(\"video\",\"audio\",\"podcast\") \"\"\"\r\n        END\r\n        ",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "(\"audioLivestream\",\"videoLivestream\",\"videoEventlivestream\") ",
            "value": "(\"audioLivestream\",\"videoLivestream\",\"videoEventlivestream\") "
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_live_stream_filter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"$LRA\"\r\n        WHEN \"MDR\" THEN \"\"\"(\"live\") \"\"\"\r\n        WHEN \"NDR\" THEN \"\"\"(\"audioLivestream\",\"videoLivestream\",\"videoEventlivestream\") \"\"\"\r\n        END\r\n        ",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Piano.distro_joined_daily",
            "value": "Piano.distro_joined_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "distro_table",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"Piano.distro_joined_today\"\r\n  WHEN \"Heute -7d\" THEN  \"Piano.distro_joined_today\"\r\n  WHEN \"Letzte Stunde\" THEN \"Piano.distro_joined_last_hour\"\r\n  ELSE \"Piano.distro_joined_daily\"\r\n  END",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2025-04-07",
            "value": "2025-04-07"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "bq_timeframe_start",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  CASE \r\n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\r\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', today)\r\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', today)\r\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\r\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', last_saturday)\r\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', interval_7_day)\r\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', interval_30_day)\r\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\r\n  END AS relevant_value\r\nFROM `grafana.current_date`",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2025-05-06",
            "value": "2025-05-06"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "bq_timeframe_end",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  CASE \r\n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\r\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', today)\r\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', today)\r\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\r\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', last_sunday)\r\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 1 DAY))\r\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 1 DAY))\r\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\r\n  END AS relevant_value\r\nFROM `grafana.current_date`",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2025-03-08",
            "value": "2025-03-08"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "bq_comp_timeframe_start",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  CASE \r\n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\r\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\r\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 7 DAY))\r\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(yesterday, INTERVAL 7 DAY))\r\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(last_saturday, INTERVAL 7 DAY))\r\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_7_day, INTERVAL 7 DAY))\r\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_30_day, INTERVAL 30 DAY))\r\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\r\n  END AS relevant_value\r\nFROM `grafana.current_date`",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2025-04-06",
            "value": "2025-04-06"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "bq_comp_timeframe_end",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT\r\n  CASE \r\n    WHEN \"${Zeitraum:text}\" = \"Letzte Stunde\" THEN FORMAT_DATE('%Y-%m-%d', today)\r\n    WHEN \"${Zeitraum:text}\" = \"Heute\" THEN FORMAT_DATE('%Y-%m-%d', yesterday)\r\n    WHEN \"${Zeitraum:text}\" = \"Heute -7d\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(today, INTERVAL 7 DAY))\r\n    WHEN \"${Zeitraum:text}\" = \"Gestern\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(yesterday, INTERVAL 7 DAY))\r\n    WHEN \"${Zeitraum:text}\" = \"Letztes Wochenende\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(last_sunday, INTERVAL 7 DAY))\r\n    WHEN \"${Zeitraum:text}\" = \"Letzte 7 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_7_day, INTERVAL 1 DAY))\r\n    WHEN \"${Zeitraum:text}\" = \"Letzte 30 Tage\" THEN FORMAT_DATE('%Y-%m-%d', DATE_SUB(interval_30_day, INTERVAL 1 DAY))\r\n    ELSE FORMAT_DATE('%Y-%m-%d', today)\r\n  END AS relevant_value\r\nFROM `grafana.current_date`",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "2000-01-01",
            "value": "2000-01-01"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "bq_fever",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \"${Zeitraum:text}\"\r\n     WHEN \"Letzte Stunde\" THEN DATE(CURRENT_DATE)\r\n     WHEN \"Gestern\" THEN  DATE(DATE_SUB(CURRENT_DATE, INTERVAL 1 DAY))\r\n     WHEN \"Heute\" THEN  DATE(CURRENT_DATE)\r\n      WHEN \"Heute -7d\" THEN DATE(CURRENT_DATE)\r\n      ELSE DATE(2000,01,01)\r\n     END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_zeitraum_web",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"\"\r\n  WHEN \"Letzte Stunde\" THEN \"_last_hour\"\r\n  ELSE \"\"\r\n  END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_zeitraum_app",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" \r\n    THEN \"_last_hour_app\"\r\n  ELSE \"\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_vergleichs_zeitraum_web",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"_last_2_hour\"\r\n  ELSE \"\"\r\n  END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "",
            "value": ""
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_vergleichs_zeitraum_app",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\n  CASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" \r\n    THEN \"_last_2_hour_app\"\r\n  ELSE \"\"\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Piano.av_joined_daily",
            "value": "Piano.av_joined_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_zeitraum_av",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"Piano.av_joined_today\"\r\n  WHEN \"Heute -7d\" THEN  \"Piano.av_joined_today\"\r\n  WHEN \"Letzte Stunde\" THEN \"Piano.av_joined_last_hour\"\r\n  ELSE \"Piano.av_joined_daily\"\r\n  END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "Piano.av_joined_daily",
            "value": "Piano.av_joined_daily"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_vergleichszeitraum_av",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Letzte Stunde\" THEN \"Piano.av_last_2_hour\"\r\n  ELSE \"Piano.av_joined_daily\"\r\n  END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "daily_data",
            "value": "daily_data"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "dataset_not_fevercurve",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT \r\nCASE \"${Zeitraum:text}\"\r\n  WHEN \"Heute\" THEN  \"adjusted_lagged_data\"\r\n  WHEN \"Heute -7d\" THEN \"adjusted_lagged_data\"\r\n  WHEN \"Letzte Stunde\" THEN \"daily_data\"\r\n  ELSE \"daily_data\"\r\n  END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "CONTAINS_SUBSTR(site_level2, \"hh-app\" )",
            "value": "CONTAINS_SUBSTR(site_level2, \"hh-app\" )"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "av_condition_without_live",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE '$LRA'\r\n  WHEN 'MDR' THEN 'CONTAINS_SUBSTR(bi_av_url, \"$app_name_long\")'\r\n  WHEN 'NDR' THEN 'CONTAINS_SUBSTR(site_level2, \"$app_name\" )'\r\nEND",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "CONTAINS_SUBSTR(site_level2, 'ndr.de') AND 'Alle Kapitel 1' IN UNNEST(bi_av_page_chapter1_tags) AND 'Alle Kapitel 2' IN UNNEST(bi_av_page_chapter2_tags) AND TRUE",
            "value": "CONTAINS_SUBSTR(site_level2, 'ndr.de') AND 'Alle Kapitel 1' IN UNNEST(bi_av_page_chapter1_tags) AND 'Alle Kapitel 2' IN UNNEST(bi_av_page_chapter2_tags) AND TRUE"
          },
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "name": "avwebFilter_without_live",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "IF ('$Redaktionen' LIKE 'Sorbisches Programm') THEN (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND (('$page_chapter1' IN UNNEST(bi_av_page_chapter1_tags) AND '$av_page_chapter2' IN UNNEST(bi_av_page_chapter2_tags)) OR ('serbski-program' IN UNNEST(bi_av_page_chapter1_tags) AND '$av_page_chapter2' IN UNNEST(bi_av_page_chapter2_tags))) AND '$sendungsid' IN UNNEST(sendungs_id_tags)\"\r\n);\r\nELSE (\r\n  SELECT \"CONTAINS_SUBSTR(site_level2, '$site_level2') AND '$page_chapter1' IN UNNEST(bi_av_page_chapter1_tags) AND '$av_page_chapter2' IN UNNEST(bi_av_page_chapter2_tags) AND $sendungs_id_tags_filter\"\r\n);\r\nEND IF\r\n\r\n\r\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 2,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "'Hamburg Journal', 'NDR 90,3 Aktuell', 'Hamburg Journal 18:00 Uhr', 'Hamburg Heute - Nachrichten Podcast', '\"Feel Hamburg\"', 'Das Hamburger Hafenkonzert', 'Wi snackt platt', 'Der Hamburg-Kommentar', 'Narichten op Platt', 'Hamburg Sounds - der Podcast'",
            "value": "'Hamburg Journal', 'NDR 90,3 Aktuell', 'Hamburg Journal 18:00 Uhr', 'Hamburg Heute - Nachrichten Podcast', '\"Feel Hamburg\"', 'Das Hamburger Hafenkonzert', 'Wi snackt platt', 'Der Hamburg-Kommentar', 'Narichten op Platt', 'Hamburg Sounds - der Podcast'"
          },
          "definition": "",
          "hide": 2,
          "name": "ndr_sendungen_av_filter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT STRING_AGG(CONCAT(\"'\", REPLACE(shows, \"'\", \"\\\\\\\\'\"), \"'\"), \", \") FROM ndr-code-bi-dashboard.Piano.ndr_sendungen_av_filter, UNNEST(shows) AS shows\nWHERE sendung = \"$Unterkapitel\"\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        },
        {
          "current": {
            "text": "TRUE",
            "value": "TRUE"
          },
          "definition": "",
          "hide": 2,
          "name": "sendungs_id_tags_filter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE\nWHEN '$LRA' = 'NDR' AND '$sendungsid' != 'Alle Sendungs-ID' THEN 'TRUE'\nELSE \"'$sendungsid' IN UNNEST(sendungs_id_tags)\" END",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "type": "query"
        },
        {
          "current": {
            "text": "JOIN (SELECT DISTINCT sendungen FROM UNNEST(['Hamburg Journal', 'NDR 90,3 Aktuell', 'Hamburg Journal 18:00 Uhr', 'Hamburg Heute - Nachrichten Podcast', '\"Feel Hamburg\"', 'Das Hamburger Hafenkonzert', 'Wi snackt platt', 'Der Hamburg-Kommentar', 'Narichten op Platt', 'Hamburg Sounds - der Podcast']) AS sendungen) ON sendungen IN UNNEST(sendungs_id_tags)",
            "value": "JOIN (SELECT DISTINCT sendungen FROM UNNEST(['Hamburg Journal', 'NDR 90,3 Aktuell', 'Hamburg Journal 18:00 Uhr', 'Hamburg Heute - Nachrichten Podcast', '\"Feel Hamburg\"', 'Das Hamburger Hafenkonzert', 'Wi snackt platt', 'Der Hamburg-Kommentar', 'Narichten op Platt', 'Hamburg Sounds - der Podcast']) AS sendungen) ON sendungen IN UNNEST(sendungs_id_tags)"
          },
          "definition": "",
          "hide": 2,
          "name": "sendungen_av_join_filter",
          "options": [],
          "query": {
            "editorMode": "code",
            "format": 1,
            "location": "europe-west3",
            "project": "ndr-code-bi-dashboard",
            "rawQuery": true,
            "rawSql": "SELECT CASE \nWHEN '$LRA' = 'NDR' AND '$sendungsid' != 'Alle Sendungs-ID' THEN '''JOIN (SELECT DISTINCT sendungen FROM UNNEST([$ndr_sendungen_av_filter]) AS sendungen) ON sendungen IN UNNEST(sendungs_id_tags)'''\nELSE '' END\n",
            "refId": "tempvar",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": true,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-6h",
      "to": "now"
    },
    "timepicker": {
      "hidden": true,
      "refresh_intervals": []
    },
    "timezone": "",
    "title": "Web & App Dashboard fester Zeitraum mit LÃ¤nderfilter",
    "uid": "eel1plg03drlsa",
    "version": 7,
    "weekStart": "monday"
  }
}
