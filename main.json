{

  "schemaVersion": 39,
  "templating": {
    "list": [
      {
        "current": {
          "text": "NDR",
          "value": "NDR"
        },
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "hide": 2,
        "name": "LRA",
        "query": {
          "editorMode": "code",
          "format": 1,
          "location": "europe-west3",
          "project": "ndr-code-bi-dashboard",
          "rawQuery": true,
          "rawSql": "Select a.LRA  FROM\n(\nSELECT DISTINCT LRA FROM `ndr-code-bi-dashboard.Quintly.profiles` \n) as a \nORDER BY(\nCASE WHEN a.LRA like  LEFT(\"${__user.login}\",3)\nTHEN 1\nELSE 0\nEND\n) DESC",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        "type": "query"
      },
      {
        "current": {
          "text": "NDR Info",
          "value": "NDR Info"
        },
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "hide": 2,
        "name": "Profil",
        "query": {
          "dataset": "QuintlyTest",
          "editorMode": "code",
          "format": 1,
          "location": "europe-west3",
          "project": "ndr-code-bi-dashboard",
          "rawQuery": true,
          "rawSql": "SELECT a.profile \nFROM \n(SELECT profile FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE LRA = '$LRA' AND instagramId != 0) as a,\n(SELECT  Profil_IG FROM `ndr-code-bi-dashboard.Quintly.default-settings` WHERE LRA = '$LRA') as b\nORDER BY( \nCASE WHEN a.profile = b.Profil_IG THEN 1\nELSE 2\nEND\n), a.profile ASC",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "profile",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "profileTest"
        },
        "type": "query"
      },
      {
        "current": {
          "text": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  7 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()",
          "value": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  7 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()"
        },
        "hide": 2,
        "name": "Zeitraum",
        "options": [
          {
            "selected": true,
            "text": "Gestern",
            "value": "EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE()\\, INTERVAL  1 DAY)"
          },
          {
            "selected": false,
            "text": "Letzte 7 Tage",
            "value": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE()\\, INTERVAL  7 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()"
          },
          {
            "selected": false,
            "text": "Letztes Wochenende",
            "value": "DATE(time) >= (  SELECT    saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday\\,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND DATE(time) <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday\\,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )"
          },
          {
            "selected": false,
            "text": "Letzte 30 Tage",
            "value": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE()\\, INTERVAL  30 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()"
          }
        ],
        "query": "Gestern : EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE()\\, INTERVAL  1 DAY), Letzte 7 Tage : EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE()\\, INTERVAL  7 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE(), Letztes Wochenende :  DATE(time) >= (  SELECT    saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday\\,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND DATE(time) <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday\\,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) ), Letzte 30 Tage : EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE()\\, INTERVAL  30 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()",
        "type": "custom"
      },
      {
        "current": {
          "text": "12.05.2025 | 13:06 Uhr",
          "value": "12.05.2025 | 13:06 Uhr"
        },
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "hide": 2,
        "name": "lastUpdate",
        "query": {
          "editorMode": "code",
          "format": 1,
          "location": "europe-west3",
          "project": "ndr-code-bi-dashboard",
          "rawQuery": true,
          "rawSql": "SELECT \r\nCASE MAX(last_update)\r\n  WHEN NULL THEN \"N/A\"\r\n  ELSE FORMAT_DATETIME(\"%d.%m.%Y | %H:%M Uhr\", DATETIME(MAX(last_update),\"Europe/Berlin\"))\r\n  END\r\nFROM `ndr-code-bi-dashboard.Quintly.instagram`\r\nWHERE profileId = $profileID  ",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        "type": "query"
      },
      {
        "current": {
          "text": "8",
          "value": "8"
        },
        "hide": 2,
        "name": "filled_size",
        "options": [
          {
            "selected": true,
            "text": "8",
            "value": "8"
          }
        ],
        "query": "8 : 8",
        "type": "custom"
      },
      {
        "current": {
          "text": "10",
          "value": "10"
        },
        "hide": 2,
        "name": "filled_size_big",
        "options": [
          {
            "selected": true,
            "text": "10",
            "value": "10"
          }
        ],
        "query": "10 : 10",
        "type": "custom"
      },
      {
        "current": {
          "text": "404008",
          "value": "404008"
        },
        "datasource": {
          "type": "grafana-bigquery-datasource",
          "uid": "qUaUqEk4k"
        },
        "hide": 2,
        "name": "profileID",
        "query": {
          "dataset": "QuintlyTest",
          "editorMode": "code",
          "format": 1,
          "location": "europe-west3",
          "project": "ndr-code-bi-dashboard",
          "rawQuery": true,
          "rawSql": "SELECT CAST(instagramID AS STRING) FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE profile = '''$Profil''' ",
          "refId": "tempvar",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "facebookID",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "instagramID",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "youtubeID",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "profileTest"
        },
        "type": "query"
      },
      {
        "current": {
          "text": "7",
          "value": "7"
        },
        "hide": 2,
        "name": "filled_size_small",
        "options": [
          {
            "selected": true,
            "text": "7",
            "value": "7"
          }
        ],
        "query": "7 : 7",
        "type": "custom"
      },
      {
        "current": {
          "text": "48",
          "value": "48"
        },
        "hide": 2,
        "name": "filled_size_headline",
        "options": [
          {
            "selected": true,
            "text": "48",
            "value": "48"
          }
        ],
        "query": "48 : 48",
        "type": "custom"
      },
      {
        "current": {
          "text": "40",
          "value": "40"
        },
        "hide": 2,
        "name": "filled_size_headline_small",
        "options": [
          {
            "selected": true,
            "text": "40",
            "value": "40"
          }
        ],
        "query": "40 : 40",
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timezone": "utc",
  "title": "NDR Info | TV Instagram | Top Fotos und Karusselle Demo"
}