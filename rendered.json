{
   "panels": [
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "gridPos": {
            "h": 4,
            "w": 2,
            "x": 0,
            "y": 0
         },
         "id": 1,
         "options": {
            "code": {
               "language": "plaintext",
               "showLineNumbers": false,
               "showMiniMap": false
            }
         },
         "pluginVersion": "v11.4.0",
         "title": "",
         "type": "text"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "",
         "gridPos": {
            "h": 3,
            "w": 10,
            "x": 2,
            "y": 0
         },
         "id": 2,
         "options": {
            "code": {
               "language": "plaintext",
               "showLineNumbers": false,
               "showMiniMap": false
            },
            "content": "<font size=\"8\" style=\"color:rgb(214,41,118);\">Instagram</font><font size=\"8\">  ${Profil} </font>",
            "mode": "markdown"
         },
         "pluginVersion": "v11.4.0",
         "title": "",
         "transparent": true,
         "type": "text"
      },
      {
         "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
         },
         "description": "",
         "fieldConfig": {
            "defaults": {
               "color": {
                  "fixedColor": "#d62976",
                  "mode": "fixed"
               }
            },
            "overrides": [
               {
                  "matcher": {
                     "id": "byName",
                     "options": "totalInteractions"
                  },
                  "properties": [
                     {
                        "id": "displayName",
                        "value": "Interaktionen"
                     }
                  ]
               }
            ]
         },
         "gridPos": {
            "h": 4,
            "w": 4,
            "x": 13,
            "y": 0
         },
         "id": 3,
         "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "center",
            "orientation": "auto",
            "reduceOptions": {
               "calcs": [
                  "last"
               ],
               "fields": "/.*/",
               "values": false
            },
            "showPercentChange": false,
            "textMode": "value_and_name",
            "wideLayout": true
         },
         "pluginVersion": "v11.4.0",
         "targets": [
            {
               "dataset": "Quintly",
               "datasource": {
                  "type": "grafana-bigquery-datasource",
                  "uid": "qUaUqEk4k"
               },
               "editorMode": "code",
               "format": 1,
               "location": "europe-west3",
               "project": "ndr-code-bi-dashboard",
               "rawQuery": true,
               "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size_big - CHAR_LENGTH(CAST(totalInteractions as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(totalInteractions) as NUMERIC)) AS STRING), \",\", \".\")) totalInteractions FROM\n(\nSELECT \n  SUM(CASE WHEN type = 'Reel' THEN IFNULL(totalInteractions,0) ELSE IFNULL(engagement,0) END) AS totalInteractions\nFROM `ndr-code-bi-dashboard.Quintly.instagramInsightsOwnPosts`\nWHERE profileId = $profileID \nAND $Zeitraum \n)",
               "refId": "A",
               "sql": {
                  "columns": [
                     {
                        "parameters": [
                           {
                              "name": "page_engaged_users",
                              "type": "functionParameter"
                           }
                        ],
                        "type": "function"
                     }
                  ],
                  "groupBy": [
                     {
                        "property": {
                           "type": "string"
                        },
                        "type": "groupBy"
                     }
                  ],
                  "limit": 50,
                  "whereJsonTree": {
                     "children1": {
                        "baa899a9-cdef-4012-b456-718364767b70": {
                           "properties": {
                              "field": "profileId",
                              "operator": "equal",
                              "value": [
                                 null
                              ],
                              "valueSrc": [
                                 "value"
                              ],
                              "valueType": [
                                 "number"
                              ]
                           },
                           "type": "rule"
                        }
                     },
                     "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                     "type": "group"
                  }
               },
               "table": "facebookInsights"
            }
         ],
         "thresholds": {
            "mode": "absolute",
            "steps": [
               {
                  "color": "green",
                  "value": null
               }
            ]
         },
         "title": "KPI Visits",
         "transformations": [
            {
               "id": "organize",
               "options": {
                  "excludeByName": { },
                  "indexByName": { },
                  "renameByName": {
                     "f0_": "Summe",
                     "page_impressions_unique": "Potentielle Reichweite"
                  }
               }
            }
         ],
         "transparent": true,
         "type": "stat"
      },
      {
         "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
         },
         "description": "",
         "fieldConfig": {
            "defaults": {
               "color": {
                  "fixedColor": "#d62976",
                  "mode": "fixed"
               }
            },
            "overrides": [
               {
                  "matcher": {
                     "id": "byName",
                     "options": "Reach"
                  },
                  "properties": [
                     {
                        "id": "displayName",
                        "value": "⌀ Pot. Reichweite pro Post"
                     }
                  ]
               }
            ]
         },
         "gridPos": {
            "h": 4,
            "w": 4,
            "x": 17,
            "y": 0
         },
         "id": 4,
         "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "center",
            "orientation": "auto",
            "reduceOptions": {
               "calcs": [
                  "last"
               ],
               "fields": "/.*/",
               "values": false
            },
            "showPercentChange": false,
            "textMode": "value_and_name",
            "wideLayout": true
         },
         "pluginVersion": "v11.4.0",
         "targets": [
            {
               "dataset": "Quintly",
               "datasource": {
                  "type": "grafana-bigquery-datasource",
                  "uid": "qUaUqEk4k"
               },
               "editorMode": "code",
               "format": 1,
               "location": "europe-west3",
               "project": "ndr-code-bi-dashboard",
               "rawQuery": true,
               "rawSql": "SELECT  CONCAT(REPEAT(\" \", $filled_size - CHAR_LENGTH(CAST(Reach as STRING))), REPLACE(CAST(FORMAT(\"%'.0f\", CAST(ROUND(Reach) as NUMERIC)) AS STRING), \",\", \".\"))as  Reach FROM\n(\nSELECT \n  ROUND(AVG(reach)) AS Reach \nFROM `ndr-code-bi-dashboard.Quintly.instagramInsightsOwnPosts`\nWHERE profileId = $profileID \nAND $Zeitraum \n)",
               "refId": "A",
               "sql": {
                  "columns": [
                     {
                        "parameters": [
                           {
                              "name": "page_engaged_users",
                              "type": "functionParameter"
                           }
                        ],
                        "type": "function"
                     }
                  ],
                  "groupBy": [
                     {
                        "property": {
                           "type": "string"
                        },
                        "type": "groupBy"
                     }
                  ],
                  "limit": 50,
                  "whereJsonTree": {
                     "children1": {
                        "baa899a9-cdef-4012-b456-718364767b70": {
                           "properties": {
                              "field": "profileId",
                              "operator": "equal",
                              "value": [
                                 null
                              ],
                              "valueSrc": [
                                 "value"
                              ],
                              "valueType": [
                                 "number"
                              ]
                           },
                           "type": "rule"
                        }
                     },
                     "id": "b8aaaa8b-0123-4456-b89a-b18364767b70",
                     "type": "group"
                  }
               },
               "table": "facebookInsights"
            }
         ],
         "thresholds": {
            "mode": "absolute",
            "steps": [
               {
                  "color": "green",
                  "value": null
               }
            ]
         },
         "title": "",
         "transparent": true,
         "type": "stat"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "gridPos": {
            "h": 2,
            "w": 3,
            "x": 21,
            "y": 0
         },
         "id": 5,
         "options": {
            "code": {
               "language": "plaintext",
               "showLineNumbers": false,
               "showMiniMap": false
            },
            "content": "Letztes Update: <br> \r\n${lastUpdate}",
            "mode": "markdown"
         },
         "pluginVersion": "v11.4.0",
         "title": "",
         "transparent": true,
         "type": "text"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "",
         "gridPos": {
            "h": 2,
            "w": 12,
            "x": 0,
            "y": 4
         },
         "id": 6,
         "options": {
            "code": {
               "language": "plaintext",
               "showLineNumbers": false,
               "showMiniMap": false
            },
            "content": "<span style=\"font-family:Arial; font-size:2.3em;\">Top Fotos und Karusselle | ${Zeitraum:text}</span>",
            "mode": "markdown"
         },
         "pluginVersion": "v11.4.0",
         "title": "",
         "transparent": true,
         "type": "text"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "",
         "gridPos": {
            "h": 2,
            "w": 12,
            "x": 12,
            "y": 4
         },
         "id": 7,
         "options": {
            "code": {
               "language": "plaintext",
               "showLineNumbers": false,
               "showMiniMap": false
            },
            "content": "<p style=\"text-align: right\"><font size=\"2\">Legende: &nbsp;🖼️ = Foto &nbsp;&nbsp; 🎠 = Karussell &nbsp;&nbsp;</font><font size=\"6\"> </font>",
            "mode": "markdown"
         },
         "pluginVersion": "v11.4.0",
         "title": "",
         "transparent": true,
         "type": "text"
      },
      {
         "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "qUaUqEk4k"
         },
         "description": "",
         "fieldConfig": {
            "defaults": {
               "thresholds": {
                  "mode": "absolute",
                  "steps": [
                     {
                        "color": "green",
                        "value": null
                     },
                     {
                        "color": "red",
                        "value": 80
                     }
                  ]
               }
            },
            "overrides": [
               {
                  "matcher": {
                     "id": "byName",
                     "options": "time"
                  },
                  "properties": [
                     {
                        "id": "unit",
                        "value": "time: DD.MM | HH:mm \\U\\h\\r"
                     }
                  ]
               },
               {
                  "matcher": {
                     "id": "byType",
                     "options": "number"
                  },
                  "properties": [
                     {
                        "id": "unit",
                        "value": "locale"
                     }
                  ]
               }
            ]
         },
         "gridPos": {
            "h": 22,
            "w": 24,
            "x": 0,
            "y": 6
         },
         "id": 8,
         "options": {
            "afterRender": "",
            "content": "<table>\n  <thead>\n    <tr>\n      <th id=\"timestamp\">Datum</th>\n      <th id=\"post\">Post</th>\n      <th id=\"engagement\">▼ Interaktionen</th>\n      <th id=\"reach\">pot. Reichweite</th>\n      <th id=\"type\">Typ</th>\n    </tr>\n  </thead>\n  \n  <tbody>\n    {{#each data}}\n    <tr>\n      <td class=\"time\" data-time=\"{{this.time}}\">{{this.time}}</td>\n      <td id=\"post\">{{this.Post}}</td>\n      <td class=\"number\">{{this.engagement}}</td>\n      <td class=\"number\">{{this.PotReichweite}}</td>\n      <td>\n        {{#if (eq this.Typ \"Image\")}}\n          🖼️\n        {{else if (eq this.Typ \"Carousel\")}}\n           🎠\n        {{else}}\n          {{this.Typ}}\n        {{/if}}\n      </td>\n    </tr>\n    {{/each}}\n  </tbody>\n</table>",
            "contentPartials": [ ],
            "defaultContent": "The query didn't return any results.",
            "editor": {
               "format": "auto",
               "language": "markdown"
            },
            "editors": [
               "styles"
            ],
            "externalStyles": [ ],
            "helpers": "",
            "renderMode": "allRows",
            "styles": "<style>\n  table {\n    font-size: 25px;\n    max-width: 1900px;\n    border-collapse: collapse;\n  }\n\n  th {\n    font-size: 20px;\n    font-weight: bold;\n    text-align: left;\n  }\n\n  td {\n    font-size: 25px;\n    padding: 8px;\n    height: 90px;\n  }\n\n  td.time {\n    font-weight: bold;\n    font-size: 20px;\n    min-width: 200px;\n  }\n\n  th#engagement {\n    width: 175px;\n  }\n\n  #reach {\n    width: 165.8px;\n  }\n\n  td.videoViews {\n    width: 124px;\n  }\n  td.number{\n    text-align: center;\n  }\n  td.type {\n    width: 100px;\n  }\n\n  td#post {\n    width: auto;\n    word-wrap: break-word;\n    white-space: normal;\n}\n</style>\n\n\n",
            "wrap": true
         },
         "pluginVersion": "5.6.0",
         "targets": [
            {
               "datasource": {
                  "type": "grafana-bigquery-datasource",
                  "uid": "qUaUqEk4k"
               },
               "editorMode": "code",
               "format": 1,
               "location": "europe-west3",
               "project": "ndr-code-bi-dashboard",
               "rawQuery": true,
               "rawSql": "SELECT\r\n  time, \r\n  CASE \r\n    WHEN LENGTH(REPLACE(SPLIT(message, '\\n')[SAFE_OFFSET(0)], '�', '')) > 95 \r\n    THEN CONCAT(LEFT(REPLACE(SPLIT(message, '\\n')[SAFE_OFFSET(0)], '�', ''), 95), '...')\r\n    ELSE REPLACE(SPLIT(message, '\\n')[SAFE_OFFSET(0)], '�', '')\r\nEND AS Post,\r\n  -- REPLACE(message, '�', '') AS Post, \r\n  CASE\r\n    WHEN type = 'Reel' THEN totalInteractions\r\n    ELSE engagement\r\n  END AS engagement,  reach AS PotReichweite,\r\n  type AS Typ\r\nFROM `ndr-code-bi-dashboard.Quintly.instagramInsightsOwnPosts`\r\nWHERE profileId = $profileID\r\nAND (type = 'Image' OR type = 'Carousel')\r\nAND $Zeitraum\r\nORDER BY engagement DESC LIMIT 7",
               "refId": "A",
               "sql": {
                  "columns": [
                     {
                        "parameters": [ ],
                        "type": "function"
                     }
                  ],
                  "groupBy": [
                     {
                        "property": {
                           "type": "string"
                        },
                        "type": "groupBy"
                     }
                  ],
                  "limit": 50
               }
            }
         ],
         "title": "",
         "transformations": [
            {
               "id": "organize",
               "options": {
                  "excludeByName": { },
                  "includeByName": { },
                  "indexByName": { },
                  "renameByName": {
                     "PotReichweite": "",
                     "engagement": "",
                     "reach": "Pot. Reichweite",
                     "time": "",
                     "type": "Typ"
                  }
               }
            }
         ],
         "transparent": true,
         "type": "marcusolsson-dynamictext-panel"
      }
   ],
   "schemaVersion": 39,
   "templating": {
      "list": [
         {
            "current": {
               "text": "NDR",
               "value": "NDR"
            },
            "datasource": {
               "type": "grafana-bigquery-datasource",
               "uid": "qUaUqEk4k"
            },
            "hide": 2,
            "name": "LRA",
            "query": {
               "editorMode": "code",
               "format": 1,
               "location": "europe-west3",
               "project": "ndr-code-bi-dashboard",
               "rawQuery": true,
               "rawSql": "Select a.LRA  FROM\n(\nSELECT DISTINCT LRA FROM `ndr-code-bi-dashboard.Quintly.profiles` \n) as a \nORDER BY(\nCASE WHEN a.LRA like  LEFT(\"${__user.login}\",3)\nTHEN 1\nELSE 0\nEND\n) DESC",
               "sql": {
                  "columns": [
                     {
                        "parameters": [ ],
                        "type": "function"
                     }
                  ],
                  "groupBy": [
                     {
                        "property": {
                           "type": "string"
                        },
                        "type": "groupBy"
                     }
                  ],
                  "limit": 50
               }
            },
            "type": "query"
         },
         {
            "current": {
               "text": "NDR Info",
               "value": "NDR Info"
            },
            "datasource": {
               "type": "grafana-bigquery-datasource",
               "uid": "qUaUqEk4k"
            },
            "hide": 2,
            "name": "Profil",
            "query": {
               "dataset": "QuintlyTest",
               "editorMode": "code",
               "format": 1,
               "location": "europe-west3",
               "project": "ndr-code-bi-dashboard",
               "rawQuery": true,
               "rawSql": "SELECT a.profile \nFROM \n(SELECT profile FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE LRA = '$LRA' AND instagramId != 0) as a,\n(SELECT  Profil_IG FROM `ndr-code-bi-dashboard.Quintly.default-settings` WHERE LRA = '$LRA') as b\nORDER BY( \nCASE WHEN a.profile = b.Profil_IG THEN 1\nELSE 2\nEND\n), a.profile ASC",
               "sql": {
                  "columns": [
                     {
                        "parameters": [
                           {
                              "name": "profile",
                              "type": "functionParameter"
                           }
                        ],
                        "type": "function"
                     }
                  ],
                  "groupBy": [
                     {
                        "property": {
                           "type": "string"
                        },
                        "type": "groupBy"
                     }
                  ],
                  "limit": 50
               },
               "table": "profileTest"
            },
            "type": "query"
         },
         {
            "current": {
               "text": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  7 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()",
               "value": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE(), INTERVAL  7 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()"
            },
            "hide": 2,
            "name": "Zeitraum",
            "options": [
               {
                  "selected": true,
                  "text": "Gestern",
                  "value": "EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE()\\, INTERVAL  1 DAY)"
               },
               {
                  "selected": false,
                  "text": "Letzte 7 Tage",
                  "value": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE()\\, INTERVAL  7 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()"
               },
               {
                  "selected": false,
                  "text": "Letztes Wochenende",
                  "value": "DATE(time) >= (  SELECT    saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday\\,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND DATE(time) <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday\\,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )"
               },
               {
                  "selected": false,
                  "text": "Letzte 30 Tage",
                  "value": "EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE()\\, INTERVAL  30 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()"
               }
            ],
            "query": "Gestern : EXTRACT(DATE from time) = DATE_SUB(CURRENT_DATE()\\, INTERVAL  1 DAY), Letzte 7 Tage : EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE()\\, INTERVAL  7 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE(), Letztes Wochenende :  DATE(time) >= (  SELECT    saturday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday\\,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) )  AND DATE(time) <= (  SELECT    sunday  FROM (    SELECT      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 1 DAY) AS sunday\\,      DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP()\\, WEEK(MONDAY)) - INTERVAL 2 DAY) AS saturday ) ), Letzte 30 Tage : EXTRACT(DATE from time) >=  DATE_SUB(CURRENT_DATE()\\, INTERVAL  30 DAY) AND EXTRACT(DATE from time) < CURRENT_DATE()",
            "type": "custom"
         },
         {
            "current": {
               "text": "12.05.2025 | 13:06 Uhr",
               "value": "12.05.2025 | 13:06 Uhr"
            },
            "datasource": {
               "type": "grafana-bigquery-datasource",
               "uid": "qUaUqEk4k"
            },
            "hide": 2,
            "name": "lastUpdate",
            "query": {
               "editorMode": "code",
               "format": 1,
               "location": "europe-west3",
               "project": "ndr-code-bi-dashboard",
               "rawQuery": true,
               "rawSql": "SELECT \r\nCASE MAX(last_update)\r\n  WHEN NULL THEN \"N/A\"\r\n  ELSE FORMAT_DATETIME(\"%d.%m.%Y | %H:%M Uhr\", DATETIME(MAX(last_update),\"Europe/Berlin\"))\r\n  END\r\nFROM `ndr-code-bi-dashboard.Quintly.instagram`\r\nWHERE profileId = $profileID  ",
               "sql": {
                  "columns": [
                     {
                        "parameters": [ ],
                        "type": "function"
                     }
                  ],
                  "groupBy": [
                     {
                        "property": {
                           "type": "string"
                        },
                        "type": "groupBy"
                     }
                  ],
                  "limit": 50
               }
            },
            "type": "query"
         },
         {
            "current": {
               "text": "8",
               "value": "8"
            },
            "hide": 2,
            "name": "filled_size",
            "options": [
               {
                  "selected": true,
                  "text": "8",
                  "value": "8"
               }
            ],
            "query": "8 : 8",
            "type": "custom"
         },
         {
            "current": {
               "text": "10",
               "value": "10"
            },
            "hide": 2,
            "name": "filled_size_big",
            "options": [
               {
                  "selected": true,
                  "text": "10",
                  "value": "10"
               }
            ],
            "query": "10 : 10",
            "type": "custom"
         },
         {
            "current": {
               "text": "404008",
               "value": "404008"
            },
            "datasource": {
               "type": "grafana-bigquery-datasource",
               "uid": "qUaUqEk4k"
            },
            "hide": 2,
            "name": "profileID",
            "query": {
               "dataset": "QuintlyTest",
               "editorMode": "code",
               "format": 1,
               "location": "europe-west3",
               "project": "ndr-code-bi-dashboard",
               "rawQuery": true,
               "rawSql": "SELECT CAST(instagramID AS STRING) FROM `ndr-code-bi-dashboard.Quintly.profiles` WHERE profile = '''$Profil''' ",
               "refId": "tempvar",
               "sql": {
                  "columns": [
                     {
                        "parameters": [
                           {
                              "name": "facebookID",
                              "type": "functionParameter"
                           }
                        ],
                        "type": "function"
                     },
                     {
                        "parameters": [
                           {
                              "name": "instagramID",
                              "type": "functionParameter"
                           }
                        ],
                        "type": "function"
                     },
                     {
                        "parameters": [
                           {
                              "name": "youtubeID",
                              "type": "functionParameter"
                           }
                        ],
                        "type": "function"
                     }
                  ],
                  "groupBy": [
                     {
                        "property": {
                           "type": "string"
                        },
                        "type": "groupBy"
                     }
                  ],
                  "limit": 50
               },
               "table": "profileTest"
            },
            "type": "query"
         },
         {
            "current": {
               "text": "7",
               "value": "7"
            },
            "hide": 2,
            "name": "filled_size_small",
            "options": [
               {
                  "selected": true,
                  "text": "7",
                  "value": "7"
               }
            ],
            "query": "7 : 7",
            "type": "custom"
         },
         {
            "current": {
               "text": "48",
               "value": "48"
            },
            "hide": 2,
            "name": "filled_size_headline",
            "options": [
               {
                  "selected": true,
                  "text": "48",
                  "value": "48"
               }
            ],
            "query": "48 : 48",
            "type": "custom"
         },
         {
            "current": {
               "text": "40",
               "value": "40"
            },
            "hide": 2,
            "name": "filled_size_headline_small",
            "options": [
               {
                  "selected": true,
                  "text": "40",
                  "value": "40"
               }
            ],
            "query": "40 : 40",
            "type": "custom"
         }
      ]
   },
   "time": {
      "from": "now-6h",
      "to": "now"
   },
   "timezone": "utc",
   "title": "NDR Info | TV Instagram | Top Fotos und Karusselle Demo"
}
